{"ast":null,"code":"import \"antd/es/collapse/style\";\nimport _Collapse from \"antd/es/collapse\";\nimport \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport _defineProperty from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/src/library/form-render/asField.jsx\",\n    _this = this;\n\nimport React, { useState, memo } from \"react\";\nimport cx from \"classnames\";\nimport { getValidateText } from \"./validate\";\nimport { convertValue, isHidden, getEnum } from \"./utils\";\nimport { converLayout } from \"~utils/helper\";\nimport { IconFont } from \"~components\"; // asField拆分成逻辑组件和展示组件，从而可替换展示组件的方式完全插拔的样式\n\nexport var asField = function asField(_ref) {\n  var FieldUI = _ref.FieldUI,\n      Widget = _ref.Widget;\n  var availableKey = [\"title\", \"description\", \"format\", \"minimum\", \"maximum\", \"minLength\", \"maxLength\", \"pattern\", \"message\", \"min\", \"max\", \"enum\", \"enumNames\"];\n\n  function subFieldContainer(_ref2) {\n    var className = _ref2.className,\n        schema = _ref2.schema,\n        _ref2$props = _ref2.props,\n        props = _ref2$props === void 0 ? {} : _ref2$props,\n        options = _ref2.options,\n        rest = _objectWithoutProperties(_ref2, [\"className\", \"schema\", \"props\", \"options\"]);\n\n    var _rest$rootValue = rest.rootValue,\n        rootValue = _rest$rootValue === void 0 ? {} : _rest$rootValue,\n        _rest$formData = rest.formData,\n        formData = _rest$formData === void 0 ? {} : _rest$formData,\n        labelColor = rest.labelColor,\n        verify = rest.verify,\n        hidden = rest.hidden,\n        disabled = rest.disabled; // most key of schema, disabled, options, hidden, support for function expression\n\n    var _hidden = convertValue(hidden, formData, rootValue); // after \"convertValue\" being stable, this api will be discarded\n\n\n    if (_hidden && isHidden({\n      hidden: _hidden,\n      rootValue: rootValue,\n      formData: formData\n    })) {\n      return null;\n    }\n\n    var _options = _objectSpread({}, options),\n        _schema = _objectSpread({}, schema);\n\n    try {\n      Object.entries(options).forEach(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            key = _ref4[0],\n            _val = _ref4[1];\n\n        _options[key] = convertValue(_val, formData, rootValue);\n      }); // iterate over schema, and convert every key\n\n      Object.keys(schema).forEach(function (key) {\n        // TODO: need to cover more\n        if (availableKey.includes(key)) {\n          _schema[key] = convertValue(schema[key], formData, rootValue);\n        }\n      });\n    } catch (e) {\n      console.log(\"asField \\u7EC4\\u4EF6\\u89E3\\u6790\\u5931\\u8D25\\uFF1A\".concat(e));\n    } // 传入组件的值\n\n\n    var porps = _objectSpread(_objectSpread({}, rest), {}, {\n      schema: _schema,\n      disabled: convertValue(disabled, formData, rootValue),\n      options: _options,\n      formData: formData,\n      rootValue: rootValue\n    });\n\n    var isComplex = _schema.type === \"object\" || _schema.type === \"array\" && getEnum(_schema) === undefined;\n    var isModal = options && (options.modal || options.drawer);\n\n    if (isModal) {\n      isComplex = false;\n    }\n\n    var validateText = _schema.required ? getValidateText(porps) : \"\";\n    var showLabel = _schema.title || rest.description || _schema.required || rest.displayType !== \"row\" && validateText;\n    var fieldProps = {\n      labelColor: labelColor,\n      className: className,\n      displayType: rest.displayType,\n      isComplex: isComplex,\n      isRoot: false,\n      schema: _schema,\n      showLabel: showLabel,\n      labelWidth: rest.labelWidth,\n      tooltip: rest.tooltip,\n      verify: verify\n    };\n    return /*#__PURE__*/React.createElement(FieldUI, Object.assign({}, fieldProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Widget, Object.assign({}, porps, {\n      invalid: verify ? validateText : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    })));\n  }\n\n  return memo(subFieldContainer);\n};\n/**\n * @param displayType 展示方式：row 横 column 竖\n * @param showLabel 是否展示label\n * @param isComplex 是否是复杂结构：对象和对象数组\n * @param tooltip 是否展示描述提示\n * @param validateText 必填项文字提示\n * @param required 是否必填项\n */\n\nexport var DefaultFieldUI = function DefaultFieldUI(_ref5) {\n  var _cx;\n\n  var children = _ref5.children,\n      labelColor = _ref5.labelColor,\n      className = _ref5.className,\n      schema = _ref5.schema,\n      displayType = _ref5.displayType,\n      isComplex = _ref5.isComplex,\n      showLabel = _ref5.showLabel,\n      labelWidth = _ref5.labelWidth,\n      tooltip = _ref5.tooltip;\n  // field 整体 label 标签 content 内容\n  var title = schema.title,\n      _schema$description = schema.description,\n      description = _schema$description === void 0 ? \"\" : _schema$description,\n      options = schema.options,\n      _schema$required = schema.required,\n      required = _schema$required === void 0 ? false : _schema$required;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      collapsed = _useState2[0],\n      setCollapsed = _useState2[1];\n\n  var _labelWidth = converLayout(labelWidth, 85); // 一个object是否可以折叠，options里collapsed这个值，且这个值只能是true或者false，代表初始是展开还是收起\n\n\n  var onCanCollapse = schema.type === \"object\" && options && [false, true].includes(options.collapsed);\n\n  var toggleCollapsed = function toggleCollapsed() {\n    return setCollapsed(!collapsed);\n  };\n\n  var _widgetClass = cx(\"field-flex\", (_cx = {}, _defineProperty(_cx, \"\".concat(className), className), _defineProperty(_cx, \"field-flex__vertical\", displayType === \"column\"), _cx));\n\n  var _labelClass = cx({\n    \"field-flex__none\": displayType === \"column\"\n  });\n\n  if (onCanCollapse) {\n    return /*#__PURE__*/React.createElement(_Collapse, {\n      bordered: false,\n      ghost: true,\n      defaultActiveKey: options.collapsed ? \"conditions\" : \"\",\n      expandIcon: function expandIcon(_ref6) {\n        var isActive = _ref6.isActive;\n        return /*#__PURE__*/React.createElement(IconFont, {\n          antd: true,\n          type: \"RightOutlined\",\n          rotate: isActive ? 90 : 0,\n          style: {\n            marginTop: \"-3px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 11\n          }\n        });\n      },\n      onChange: toggleCollapsed,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(_Collapse.Panel, {\n      header: showLabel ? /*#__PURE__*/React.createElement(\"div\", {\n        className: isComplex ? \"field-flex__object\" : \"field-flex__label\",\n        style: displayType === \"row\" ? {\n          width: _labelWidth\n        } : {},\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"field-flex__title\",\n        title: title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }\n      }, required && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"field-flex__required\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 32\n        }\n      }, \"*\\xA0\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: _labelClass,\n        style: {\n          color: labelColor ? labelColor : \"#bcc9d4\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 19\n        }\n      }, title), description && (tooltip ? /*#__PURE__*/React.createElement(_Tooltip, {\n        title: description,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(IconFont, {\n        antd: true,\n        type: \"QuestionCircleOutlined\",\n        style: {\n          marginLeft: 3,\n          color: \"#177ddc\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }\n      })) : /*#__PURE__*/React.createElement(\"span\", {\n        className: \"field-flex__desc\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 23\n        }\n      }, \"(\\xA0\", description, \"\\xA0)\")))) : null,\n      key: \"conditions\",\n      className: _widgetClass,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field-flex__control\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field-flex__item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }, children))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: _widgetClass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }\n  }, showLabel ? /*#__PURE__*/React.createElement(\"div\", {\n    className: isComplex ? \"field-flex__object\" : \"field-flex__label\",\n    style: displayType === \"row\" ? {\n      width: _labelWidth\n    } : {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"field-flex__title\",\n    title: title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, required && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"field-flex__required\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 26\n    }\n  }, \"*\\xA0\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: _labelClass,\n    style: {\n      color: labelColor ? labelColor : \"#bcc9d4\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, title), description && (tooltip ? /*#__PURE__*/React.createElement(_Tooltip, {\n    title: description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconFont, {\n    antd: true,\n    type: \"QuestionCircleOutlined\",\n    style: {\n      marginLeft: 3,\n      color: \"#177ddc\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }\n  })) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"field-flex__desc\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, \"(\\xA0\", description, \"\\xA0)\")))) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-flex__control\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  }, children));\n};","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/图元/react-visual-data/src/library/form-render/asField.jsx"],"names":["React","useState","memo","cx","getValidateText","convertValue","isHidden","getEnum","converLayout","IconFont","asField","FieldUI","Widget","availableKey","subFieldContainer","className","schema","props","options","rest","rootValue","formData","labelColor","verify","hidden","disabled","_hidden","_options","_schema","Object","entries","forEach","key","_val","keys","includes","e","console","log","porps","isComplex","type","undefined","isModal","modal","drawer","validateText","required","showLabel","title","description","displayType","fieldProps","isRoot","labelWidth","tooltip","DefaultFieldUI","children","collapsed","setCollapsed","_labelWidth","onCanCollapse","toggleCollapsed","_widgetClass","_labelClass","isActive","marginTop","width","color","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, memo } from \"react\";\nimport { Tooltip, Collapse } from \"antd\";\nimport cx from \"classnames\";\nimport { getValidateText } from \"./validate\";\nimport { convertValue, isHidden, getEnum } from \"./utils\";\nimport { converLayout } from \"~utils/helper\";\n\nimport { IconFont } from \"~components\";\n\n// asField拆分成逻辑组件和展示组件，从而可替换展示组件的方式完全插拔的样式\nexport const asField = ({ FieldUI, Widget }) => {\n  const availableKey = [\n    \"title\",\n    \"description\",\n    \"format\",\n    \"minimum\",\n    \"maximum\",\n    \"minLength\",\n    \"maxLength\",\n    \"pattern\",\n    \"message\",\n    \"min\",\n    \"max\",\n    \"enum\",\n    \"enumNames\"\n  ];\n\n  function subFieldContainer({ className, schema, props = {}, options, ...rest }) {\n    const { rootValue = {}, formData = {}, labelColor, verify, hidden, disabled } = rest;\n    // most key of schema, disabled, options, hidden, support for function expression\n    const _hidden = convertValue(hidden, formData, rootValue);\n\n    // after \"convertValue\" being stable, this api will be discarded\n    if (_hidden && isHidden({ hidden: _hidden, rootValue, formData })) {\n      return null;\n    }\n\n    let _options = { ...options },\n      _schema = { ...schema };\n    try {\n      Object.entries(options).forEach(([key, _val]) => {\n        _options[key] = convertValue(_val, formData, rootValue);\n      });\n      // iterate over schema, and convert every key\n      Object.keys(schema).forEach((key) => {\n        // TODO: need to cover more\n        if (availableKey.includes(key)) {\n          _schema[key] = convertValue(schema[key], formData, rootValue);\n        }\n      });\n    } catch (e) {\n      console.log(`asField 组件解析失败：${e}`);\n    }\n\n    // 传入组件的值\n    const porps = {\n      ...rest,\n      schema: _schema,\n      disabled: convertValue(disabled, formData, rootValue),\n      options: _options,\n      formData,\n      rootValue\n    };\n\n    let isComplex = _schema.type === \"object\" || (_schema.type === \"array\" && getEnum(_schema) === undefined);\n\n    const isModal = options && (options.modal || options.drawer);\n\n    if (isModal) {\n      isComplex = false;\n    }\n\n    const validateText = _schema.required ? getValidateText(porps) : \"\";\n\n    const showLabel =\n      _schema.title || rest.description || _schema.required || (rest.displayType !== \"row\" && validateText);\n\n    const fieldProps = {\n      labelColor,\n      className,\n      displayType: rest.displayType,\n      isComplex,\n      isRoot: false,\n      schema: _schema,\n      showLabel,\n      labelWidth: rest.labelWidth,\n      tooltip: rest.tooltip,\n      verify\n    };\n\n    return (\n      <FieldUI {...fieldProps}>\n        <Widget {...porps} invalid={verify ? validateText : \"\"} />\n      </FieldUI>\n    );\n  }\n\n  return memo(subFieldContainer);\n};\n\n/**\n * @param displayType 展示方式：row 横 column 竖\n * @param showLabel 是否展示label\n * @param isComplex 是否是复杂结构：对象和对象数组\n * @param tooltip 是否展示描述提示\n * @param validateText 必填项文字提示\n * @param required 是否必填项\n */\nexport const DefaultFieldUI = ({\n  children,\n  labelColor,\n  className,\n  schema,\n  displayType,\n  isComplex,\n  showLabel,\n  labelWidth,\n  tooltip\n}) => {\n  // field 整体 label 标签 content 内容\n  const { title, description = \"\", options, required = false } = schema;\n  const [collapsed, setCollapsed] = useState(true);\n  const _labelWidth = converLayout(labelWidth, 85);\n\n  // 一个object是否可以折叠，options里collapsed这个值，且这个值只能是true或者false，代表初始是展开还是收起\n  const onCanCollapse = schema.type === \"object\" && options && [false, true].includes(options.collapsed);\n  const toggleCollapsed = () => setCollapsed(!collapsed);\n\n  const _widgetClass = cx(\"field-flex\", {\n    [`${className}`]: className,\n    \"field-flex__vertical\": displayType === \"column\"\n  });\n\n  const _labelClass = cx({\n    \"field-flex__none\": displayType === \"column\"\n  });\n\n  if (onCanCollapse) {\n    return (\n      <Collapse\n        bordered={false}\n        ghost={true}\n        defaultActiveKey={options.collapsed ? \"conditions\" : \"\"}\n        expandIcon={({ isActive }) => (\n          <IconFont\n            antd={true}\n            type=\"RightOutlined\"\n            rotate={isActive ? 90 : 0}\n            style={{\n              marginTop: \"-3px\"\n            }}\n          />\n        )}\n        onChange={toggleCollapsed}\n      >\n        <Collapse.Panel\n          header={\n            showLabel ? (\n              <div\n                className={isComplex ? \"field-flex__object\" : \"field-flex__label\"}\n                style={displayType === \"row\" ? { width: _labelWidth } : {}}\n              >\n                <label className=\"field-flex__title\" title={title}>\n                  {required && <span className=\"field-flex__required\">*&nbsp;</span>}\n                  <span className={_labelClass} style={{ color: labelColor ? labelColor : \"#bcc9d4\" }}>\n                    {title}\n                  </span>\n                  {description &&\n                    (tooltip ? (\n                      <Tooltip title={description}>\n                        <IconFont\n                          antd={true}\n                          type=\"QuestionCircleOutlined\"\n                          style={{\n                            marginLeft: 3,\n                            color: \"#177ddc\"\n                          }}\n                        />\n                      </Tooltip>\n                    ) : (\n                      <span className=\"field-flex__desc\">(&nbsp;{description}&nbsp;)</span>\n                    ))}\n                </label>\n              </div>\n            ) : null\n          }\n          key=\"conditions\"\n          className={_widgetClass}\n        >\n          <div className=\"field-flex__control\">\n            <div className=\"field-flex__item\">{children}</div>\n          </div>\n        </Collapse.Panel>\n      </Collapse>\n    );\n  }\n\n  return (\n    <div className={_widgetClass}>\n      {showLabel ? (\n        <div\n          className={isComplex ? \"field-flex__object\" : \"field-flex__label\"}\n          style={displayType === \"row\" ? { width: _labelWidth } : {}}\n        >\n          <label className=\"field-flex__title\" title={title}>\n            {required && <span className=\"field-flex__required\">*&nbsp;</span>}\n            <span className={_labelClass} style={{ color: labelColor ? labelColor : \"#bcc9d4\" }}>\n              {title}\n            </span>\n            {description &&\n              (tooltip ? (\n                <Tooltip title={description}>\n                  <IconFont\n                    antd={true}\n                    type=\"QuestionCircleOutlined\"\n                    style={{\n                      marginLeft: 3,\n                      color: \"#177ddc\"\n                    }}\n                  />\n                </Tooltip>\n              ) : (\n                <span className=\"field-flex__desc\">(&nbsp;{description}&nbsp;)</span>\n              ))}\n          </label>\n        </div>\n      ) : null}\n      <div className=\"field-flex__control\">{children}</div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
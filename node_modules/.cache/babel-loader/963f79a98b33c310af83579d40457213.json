{"ast":null,"code":"import _slicedToArray from \"/Users/xiangmingxin/Wicrecend/Primitives/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/xiangmingxin/Wicrecend/Primitives/src/pages/fullscreen/preview.jsx\";\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AutonContainer, Scrollbar } from \"~components\";\nimport { AxureScreenParser } from \"~renderer\";\nimport { useDocumentTitle } from \"~common/hooks\";\nimport storage from \"~utils/storage\";\n\nfunction PanelPreview(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      fullStyles = _useState2[0],\n      setFullStyles = _useState2[1];\n\n  var schemaConfig = JSON.parse(storage.getLocal(\"schema_screen_config\") || {});\n  var _schemaConfig$page = schemaConfig.page,\n      backgroundMode = _schemaConfig$page.backgroundMode,\n      backgroundColor = _schemaConfig$page.backgroundColor,\n      backgroundImage = _schemaConfig$page.backgroundImage,\n      backgroundDefine = _schemaConfig$page.backgroundDefine,\n      zoom = _schemaConfig$page.zoom,\n      backgroundOpacity = _schemaConfig$page.backgroundOpacity,\n      backgroundBlur = _schemaConfig$page.backgroundBlur,\n      width = _schemaConfig$page.width,\n      height = _schemaConfig$page.height;\n  useDocumentTitle(\"DataV Pro - \".concat(schemaConfig.page.name || \"未命名\"));\n  useEffect(function () {\n    props.dispatch({\n      type: \"component/mode\",\n      data: \"preview\"\n    });\n    setFullStyles({\n      position: \"relative\",\n      width: width,\n      height: height\n    });\n    return function () {\n      storage.clear();\n    };\n  }, []);\n  var backgroundStyles = useMemo(function () {\n    if (backgroundMode === \"custom\") {\n      return backgroundImage ? \"url(\".concat(backgroundImage, \") 0% 0% / 100% 100%\") : backgroundColor;\n    }\n\n    if (backgroundMode === \"define\") {\n      return \"url(./static/templet/\".concat(backgroundDefine, \") 0% 0% / 100% 100%\");\n    }\n\n    return backgroundColor ? backgroundColor : null;\n  }, [backgroundMode, backgroundImage, backgroundDefine, backgroundColor]);\n  var containerStyles = {\n    background: backgroundStyles,\n    filter: \"blur(\".concat(backgroundBlur, \"px)\"),\n    opacity: parseFloat(backgroundOpacity / 10)\n  };\n  return /*#__PURE__*/React.createElement(Scrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AutonContainer, {\n    style: fullStyles,\n    zoom: zoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-container\",\n    style: containerStyles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(AxureScreenParser, {\n    widgets: schemaConfig.components,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default connect(function (state) {\n  return state.component;\n})(PanelPreview);","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/Primitives/src/pages/fullscreen/preview.jsx"],"names":["React","useState","useEffect","useMemo","connect","AutonContainer","Scrollbar","AxureScreenParser","useDocumentTitle","storage","PanelPreview","props","fullStyles","setFullStyles","schemaConfig","JSON","parse","getLocal","page","backgroundMode","backgroundColor","backgroundImage","backgroundDefine","zoom","backgroundOpacity","backgroundBlur","width","height","name","dispatch","type","data","position","clear","backgroundStyles","containerStyles","background","filter","opacity","parseFloat","components","state","component"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AutonContainer, Scrollbar } from \"~components\";\nimport { AxureScreenParser } from \"~renderer\";\nimport { useDocumentTitle } from \"~common/hooks\";\nimport storage from \"~utils/storage\";\n\nfunction PanelPreview(props) {\n  const [fullStyles, setFullStyles] = useState({});\n  let schemaConfig = JSON.parse(storage.getLocal(\"schema_screen_config\") || {});\n  const {\n    backgroundMode,\n    backgroundColor,\n    backgroundImage,\n    backgroundDefine,\n    zoom,\n    backgroundOpacity,\n    backgroundBlur,\n    width,\n    height\n  } = schemaConfig.page;\n  useDocumentTitle(`DataV Pro - ${schemaConfig.page.name || \"未命名\"}`);\n\n  useEffect(() => {\n    props.dispatch({ type: \"component/mode\", data: \"preview\" });\n    setFullStyles({\n      position: \"relative\",\n      width: width,\n      height: height\n    });\n    return () => {\n      storage.clear();\n    };\n  }, []);\n\n  const backgroundStyles = useMemo(() => {\n    if (backgroundMode === \"custom\") {\n      return backgroundImage ? `url(${backgroundImage}) 0% 0% / 100% 100%` : backgroundColor;\n    }\n\n    if (backgroundMode === \"define\") {\n      return `url(./static/templet/${backgroundDefine}) 0% 0% / 100% 100%`;\n    }\n\n    return backgroundColor ? backgroundColor : null;\n  }, [backgroundMode, backgroundImage, backgroundDefine, backgroundColor]);\n\n  const containerStyles = {\n    background: backgroundStyles,\n    filter: `blur(${backgroundBlur}px)`,\n    opacity: parseFloat(backgroundOpacity / 10)\n  };\n\n  return (\n    <Scrollbar>\n      <AutonContainer style={fullStyles} zoom={zoom}>\n        <div className=\"bg-container\" style={containerStyles} />\n        <AxureScreenParser widgets={schemaConfig.components} />\n      </AutonContainer>\n    </Scrollbar>\n  );\n}\n\nexport default connect((state) => state.component)(PanelPreview);\n"]},"metadata":{},"sourceType":"module"}
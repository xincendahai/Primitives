{"ast":null,"code":"import _objectSpread from \"/Users/xiangmingxin/Wicrecend/Primitives/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/xiangmingxin/Wicrecend/Primitives/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/xiangmingxin/Wicrecend/Primitives/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/tabs/style\";\nimport _Tabs from \"antd/es/tabs\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/xiangmingxin/Wicrecend/Primitives/src/pages/report/src/setting.jsx\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { SchemaRender } from \"~renderer\";\nimport PageLayout from \"./page\";\nimport { allToSchema } from \"../schema\";\nimport { useTools, useStore } from \"~common/hooks\";\nimport { getFieldConf, mergeFieldConfig, setLevelPath } from \"~renderer/utils\";\nvar TabPane = _Tabs.TabPane;\n\nvar FieldSetConf = function FieldSetConf(_ref) {\n  var activeKey = _ref.activeKey,\n      fieldType = _ref.fieldType,\n      conditions = _ref.conditions,\n      dispatch = _ref.dispatch;\n\n  var _useState = useState({\n    cname: null,\n    cid: null,\n    value: {},\n    schema: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      field = _useState2[0],\n      setField = _useState2[1];\n\n  var _useTools = useTools(),\n      state = _useTools.state,\n      setState = _useTools.setState;\n\n  var _useStore = useStore(),\n      view = _useStore.view;\n\n  useEffect(function () {\n    var allComponents = [].concat(_toConsumableArray(conditions), _toConsumableArray(state.components));\n\n    if (allComponents.length > 0 && activeKey !== \"-\") {\n      try {\n        // TODO: 获取物料组件配置项\n        var currentField = getFieldConf(allComponents, activeKey);\n        setField({\n          cname: currentField.type,\n          cid: currentField.uniqueId,\n          value: currentField.data,\n          schema: allToSchema[fieldType].find(function (o) {\n            return o.materials === currentField.type;\n          }).fields\n        });\n      } catch (error) {\n        console.log(\"\\u5F53\\u524D\\u7EC4\\u4EF6\\u914D\\u7F6E\\u9519\\u8BEF! \".concat(error));\n      }\n    }\n\n    return function () {\n      setState({\n        tabsKey: \"base\"\n      });\n    };\n  }, [activeKey]);\n\n  var onValueChange = function onValueChange(value) {\n    var result; // TODO：表单控件\n\n    if (fieldType === \"form\") {\n      result = mergeFieldConfig(conditions, {\n        parentId: activeKey\n      }, value);\n      dispatch({\n        type: \"form/conditions\",\n        data: result\n      });\n    } else {\n      var rootValue = _objectSpread(_objectSpread({}, value), {}, {\n        drillDownLevel: 0\n      }); // 联动、下钻参数变更\n\n\n      if (value.drillDownOpen) {\n        rootValue = _objectSpread(_objectSpread({}, rootValue), {}, {\n          dependenceOpen: !value.drillDownOpen\n        });\n      }\n\n      if (value.dependenceOpen) {\n        rootValue = _objectSpread(_objectSpread({}, rootValue), {}, {\n          drillDownOpen: !value.dependenceOpen\n        });\n      }\n\n      result = mergeFieldConfig(state.components, {\n        parentId: activeKey\n      }, rootValue);\n      setLevelPath(result, null);\n      setState({\n        components: result\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: view.settingCollapsed ? \"gc-design__setting is-show\" : \"gc-design__setting\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, activeKey === \"-\" ? /*#__PURE__*/React.createElement(PageLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(_Tabs, {\n    className: \"setting-panel\",\n    size: \"large\",\n    tabPosition: \"right\",\n    activeKey: state.tabsKey,\n    onTabClick: function onTabClick(key) {\n      setState({\n        tabsKey: key\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, field.schema.map(function (item) {\n    return /*#__PURE__*/React.createElement(TabPane, {\n      tab: item.name,\n      key: item.key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SchemaRender, {\n      cname: field.cname,\n      cid: field.cid,\n      schema: item.schema,\n      formData: field.value,\n      onChange: onValueChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }));\n  })));\n};\n\nexport default connect(function (state) {\n  return {\n    activeKey: state.component.activeKey,\n    fieldType: state.component.fieldType,\n    conditions: state.form.conditions\n  };\n})(FieldSetConf);","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/Primitives/src/pages/report/src/setting.jsx"],"names":["React","useState","useEffect","connect","SchemaRender","PageLayout","allToSchema","useTools","useStore","getFieldConf","mergeFieldConfig","setLevelPath","TabPane","FieldSetConf","activeKey","fieldType","conditions","dispatch","cname","cid","value","schema","field","setField","state","setState","view","allComponents","components","length","currentField","type","uniqueId","data","find","o","materials","fields","error","console","log","tabsKey","onValueChange","result","parentId","rootValue","drillDownLevel","drillDownOpen","dependenceOpen","settingCollapsed","key","map","item","name","component","form"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Tabs } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { SchemaRender } from \"~renderer\";\nimport PageLayout from \"./page\";\nimport { allToSchema } from \"../schema\";\nimport { useTools, useStore } from \"~common/hooks\";\nimport { getFieldConf, mergeFieldConfig, setLevelPath } from \"~renderer/utils\";\n\nconst { TabPane } = Tabs;\n\nconst FieldSetConf = ({ activeKey, fieldType, conditions, dispatch }) => {\n  const [field, setField] = useState({\n    cname: null,\n    cid: null,\n    value: {},\n    schema: []\n  });\n  const { state, setState } = useTools();\n  const { view } = useStore();\n\n  useEffect(() => {\n    const allComponents = [...conditions, ...state.components];\n    if (allComponents.length > 0 && activeKey !== \"-\") {\n      try {\n        // TODO: 获取物料组件配置项\n        const currentField = getFieldConf(allComponents, activeKey);\n        setField({\n          cname: currentField.type,\n          cid: currentField.uniqueId,\n          value: currentField.data,\n          schema: allToSchema[fieldType].find((o) => o.materials === currentField.type).fields\n        });\n      } catch (error) {\n        console.log(`当前组件配置错误! ${error}`);\n      }\n    }\n    return () => {\n      setState({ tabsKey: \"base\" });\n    };\n  }, [activeKey]);\n\n  const onValueChange = (value) => {\n    let result;\n    // TODO：表单控件\n    if (fieldType === \"form\") {\n      result = mergeFieldConfig(conditions, { parentId: activeKey }, value);\n      dispatch({ type: \"form/conditions\", data: result });\n    } else {\n      let rootValue = { ...value, drillDownLevel: 0 };\n\n      // 联动、下钻参数变更\n      if (value.drillDownOpen) {\n        rootValue = {\n          ...rootValue,\n          dependenceOpen: !value.drillDownOpen\n        };\n      }\n\n      if (value.dependenceOpen) {\n        rootValue = {\n          ...rootValue,\n          drillDownOpen: !value.dependenceOpen\n        };\n      }\n\n      result = mergeFieldConfig(state.components, { parentId: activeKey }, rootValue);\n      setLevelPath(result, null);\n      setState({ components: result });\n    }\n  };\n\n  return (\n    <div className={view.settingCollapsed ? \"gc-design__setting is-show\" : \"gc-design__setting\"}>\n      {activeKey === \"-\" ? (\n        <PageLayout />\n      ) : (\n        <Tabs\n          className=\"setting-panel\"\n          size=\"large\"\n          tabPosition=\"right\"\n          activeKey={state.tabsKey}\n          onTabClick={(key) => {\n            setState({ tabsKey: key });\n          }}\n        >\n          {field.schema.map((item) => (\n            <TabPane tab={item.name} key={item.key}>\n              <SchemaRender\n                cname={field.cname}\n                cid={field.cid}\n                schema={item.schema}\n                formData={field.value}\n                onChange={onValueChange}\n              />\n            </TabPane>\n          ))}\n        </Tabs>\n      )}\n    </div>\n  );\n};\n\nexport default connect((state) => ({\n  activeKey: state.component.activeKey,\n  fieldType: state.component.fieldType,\n  conditions: state.form.conditions\n}))(FieldSetConf);\n"]},"metadata":{},"sourceType":"module"}
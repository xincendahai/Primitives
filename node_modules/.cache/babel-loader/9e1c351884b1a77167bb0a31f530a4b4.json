{"ast":null,"code":"import \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport _slicedToArray from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/src/materials/form/container/index.js\";\n\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport { SortableContainer, SortableHandle, SortableElement, arrayMove } from \"react-sortable-hoc\";\nimport cx from \"classnames\";\nimport { Scrollbar, IconFont } from \"~components\";\nimport { SchemaRender } from \"~renderer\";\nimport { useSet } from \"~common/hooks\";\nimport { isEmpty } from \"~utils/helper\";\nimport \"./style.less\";\nvar Compose = createContext({});\n\nfunction getParams(arr, value, data) {\n  var hasParmas = arr.some(function (item) {\n    return item.k === value.data.key;\n  });\n  return hasParmas ? arr.map(function (item) {\n    return Object.assign({}, item, {\n      v: data\n    });\n  }) : [].concat(_toConsumableArray(arr), [{\n    k: value.data.key,\n    t: value.type,\n    v: data\n  }]);\n}\n\nfunction getValues(arr, uniqueId, data) {\n  return arr.map(function (item) {\n    return {\n      id: item.uniqueId,\n      data: item.uniqueId === uniqueId ? data : \"\",\n      label: item.data.title,\n      required: item.data.required,\n      message: \"必须填写\"\n    };\n  });\n}\n\nvar DragHandle = SortableHandle(function () {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-drag\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(IconFont, {\n    antd: true,\n    type: \"DragOutlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }));\n});\nvar SortableItem = connect(function (state) {\n  return {\n    mode: state.component.mode,\n    parmas: state.form.parmas,\n    activeKey: state.component.activeKey\n  };\n})(SortableElement(function (_ref) {\n  var value = _ref.value,\n      labelColor = _ref.labelColor,\n      onClickItem = _ref.onClickItem,\n      mode = _ref.mode,\n      parmas = _ref.parmas,\n      activeKey = _ref.activeKey,\n      dispatch = _ref.dispatch;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      formData = _useState2[0],\n      setFormData = _useState2[1];\n\n  var _useContext = useContext(Compose),\n      formState = _useContext.formState,\n      dispathFormState = _useContext.dispathFormState;\n\n  var classNames = cx(\"form-item form-item__border\", {\n    \"is-active\": activeKey === value.uniqueId && mode === \"development\"\n  });\n\n  var onValueChange = function onValueChange(data) {\n    setFormData(data);\n    var newParmas;\n    dispathFormState({\n      values: getValues(formState.items, value.uniqueId, data)\n    }); // TODO: 处理筛选条件值\n\n    if (data) {\n      newParmas = getParams(parmas, value, data);\n    } else {\n      newParmas = parmas.filter(function (item) {\n        return item.k !== value.data.key;\n      });\n    }\n\n    dispatch({\n      type: \"form/parmas\",\n      data: newParmas\n    });\n  };\n\n  var onItemClick = function onItemClick($event) {\n    dispatch({\n      type: \"component/fieldType\",\n      data: \"form\"\n    });\n    onClickItem($event, value.uniqueId);\n  };\n\n  var currentSchema = {\n    title: value.data.title,\n    type: value.type,\n    format: value.data.format,\n    required: value.data.required,\n    options: {}\n  };\n  return /*#__PURE__*/React.createElement(_Col, {\n    span: value.data.halfWidth ? 12 : 24,\n    className: classNames,\n    onClick: onItemClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, activeKey === value.uniqueId && mode === \"development\" && /*#__PURE__*/React.createElement(DragHandle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 68\n    }\n  }), /*#__PURE__*/React.createElement(SchemaRender, {\n    cname: value.type,\n    schema: currentSchema,\n    formData: formData,\n    labelColor: labelColor,\n    verify: formState.verify,\n    onChange: onValueChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }));\n}));\nvar SortableList = SortableContainer(function (_ref2) {\n  var labelColor = _ref2.labelColor,\n      mode = _ref2.mode,\n      dependencies = _ref2.dependencies,\n      conditions = _ref2.conditions,\n      onClickItem = _ref2.onClickItem,\n      dispatch = _ref2.dispatch;\n\n  var _useContext2 = useContext(Compose),\n      formState = _useContext2.formState,\n      dispathFormState = _useContext2.dispathFormState; // 筛选查询\n\n\n  var onSumbitClick = function onSumbitClick(event) {\n    event.stopPropagation();\n    var isValid = conditions.some(function (item) {\n      return item.data.required === true;\n    });\n    var checkList;\n\n    if (isValid) {\n      dispathFormState({\n        verify: true\n      });\n\n      _notification.destroy();\n\n      checkList = formState.values.filter(function (m) {\n        return m.required === true && isEmpty(m.data);\n      }); // TODO: 验证是否通过\n\n      if (checkList.length > 0) {\n        checkList.forEach(function (item) {\n          _notification.error({\n            top: 70,\n            duration: 3,\n            message: \"\\u300C\".concat(item.label, \"\\u300D\\u8FC7\\u6EE4\\u6761\\u4EF6\").concat(item.message)\n          });\n        });\n      } else {\n        dispatch({\n          type: \"component/dependencies\",\n          data: dependencies\n        });\n      }\n    } else {\n      dispathFormState({\n        verify: false\n      });\n      dispatch({\n        type: \"component/dependencies\",\n        data: dependencies\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Scrollbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Row, {\n    style: {\n      padding: \"10px 25px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, formState.items.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(SortableItem, {\n      key: item.uniqueId,\n      index: index,\n      labelColor: labelColor,\n      value: item,\n      disabled: mode === \"preview\" ? true : false,\n      onClickItem: onClickItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    });\n  }), /*#__PURE__*/React.createElement(_Col, {\n    span: 24,\n    style: {\n      marginTop: 20,\n      paddingLeft: 94\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    onClick: onSumbitClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, \"\\u67E5\\u8BE2\"))));\n});\n\nfunction SortableComponent(_ref3) {\n  var value = _ref3.value,\n      mode = _ref3.mode,\n      dependencies = _ref3.dependencies,\n      conditions = _ref3.conditions,\n      dispatch = _ref3.dispatch;\n\n  var _useSet = useSet({\n    items: [],\n    verify: false,\n    values: []\n  }),\n      _useSet2 = _slicedToArray(_useSet, 2),\n      formState = _useSet2[0],\n      dispathFormState = _useSet2[1];\n\n  var onSortStart = function onSortStart(_ref4, event) {\n    var index = _ref4.index;\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  var onSortEnd = function onSortEnd(_ref5) {\n    var oldIndex = _ref5.oldIndex,\n        newIndex = _ref5.newIndex;\n    var newItems = arrayMove(formState.items, oldIndex, newIndex); // TODO: 组装筛选数据\n\n    newItems.forEach(function (item, index) {\n      item.data.order = index + 1;\n    });\n    dispathFormState({\n      items: newItems\n    });\n    dispatch({\n      type: \"form/conditions\",\n      data: newItems\n    });\n  };\n\n  var onItemClick = function onItemClick(event, key) {\n    event.stopPropagation();\n    if (mode === \"preview\") return;\n    dispatch({\n      type: \"component/activeKey\",\n      data: key\n    });\n  };\n\n  useEffect(function () {\n    if (conditions.length > 0) {\n      var values = conditions.map(function (m) {\n        return {\n          id: m.uniqueId,\n          data: m.data.defaultVal,\n          label: m.data.title,\n          required: m.data.required,\n          message: \"必须填写\"\n        };\n      });\n      dispathFormState({\n        items: conditions,\n        values: values\n      });\n    }\n  }, [conditions]);\n  if (formState.items.length === 0) return null;\n  var sortableProps = {\n    axis: \"xy\",\n    lockAxis: \"y\",\n    labelColor: value.labelColor || \"\",\n    mode: mode,\n    conditions: conditions,\n    dependencies: dependencies,\n    dispatch: dispatch,\n    useDragHandle: true\n  };\n  return /*#__PURE__*/React.createElement(Compose.Provider, {\n    value: {\n      formState: formState,\n      dispathFormState: dispathFormState\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SortableList, Object.assign({}, sortableProps, {\n    onSortStart: onSortStart,\n    onSortEnd: onSortEnd,\n    onClickItem: onItemClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  })));\n}\n\nexport default connect(function (state) {\n  return {\n    mode: state.component.mode,\n    dependencies: state.form.dependencies,\n    conditions: state.form.conditions\n  };\n})(SortableComponent);","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/图元/react-visual-data/src/materials/form/container/index.js"],"names":["React","useState","useEffect","useContext","createContext","connect","SortableContainer","SortableHandle","SortableElement","arrayMove","cx","Scrollbar","IconFont","SchemaRender","useSet","isEmpty","Compose","getParams","arr","value","data","hasParmas","some","item","k","key","map","Object","assign","v","t","type","getValues","uniqueId","id","label","title","required","message","DragHandle","SortableItem","state","mode","component","parmas","form","activeKey","labelColor","onClickItem","dispatch","formData","setFormData","formState","dispathFormState","classNames","onValueChange","newParmas","values","items","filter","onItemClick","$event","currentSchema","format","options","halfWidth","verify","SortableList","dependencies","conditions","onSumbitClick","event","stopPropagation","isValid","checkList","destroy","m","length","forEach","error","top","duration","padding","index","marginTop","paddingLeft","SortableComponent","onSortStart","preventDefault","onSortEnd","oldIndex","newIndex","newItems","order","defaultVal","sortableProps","axis","lockAxis","useDragHandle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, Button, notification } from \"antd\";\nimport { SortableContainer, SortableHandle, SortableElement, arrayMove } from \"react-sortable-hoc\";\nimport cx from \"classnames\";\nimport { Scrollbar, IconFont } from \"~components\";\nimport { SchemaRender } from \"~renderer\";\nimport { useSet } from \"~common/hooks\";\nimport { isEmpty } from \"~utils/helper\";\nimport \"./style.less\";\n\nconst Compose = createContext({});\n\nfunction getParams(arr, value, data) {\n  const hasParmas = arr.some((item) => item.k === value.data.key);\n\n  return hasParmas\n    ? arr.map((item) =>\n        Object.assign({}, item, {\n          v: data\n        })\n      )\n    : [\n        ...arr,\n        {\n          k: value.data.key,\n          t: value.type,\n          v: data\n        }\n      ];\n}\n\nfunction getValues(arr, uniqueId, data) {\n  return arr.map((item) => ({\n    id: item.uniqueId,\n    data: item.uniqueId === uniqueId ? data : \"\",\n    label: item.data.title,\n    required: item.data.required,\n    message: \"必须填写\"\n  }));\n}\n\nconst DragHandle = SortableHandle(() => (\n  <div className=\"form-drag\">\n    <IconFont antd={true} type=\"DragOutlined\" />\n  </div>\n));\n\nconst SortableItem = connect((state) => ({\n  mode: state.component.mode,\n  parmas: state.form.parmas,\n  activeKey: state.component.activeKey\n}))(\n  SortableElement(({ value, labelColor, onClickItem, mode, parmas, activeKey, dispatch }) => {\n    const [formData, setFormData] = useState(null);\n    const { formState, dispathFormState } = useContext(Compose);\n    const classNames = cx(\"form-item form-item__border\", {\n      \"is-active\": activeKey === value.uniqueId && mode === \"development\"\n    });\n\n    const onValueChange = (data) => {\n      setFormData(data);\n      let newParmas;\n\n      dispathFormState({ values: getValues(formState.items, value.uniqueId, data) });\n      // TODO: 处理筛选条件值\n      if (data) {\n        newParmas = getParams(parmas, value, data);\n      } else {\n        newParmas = parmas.filter((item) => item.k !== value.data.key);\n      }\n      dispatch({ type: \"form/parmas\", data: newParmas });\n    };\n\n    const onItemClick = ($event) => {\n      dispatch({ type: \"component/fieldType\", data: \"form\" });\n      onClickItem($event, value.uniqueId);\n    };\n\n    const currentSchema = {\n      title: value.data.title,\n      type: value.type,\n      format: value.data.format,\n      required: value.data.required,\n      options: {}\n    };\n\n    return (\n      <Col span={value.data.halfWidth ? 12 : 24} className={classNames} onClick={onItemClick}>\n        {activeKey === value.uniqueId && mode === \"development\" && <DragHandle />}\n        <SchemaRender\n          cname={value.type}\n          schema={currentSchema}\n          formData={formData}\n          labelColor={labelColor}\n          verify={formState.verify}\n          onChange={onValueChange}\n        />\n      </Col>\n    );\n  })\n);\n\nconst SortableList = SortableContainer(({ labelColor, mode, dependencies, conditions, onClickItem, dispatch }) => {\n  const { formState, dispathFormState } = useContext(Compose);\n  // 筛选查询\n  const onSumbitClick = (event) => {\n    event.stopPropagation();\n    const isValid = conditions.some((item) => item.data.required === true);\n    let checkList;\n\n    if (isValid) {\n      dispathFormState({ verify: true });\n      notification.destroy();\n\n      checkList = formState.values.filter((m) => m.required === true && isEmpty(m.data));\n\n      // TODO: 验证是否通过\n      if (checkList.length > 0) {\n        checkList.forEach((item) => {\n          notification.error({\n            top: 70,\n            duration: 3,\n            message: `「${item.label}」过滤条件${item.message}`\n          });\n        });\n      } else {\n        dispatch({ type: \"component/dependencies\", data: dependencies });\n      }\n    } else {\n      dispathFormState({ verify: false });\n      dispatch({ type: \"component/dependencies\", data: dependencies });\n    }\n  };\n\n  return (\n    <Scrollbar>\n      <Row\n        style={{\n          padding: \"10px 25px\"\n        }}\n      >\n        {formState.items.map((item, index) => (\n          <SortableItem\n            key={item.uniqueId}\n            index={index}\n            labelColor={labelColor}\n            value={item}\n            disabled={mode === \"preview\" ? true : false}\n            onClickItem={onClickItem}\n          />\n        ))}\n        <Col\n          span={24}\n          style={{\n            marginTop: 20,\n            paddingLeft: 94\n          }}\n        >\n          <Button type=\"primary\" onClick={onSumbitClick}>\n            查询\n          </Button>\n        </Col>\n      </Row>\n    </Scrollbar>\n  );\n});\n\nfunction SortableComponent({ value, mode, dependencies, conditions, dispatch }) {\n  const [formState, dispathFormState] = useSet({\n    items: [],\n    verify: false,\n    values: []\n  });\n\n  const onSortStart = ({ index }, event) => {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    let newItems = arrayMove(formState.items, oldIndex, newIndex);\n    // TODO: 组装筛选数据\n    newItems.forEach((item, index) => {\n      item.data.order = index + 1;\n    });\n\n    dispathFormState({ items: newItems });\n    dispatch({ type: \"form/conditions\", data: newItems });\n  };\n\n  const onItemClick = (event, key) => {\n    event.stopPropagation();\n    if (mode === \"preview\") return;\n    dispatch({ type: \"component/activeKey\", data: key });\n  };\n\n  useEffect(() => {\n    if (conditions.length > 0) {\n      const values = conditions.map((m) => ({\n        id: m.uniqueId,\n        data: m.data.defaultVal,\n        label: m.data.title,\n        required: m.data.required,\n        message: \"必须填写\"\n      }));\n      dispathFormState({ items: conditions, values: values });\n    }\n  }, [conditions]);\n\n  if (formState.items.length === 0) return null;\n\n  const sortableProps = {\n    axis: \"xy\",\n    lockAxis: \"y\",\n    labelColor: value.labelColor || \"\",\n    mode,\n    conditions,\n    dependencies,\n    dispatch,\n    useDragHandle: true\n  };\n\n  return (\n    <Compose.Provider value={{ formState, dispathFormState }}>\n      <SortableList {...sortableProps} onSortStart={onSortStart} onSortEnd={onSortEnd} onClickItem={onItemClick} />\n    </Compose.Provider>\n  );\n}\n\nexport default connect((state) => ({\n  mode: state.component.mode,\n  dependencies: state.form.dependencies,\n  conditions: state.form.conditions\n}))(SortableComponent);\n"]},"metadata":{},"sourceType":"module"}
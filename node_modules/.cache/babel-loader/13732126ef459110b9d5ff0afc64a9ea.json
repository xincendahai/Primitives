{"ast":null,"code":"import \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/statistic/style\";\nimport _Statistic from \"antd/es/statistic\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/src/materials/indicator/index.js\";\n\nimport React, { useMemo } from \"react\";\n\n/**\n * 标题自定义\n * @param {name} 标题\n * @param {style} 样式\n */\nvar TitleName = function TitleName(_ref) {\n  var name = _ref.name,\n      style = _ref.style;\n  var _style$fontSize = style.fontSize,\n      fontSize = _style$fontSize === void 0 ? 16 : _style$fontSize,\n      _style$fontFamily = style.fontFamily,\n      fontFamily = _style$fontFamily === void 0 ? \"Microsoft Yahei\" : _style$fontFamily,\n      _style$color = style.color,\n      color = _style$color === void 0 ? \"\" : _style$color;\n  return /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: fontSize,\n      fontFamily: fontFamily,\n      color: color\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, name);\n};\n\nvar VIndicator = function VIndicator(_ref2) {\n  var options = _ref2.options,\n      schema = _ref2.schema;\n  var _options$columns = options.columns,\n      columns = _options$columns === void 0 ? 0 : _options$columns,\n      _options$cardPadding = options.cardPadding,\n      cardPadding = _options$cardPadding === void 0 ? 10 : _options$cardPadding,\n      _options$cardRadius = options.cardRadius,\n      cardRadius = _options$cardRadius === void 0 ? 10 : _options$cardRadius,\n      _options$subFontSize = options.subFontSize,\n      subFontSize = _options$subFontSize === void 0 ? 14 : _options$subFontSize,\n      _options$prefix = options.prefix,\n      prefix = _options$prefix === void 0 ? \"\" : _options$prefix,\n      _options$suffix = options.suffix,\n      suffix = _options$suffix === void 0 ? \"\" : _options$suffix,\n      _options$fontFamily = options.fontFamily,\n      fontFamily = _options$fontFamily === void 0 ? \"Microsoft Yahei\" : _options$fontFamily,\n      _options$fontSize = options.fontSize,\n      fontSize = _options$fontSize === void 0 ? 16 : _options$fontSize,\n      _options$color = options.color,\n      color = _options$color === void 0 ? \"\" : _options$color,\n      _options$subColor = options.subColor,\n      subColor = _options$subColor === void 0 ? \"\" : _options$subColor,\n      _options$precision = options.precision,\n      precision = _options$precision === void 0 ? 0 : _options$precision,\n      cardBackground = options.cardBackground;\n  var data = schema.data;\n  var option = useMemo(function () {\n    return {\n      prefix: prefix,\n      suffix: suffix,\n      precision: precision,\n      valueStyle: {\n        fontFamily: fontFamily,\n        fontSize: fontSize,\n        color: color\n      }\n    };\n  }, [options]);\n  var colCount = columns > 0 && columns <= data.data.length ? columns : data.data.length;\n  return /*#__PURE__*/React.createElement(_Row, {\n    gutter: [cardPadding, cardPadding],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, data.data.map(function (m, i) {\n    return /*#__PURE__*/React.createElement(_Col, {\n      key: i.toString(),\n      span: 24 / colCount,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: \"0 5px\",\n        borderRadius: cardRadius,\n        background: cardBackground\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(_Statistic, Object.assign({\n      title: /*#__PURE__*/React.createElement(TitleName, {\n        name: m.name,\n        style: {\n          fontSize: subFontSize,\n          color: subColor\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }\n      }),\n      value: m.value\n    }, option, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }))));\n  }));\n};\n\nexport default VIndicator;","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/图元/react-visual-data/src/materials/indicator/index.js"],"names":["React","useMemo","TitleName","name","style","fontSize","fontFamily","color","VIndicator","options","schema","columns","cardPadding","cardRadius","subFontSize","prefix","suffix","subColor","precision","cardBackground","data","option","valueStyle","colCount","length","map","m","i","toString","padding","borderRadius","background","value"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\nimport { Statistic, Row, Col } from \"antd\";\n\n/**\n * 标题自定义\n * @param {name} 标题\n * @param {style} 样式\n */\nconst TitleName = ({ name, style }) => {\n  const { fontSize = 16, fontFamily = \"Microsoft Yahei\", color = \"\" } = style;\n\n  return (\n    <span\n      style={{\n        fontSize,\n        fontFamily,\n        color\n      }}\n    >\n      {name}\n    </span>\n  );\n};\n\nconst VIndicator = ({ options, schema }) => {\n  const {\n    columns = 0,\n    cardPadding = 10,\n    cardRadius = 10,\n    subFontSize = 14,\n    prefix = \"\",\n    suffix = \"\",\n    fontFamily = \"Microsoft Yahei\",\n    fontSize = 16,\n    color = \"\",\n    subColor = \"\",\n    precision = 0,\n    cardBackground\n  } = options;\n  const { data } = schema;\n\n  let option = useMemo(() => {\n    return {\n      prefix,\n      suffix,\n      precision,\n      valueStyle: { fontFamily, fontSize, color }\n    };\n  }, [options]);\n\n  const colCount = columns > 0 && columns <= data.data.length ? columns : data.data.length;\n\n  return (\n    <Row gutter={[cardPadding, cardPadding]}>\n      {data.data.map((m, i) => {\n        return (\n          <Col key={i.toString()} span={24 / colCount}>\n            <div\n              style={{\n                padding: \"0 5px\",\n                borderRadius: cardRadius,\n                background: cardBackground\n              }}\n            >\n              <Statistic\n                title={\n                  <TitleName\n                    name={m.name}\n                    style={{\n                      fontSize: subFontSize,\n                      color: subColor\n                    }}\n                  />\n                }\n                value={m.value}\n                {...option}\n              />\n            </div>\n          </Col>\n        );\n      })}\n    </Row>\n  );\n};\n\nexport default VIndicator;\n"]},"metadata":{},"sourceType":"module"}
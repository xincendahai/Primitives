{"ast":null,"code":"import \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport _slicedToArray from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/src/materials/form/color/index.js\";\n\n/* eslint-disable */\nimport React, { useMemo, useState } from \"react\";\nimport ColorPicker from \"rc-color-picker\";\nimport \"rc-color-picker/assets/index.css\";\nimport { hexToRgb, rgbToHex, isRgba } from \"~utils\";\nexport default function VColor(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      color = _useState2[0],\n      setColor = _useState2[1];\n\n  var _useState3 = useState(100),\n      _useState4 = _slicedToArray(_useState3, 2),\n      alpha = _useState4[0],\n      setAlpha = _useState4[1];\n\n  var format = props.schema.format;\n\n  var onPickerChange = function onPickerChange(e) {\n    if (props.disabled || props.readonly) return;\n    var rgbaValue = hexToRgb(e.color, e.alpha);\n    props.onChange(props.name, rgbaValue);\n  };\n\n  var onInputChange = function onInputChange(e) {\n    var _e$target$value;\n\n    var value = (_e$target$value = e.target.value) !== null && _e$target$value !== void 0 ? _e$target$value : \"\";\n    setAlpha(100);\n    props.onChange(props.name, value);\n  };\n\n  var onBlurChange = function onBlurChange(e) {\n    var _e$target$value2;\n\n    var realValue = (_e$target$value2 = e.target.value) !== null && _e$target$value2 !== void 0 ? _e$target$value2 : \"\";\n\n    if (isRgba(realValue) || /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(realValue)) {\n      props.onChange(props.name, realValue);\n    } else {\n      setAlpha(100);\n      props.onChange(props.name, \"\");\n    }\n  };\n\n  var pickerColor = useMemo(function () {\n    if (!props.value || props.value === \"transparent\") {\n      setAlpha(100);\n      return \"\";\n    }\n\n    if (isRgba(props.value)) {\n      var _rgbToHex = rgbToHex(props.value),\n          opacity = _rgbToHex.opacity,\n          _color = _rgbToHex.color;\n\n      setColor(_color);\n      setAlpha(opacity);\n    }\n\n    return props.value;\n  }, [props.value]);\n  return /*#__PURE__*/React.createElement(_Input, {\n    placeholder: \"\\u8BF7\\u9009\\u62E9\\u989C\\u8272\",\n    disabled: props.disabled || props.readOnly,\n    value: pickerColor,\n    allowClear: true,\n    onChange: onInputChange,\n    onBlur: onBlurChange,\n    addonAfter:\n    /*#__PURE__*/\n    // eslint-disable-next-line\n    React.createElement(ColorPicker, {\n      type: format,\n      animation: \"slide-up\",\n      className: \"gc-color-picker\",\n      alpha: alpha,\n      defaultColor: \"#ffffff\",\n      color: color,\n      onClose: onPickerChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/图元/react-visual-data/src/materials/form/color/index.js"],"names":["React","useMemo","useState","ColorPicker","hexToRgb","rgbToHex","isRgba","VColor","props","color","setColor","alpha","setAlpha","format","schema","onPickerChange","e","disabled","readonly","rgbaValue","onChange","name","onInputChange","value","target","onBlurChange","realValue","test","pickerColor","opacity","readOnly"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, { useMemo, useState } from \"react\";\nimport ColorPicker from \"rc-color-picker\";\nimport { Input } from \"antd\";\nimport \"rc-color-picker/assets/index.css\";\nimport { hexToRgb, rgbToHex, isRgba } from \"~utils\";\n\nexport default function VColor(props) {\n  const [color, setColor] = useState(\"\");\n  const [alpha, setAlpha] = useState(100);\n  const { format } = props.schema;\n\n  const onPickerChange = (e) => {\n    if (props.disabled || props.readonly) return;\n    const rgbaValue = hexToRgb(e.color, e.alpha);\n    props.onChange(props.name, rgbaValue);\n  };\n\n  const onInputChange = (e) => {\n    const value = e.target.value ?? \"\";\n    setAlpha(100);\n    props.onChange(props.name, value);\n  };\n\n  const onBlurChange = (e) => {\n    const realValue = e.target.value ?? \"\";\n    if (isRgba(realValue) || /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(realValue)) {\n      props.onChange(props.name, realValue);\n    } else {\n      setAlpha(100);\n      props.onChange(props.name, \"\");\n    }\n  };\n\n  const pickerColor = useMemo(() => {\n    if (!props.value || props.value === \"transparent\") {\n      setAlpha(100);\n      return \"\";\n    }\n    if (isRgba(props.value)) {\n      const { opacity, color } = rgbToHex(props.value);\n      setColor(color);\n      setAlpha(opacity);\n    }\n    return props.value;\n  }, [props.value]);\n\n  return (\n    <Input\n      placeholder=\"请选择颜色\"\n      disabled={props.disabled || props.readOnly}\n      value={pickerColor}\n      allowClear\n      onChange={onInputChange}\n      onBlur={onBlurChange}\n      addonAfter={\n        // eslint-disable-next-line\n        <ColorPicker\n          type={format}\n          animation=\"slide-up\"\n          className=\"gc-color-picker\"\n          alpha={alpha}\n          defaultColor=\"#ffffff\"\n          color={color}\n          onClose={onPickerChange}\n        />\n      }\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
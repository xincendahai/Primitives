{"ast":null,"code":"import _objectSpread from \"/Users/xiangmingxin/Wicrecend/Primitives/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/Users/xiangmingxin/Wicrecend/Primitives/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/xiangmingxin/Wicrecend/Primitives/src/components/scrollbar/index.jsx\";\n\nimport React, { useRef, forwardRef, useImperativeHandle } from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport { converLayout } from \"~utils/helper\";\n\nvar renderThumb = function renderThumb(_ref) {\n  var style = _ref.style,\n      props = _objectWithoutProperties(_ref, [\"style\"]);\n\n  var thumbStyle = {\n    backgroundColor: \"rgba(255, 255, 255, 0.14)\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    style: _objectSpread(_objectSpread({}, style), thumbStyle)\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 10\n    }\n  }));\n};\n\nfunction VScrollbar(props, ref) {\n  var width = props.width,\n      height = props.height,\n      _props$autoHide = props.autoHide,\n      autoHide = _props$autoHide === void 0 ? true : _props$autoHide;\n  var scrollbarRef = useRef();\n  useImperativeHandle(ref, function () {\n    return {\n      scrollTo: function scrollTo(top, left) {\n        scrollbarRef.current.scrollTop(Math.random() * top);\n        scrollbarRef.current.scrollLeft(Math.random() * left);\n      },\n      getValues: function getValues() {\n        return {\n          top: scrollbarRef.current.getScrollTop(),\n          left: scrollbarRef.current.getScrollLeft()\n        };\n      }\n    };\n  });\n  return /*#__PURE__*/React.createElement(Scrollbars, {\n    style: {\n      width: converLayout(width),\n      height: converLayout(height),\n      color: \"#0a73ff\"\n    },\n    renderThumbVertical: renderThumb,\n    renderThumbHorizontal: renderThumb,\n    autoHide: autoHide,\n    ref: function ref(el) {\n      scrollbarRef.current = el;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, props.children);\n}\n\nexport default forwardRef(VScrollbar);","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/Primitives/src/components/scrollbar/index.jsx"],"names":["React","useRef","forwardRef","useImperativeHandle","Scrollbars","converLayout","renderThumb","style","props","thumbStyle","backgroundColor","VScrollbar","ref","width","height","autoHide","scrollbarRef","scrollTo","top","left","current","scrollTop","Math","random","scrollLeft","getValues","getScrollTop","getScrollLeft","color","el","children"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,UAAxB,EAAoCC,mBAApC,QAA+D,OAA/D;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,YAAT,QAA6B,eAA7B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAyB;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAZC,KAAY;;AAC3C,MAAMC,UAAU,GAAG;AACjBC,IAAAA,eAAe,EAAE;AADA,GAAnB;AAGA,sBAAO;AAAK,IAAA,KAAK,kCAAOH,KAAP,GAAiBE,UAAjB;AAAV,KAA6CD,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CALD;;AAOA,SAASG,UAAT,CAAoBH,KAApB,EAA2BI,GAA3B,EAAgC;AAAA,MACtBC,KADsB,GACaL,KADb,CACtBK,KADsB;AAAA,MACfC,MADe,GACaN,KADb,CACfM,MADe;AAAA,wBACaN,KADb,CACPO,QADO;AAAA,MACPA,QADO,gCACI,IADJ;AAE9B,MAAMC,YAAY,GAAGf,MAAM,EAA3B;AAEAE,EAAAA,mBAAmB,CAACS,GAAD,EAAM;AAAA,WAAO;AAC9BK,MAAAA,QAAQ,EAAE,kBAACC,GAAD,EAAMC,IAAN,EAAe;AACvBH,QAAAA,YAAY,CAACI,OAAb,CAAqBC,SAArB,CAA+BC,IAAI,CAACC,MAAL,KAAgBL,GAA/C;AACAF,QAAAA,YAAY,CAACI,OAAb,CAAqBI,UAArB,CAAgCF,IAAI,CAACC,MAAL,KAAgBJ,IAAhD;AACD,OAJ6B;AAK9BM,MAAAA,SAAS,EAAE;AAAA,eAAO;AAChBP,UAAAA,GAAG,EAAEF,YAAY,CAACI,OAAb,CAAqBM,YAArB,EADW;AAEhBP,UAAAA,IAAI,EAAEH,YAAY,CAACI,OAAb,CAAqBO,aAArB;AAFU,SAAP;AAAA;AALmB,KAAP;AAAA,GAAN,CAAnB;AAWA,sBACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAE;AACLd,MAAAA,KAAK,EAAER,YAAY,CAACQ,KAAD,CADd;AAELC,MAAAA,MAAM,EAAET,YAAY,CAACS,MAAD,CAFf;AAGLc,MAAAA,KAAK,EAAE;AAHF,KADT;AAME,IAAA,mBAAmB,EAAEtB,WANvB;AAOE,IAAA,qBAAqB,EAAEA,WAPzB;AAQE,IAAA,QAAQ,EAAES,QARZ;AASE,IAAA,GAAG,EAAE,aAACc,EAAD,EAAQ;AACXb,MAAAA,YAAY,CAACI,OAAb,GAAuBS,EAAvB;AACD,KAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaGrB,KAAK,CAACsB,QAbT,CADF;AAiBD;;AAED,eAAe5B,UAAU,CAACS,UAAD,CAAzB","sourcesContent":["import React, { useRef, forwardRef, useImperativeHandle } from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport { converLayout } from \"~utils/helper\";\n\nconst renderThumb = ({ style, ...props }) => {\n  const thumbStyle = {\n    backgroundColor: \"rgba(255, 255, 255, 0.14)\"\n  };\n  return <div style={{ ...style, ...thumbStyle }} {...props} />;\n};\n\nfunction VScrollbar(props, ref) {\n  const { width, height, autoHide = true } = props;\n  const scrollbarRef = useRef();\n\n  useImperativeHandle(ref, () => ({\n    scrollTo: (top, left) => {\n      scrollbarRef.current.scrollTop(Math.random() * top);\n      scrollbarRef.current.scrollLeft(Math.random() * left);\n    },\n    getValues: () => ({\n      top: scrollbarRef.current.getScrollTop(),\n      left: scrollbarRef.current.getScrollLeft()\n    })\n  }));\n\n  return (\n    <Scrollbars\n      style={{\n        width: converLayout(width),\n        height: converLayout(height),\n        color: \"#0a73ff\"\n      }}\n      renderThumbVertical={renderThumb}\n      renderThumbHorizontal={renderThumb}\n      autoHide={autoHide}\n      ref={(el) => {\n        scrollbarRef.current = el;\n      }}\n    >\n      {props.children}\n    </Scrollbars>\n  );\n}\n\nexport default forwardRef(VScrollbar);\n"]},"metadata":{},"sourceType":"module"}
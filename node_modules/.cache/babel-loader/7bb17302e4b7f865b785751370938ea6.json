{"ast":null,"code":"import _objectSpread from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/src/components/split-panel/split.js\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport Panel from \"./panel\";\nimport Resizer from \"./resizer\";\n\nfunction unFocus(document, window) {\n  if (document.selection) {\n    document.selection.empty();\n  } else {\n    try {\n      window.getSelection().removeAllRanges(); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction getDefaultSize(defaultSize, minSize, maxSize, draggedSize) {\n  if (typeof draggedSize === \"number\") {\n    var min = typeof minSize === \"number\" ? minSize : 0;\n    var max = typeof maxSize === \"number\" && maxSize >= 0 ? maxSize : Infinity;\n    return Math.max(min, Math.min(max, draggedSize));\n  }\n\n  if (defaultSize !== undefined) {\n    return defaultSize;\n  }\n\n  return minSize;\n}\n\nfunction removeNullChildren(children) {\n  return React.Children.toArray(children).filter(function (c) {\n    return c;\n  });\n}\n\nvar SplitPanel = /*#__PURE__*/function (_React$Component) {\n  _inherits(SplitPanel, _React$Component);\n\n  var _super = _createSuper(SplitPanel);\n\n  function SplitPanel(props) {\n    var _this;\n\n    _classCallCheck(this, SplitPanel);\n\n    _this = _super.call(this, props);\n    _this.onMouseDown = _this.onMouseDown.bind(_assertThisInitialized(_this));\n    _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_this));\n    _this.onMouseMove = _this.onMouseMove.bind(_assertThisInitialized(_this));\n    _this.onTouchMove = _this.onTouchMove.bind(_assertThisInitialized(_this));\n    _this.onMouseUp = _this.onMouseUp.bind(_assertThisInitialized(_this)); // order of setting panel sizes.\n    // 1. size\n    // 2. getDefaultSize(defaultSize, minsize, maxSize)\n\n    var size = props.size,\n        defaultSize = props.defaultSize,\n        minSize = props.minSize,\n        maxSize = props.maxSize,\n        primary = props.primary;\n    var initialSize = size !== undefined ? size : getDefaultSize(defaultSize, minSize, maxSize, null);\n    _this.state = {\n      active: false,\n      resized: false,\n      pane1Size: primary === \"first\" ? initialSize : undefined,\n      pane2Size: primary === \"second\" ? initialSize : undefined,\n      // these are props that are needed in static functions. ie: gDSFP\n      instanceProps: {\n        size: size\n      }\n    };\n    return _this;\n  }\n\n  _createClass(SplitPanel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener(\"mouseup\", this.onMouseUp);\n      document.addEventListener(\"mousemove\", this.onMouseMove);\n      document.addEventListener(\"touchmove\", this.onTouchMove);\n      this.setState(SplitPanel.getSizeUpdate(this.props, this.state));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener(\"mouseup\", this.onMouseUp);\n      document.removeEventListener(\"mousemove\", this.onMouseMove);\n      document.removeEventListener(\"touchmove\", this.onTouchMove);\n    }\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      var eventWithTouches = Object.assign({}, event, {\n        touches: [{\n          clientX: event.clientX,\n          clientY: event.clientY\n        }]\n      });\n      this.onTouchStart(eventWithTouches);\n    }\n  }, {\n    key: \"onTouchStart\",\n    value: function onTouchStart(event) {\n      var _this$props = this.props,\n          allowResize = _this$props.allowResize,\n          onDragStarted = _this$props.onDragStarted,\n          mode = _this$props.mode;\n\n      if (allowResize) {\n        unFocus(document, window);\n        var position = mode === \"vertical\" ? event.touches[0].clientX : event.touches[0].clientY;\n\n        if (typeof onDragStarted === \"function\") {\n          onDragStarted();\n        }\n\n        this.setState({\n          active: true,\n          position: position\n        });\n      }\n    }\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(event) {\n      var eventWithTouches = Object.assign({}, event, {\n        touches: [{\n          clientX: event.clientX,\n          clientY: event.clientY\n        }]\n      });\n      this.onTouchMove(eventWithTouches);\n    }\n  }, {\n    key: \"onTouchMove\",\n    value: function onTouchMove(event) {\n      var _this$props2 = this.props,\n          allowResize = _this$props2.allowResize,\n          maxSize = _this$props2.maxSize,\n          minSize = _this$props2.minSize,\n          onChange = _this$props2.onChange,\n          mode = _this$props2.mode,\n          step = _this$props2.step;\n      var _this$state = this.state,\n          active = _this$state.active,\n          position = _this$state.position;\n\n      if (allowResize && active) {\n        unFocus(document, window);\n        var isPrimaryFirst = this.props.primary === \"first\";\n        var ref = isPrimaryFirst ? this.pane1 : this.pane2;\n        var ref2 = isPrimaryFirst ? this.pane2 : this.pane1;\n\n        if (ref) {\n          var node = ref;\n          var node2 = ref2;\n\n          if (node.getBoundingClientRect) {\n            var width = node.getBoundingClientRect().width;\n            var height = node.getBoundingClientRect().height;\n            var current = mode === \"vertical\" ? event.touches[0].clientX : event.touches[0].clientY;\n            var size = mode === \"vertical\" ? width : height;\n            var positionDelta = position - current;\n\n            if (step) {\n              if (Math.abs(positionDelta) < step) {\n                return;\n              } // Integer division\n              // eslint-disable-next-line no-bitwise\n\n\n              positionDelta = ~~(positionDelta / step) * step;\n            }\n\n            var sizeDelta = isPrimaryFirst ? positionDelta : -positionDelta;\n            var pane1Order = parseInt(window.getComputedStyle(node).order);\n            var pane2Order = parseInt(window.getComputedStyle(node2).order);\n\n            if (pane1Order > pane2Order) {\n              sizeDelta = -sizeDelta;\n            }\n\n            var newMaxSize = maxSize;\n\n            if (maxSize !== undefined && maxSize <= 0) {\n              var splitPane = this.splitPane;\n\n              if (mode === \"vertical\") {\n                newMaxSize = splitPane.getBoundingClientRect().width + maxSize;\n              } else {\n                newMaxSize = splitPane.getBoundingClientRect().height + maxSize;\n              }\n            }\n\n            var newSize = size - sizeDelta;\n            var newPosition = position - positionDelta;\n\n            if (newSize < minSize) {\n              newSize = minSize;\n            } else if (maxSize !== undefined && newSize > newMaxSize) {\n              newSize = newMaxSize;\n            } else {\n              this.setState({\n                position: newPosition,\n                resized: true\n              });\n            }\n\n            if (onChange) onChange(newSize);\n            this.setState(_defineProperty({\n              draggedSize: newSize\n            }, isPrimaryFirst ? \"pane1Size\" : \"pane2Size\", newSize));\n          }\n        }\n      }\n    }\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp() {\n      var _this$props3 = this.props,\n          allowResize = _this$props3.allowResize,\n          onDragFinished = _this$props3.onDragFinished;\n      var _this$state2 = this.state,\n          active = _this$state2.active,\n          draggedSize = _this$state2.draggedSize;\n\n      if (allowResize && active) {\n        if (typeof onDragFinished === \"function\") {\n          onDragFinished(draggedSize);\n        }\n\n        this.setState({\n          active: false\n        });\n      }\n    } // we have to check values since gDSFP is called on every render and more in StrictMode\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _cx,\n          _cx2,\n          _cx3,\n          _this2 = this;\n\n      var _this$props4 = this.props,\n          allowResize = _this$props4.allowResize,\n          children = _this$props4.children,\n          className = _this$props4.className,\n          onResizerClick = _this$props4.onResizerClick,\n          onResizerDoubleClick = _this$props4.onResizerDoubleClick,\n          paneClassName = _this$props4.paneClassName,\n          pane1ClassName = _this$props4.pane1ClassName,\n          pane2ClassName = _this$props4.pane2ClassName,\n          paneStyle = _this$props4.paneStyle,\n          pane1StyleProps = _this$props4.pane1Style,\n          pane2StyleProps = _this$props4.pane2Style,\n          resizerStyle = _this$props4.resizerStyle,\n          mode = _this$props4.mode,\n          styleProps = _this$props4.style,\n          hover = _this$props4.hover;\n      var _this$state3 = this.state,\n          pane1Size = _this$state3.pane1Size,\n          pane2Size = _this$state3.pane2Size;\n      var disabledClass = allowResize ? \"\" : \"disabled\";\n      var notNullChildren = removeNullChildren(children);\n\n      var style = _objectSpread({\n        display: \"flex\",\n        flex: 1,\n        height: \"100%\",\n        position: \"absolute\",\n        outline: \"none\",\n        overflow: \"hidden\",\n        MozUserSelect: \"text\",\n        WebkitUserSelect: \"text\",\n        msUserSelect: \"text\",\n        userSelect: \"text\"\n      }, styleProps);\n\n      if (mode === \"vertical\") {\n        Object.assign(style, {\n          flexDirection: \"row\",\n          left: 0,\n          right: 0\n        });\n      } else {\n        Object.assign(style, {\n          bottom: 0,\n          flexDirection: \"column\",\n          minHeight: \"100%\",\n          top: 0,\n          width: \"100%\"\n        });\n      }\n\n      var pane1Style = _objectSpread(_objectSpread({}, paneStyle), pane1StyleProps);\n\n      var pane2Style = _objectSpread(_objectSpread({}, paneStyle), pane2StyleProps);\n\n      var classes = cx((_cx = {}, _defineProperty(_cx, \"\".concat(mode), mode), _defineProperty(_cx, \"\".concat(className), className), _defineProperty(_cx, \"\".concat(disabledClass), disabledClass), _cx));\n      var pane1Classes = cx((_cx2 = {}, _defineProperty(_cx2, \"\".concat(paneClassName), paneClassName), _defineProperty(_cx2, \"\".concat(pane1ClassName), pane1ClassName), _cx2));\n      var pane2Classes = cx((_cx3 = {}, _defineProperty(_cx3, \"\".concat(paneClassName), paneClassName), _defineProperty(_cx3, \"\".concat(pane2ClassName), pane2ClassName), _cx3));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes,\n        ref: function ref(node) {\n          _this2.splitPane = node;\n        },\n        style: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Panel, {\n        className: pane1Classes,\n        key: \"panel1\",\n        eleRef: function eleRef(node) {\n          _this2.pane1 = node;\n        },\n        size: pane1Size,\n        mode: mode,\n        style: pane1Style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 9\n        }\n      }, notNullChildren[0]), /*#__PURE__*/React.createElement(Resizer, {\n        className: disabledClass,\n        onClick: onResizerClick,\n        onDoubleClick: onResizerDoubleClick,\n        onMouseDown: this.onMouseDown,\n        onTouchStart: this.onTouchStart,\n        onTouchEnd: this.onMouseUp,\n        key: \"resizer\",\n        mode: mode,\n        style: resizerStyle || {},\n        hover: hover,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Panel, {\n        className: pane2Classes,\n        key: \"panel2\",\n        eleRef: function eleRef(node) {\n          _this2.pane2 = node;\n        },\n        size: pane2Size,\n        mode: mode,\n        style: pane2Style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 9\n        }\n      }, notNullChildren[1]));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      return SplitPanel.getSizeUpdate(nextProps, prevState);\n    }\n  }, {\n    key: \"getSizeUpdate\",\n    value: function getSizeUpdate(props, state) {\n      var newState = {};\n      var instanceProps = state.instanceProps;\n\n      if (instanceProps.size === props.size && props.size !== undefined) {\n        return {};\n      }\n\n      var newSize = props.size !== undefined ? props.size : getDefaultSize(props.defaultSize, props.minSize, props.maxSize, state.draggedSize);\n\n      if (props.size !== undefined) {\n        newState.draggedSize = newSize;\n      }\n\n      var isPane1Primary = props.primary === \"first\";\n      newState[isPane1Primary ? \"pane1Size\" : \"pane2Size\"] = newSize;\n      newState[isPane1Primary ? \"pane2Size\" : \"pane1Size\"] = undefined;\n      newState.instanceProps = {\n        size: props.size\n      };\n      return newState;\n    }\n  }]);\n\n  return SplitPanel;\n}(React.Component);\n\nSplitPanel.defaultProps = {\n  allowResize: true,\n  minSize: 50,\n  primary: \"first\",\n  mode: \"vertical\",\n  hover: false,\n  paneClassName: \"\",\n  pane1ClassName: \"\",\n  pane2ClassName: \"\"\n};\nexport default SplitPanel;","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/图元/react-visual-data/src/components/split-panel/split.js"],"names":["React","cx","Panel","Resizer","unFocus","document","window","selection","empty","getSelection","removeAllRanges","e","getDefaultSize","defaultSize","minSize","maxSize","draggedSize","min","max","Infinity","Math","undefined","removeNullChildren","children","Children","toArray","filter","c","SplitPanel","props","onMouseDown","bind","onTouchStart","onMouseMove","onTouchMove","onMouseUp","size","primary","initialSize","state","active","resized","pane1Size","pane2Size","instanceProps","addEventListener","setState","getSizeUpdate","removeEventListener","event","eventWithTouches","Object","assign","touches","clientX","clientY","allowResize","onDragStarted","mode","position","onChange","step","isPrimaryFirst","ref","pane1","pane2","ref2","node","node2","getBoundingClientRect","width","height","current","positionDelta","abs","sizeDelta","pane1Order","parseInt","getComputedStyle","order","pane2Order","newMaxSize","splitPane","newSize","newPosition","onDragFinished","className","onResizerClick","onResizerDoubleClick","paneClassName","pane1ClassName","pane2ClassName","paneStyle","pane1StyleProps","pane1Style","pane2StyleProps","pane2Style","resizerStyle","styleProps","style","hover","disabledClass","notNullChildren","display","flex","outline","overflow","MozUserSelect","WebkitUserSelect","msUserSelect","userSelect","flexDirection","left","right","bottom","minHeight","top","classes","pane1Classes","pane2Classes","nextProps","prevState","newState","isPane1Primary","Component","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport cx from \"classnames\";\nimport Panel from \"./panel\";\nimport Resizer from \"./resizer\";\n\nfunction unFocus(document, window) {\n  if (document.selection) {\n    document.selection.empty();\n  } else {\n    try {\n      window.getSelection().removeAllRanges();\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction getDefaultSize(defaultSize, minSize, maxSize, draggedSize) {\n  if (typeof draggedSize === \"number\") {\n    const min = typeof minSize === \"number\" ? minSize : 0;\n    const max = typeof maxSize === \"number\" && maxSize >= 0 ? maxSize : Infinity;\n    return Math.max(min, Math.min(max, draggedSize));\n  }\n  if (defaultSize !== undefined) {\n    return defaultSize;\n  }\n  return minSize;\n}\n\nfunction removeNullChildren(children) {\n  return React.Children.toArray(children).filter((c) => c);\n}\n\nclass SplitPanel extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onTouchMove = this.onTouchMove.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n\n    // order of setting panel sizes.\n    // 1. size\n    // 2. getDefaultSize(defaultSize, minsize, maxSize)\n\n    const { size, defaultSize, minSize, maxSize, primary } = props;\n\n    const initialSize = size !== undefined ? size : getDefaultSize(defaultSize, minSize, maxSize, null);\n\n    this.state = {\n      active: false,\n      resized: false,\n      pane1Size: primary === \"first\" ? initialSize : undefined,\n      pane2Size: primary === \"second\" ? initialSize : undefined,\n\n      // these are props that are needed in static functions. ie: gDSFP\n      instanceProps: {\n        size\n      }\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mouseup\", this.onMouseUp);\n    document.addEventListener(\"mousemove\", this.onMouseMove);\n    document.addEventListener(\"touchmove\", this.onTouchMove);\n    this.setState(SplitPanel.getSizeUpdate(this.props, this.state));\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    return SplitPanel.getSizeUpdate(nextProps, prevState);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mouseup\", this.onMouseUp);\n    document.removeEventListener(\"mousemove\", this.onMouseMove);\n    document.removeEventListener(\"touchmove\", this.onTouchMove);\n  }\n\n  onMouseDown(event) {\n    const eventWithTouches = Object.assign({}, event, {\n      touches: [{ clientX: event.clientX, clientY: event.clientY }]\n    });\n    this.onTouchStart(eventWithTouches);\n  }\n\n  onTouchStart(event) {\n    const { allowResize, onDragStarted, mode } = this.props;\n    if (allowResize) {\n      unFocus(document, window);\n      const position = mode === \"vertical\" ? event.touches[0].clientX : event.touches[0].clientY;\n\n      if (typeof onDragStarted === \"function\") {\n        onDragStarted();\n      }\n      this.setState({\n        active: true,\n        position\n      });\n    }\n  }\n\n  onMouseMove(event) {\n    const eventWithTouches = Object.assign({}, event, {\n      touches: [{ clientX: event.clientX, clientY: event.clientY }]\n    });\n    this.onTouchMove(eventWithTouches);\n  }\n\n  onTouchMove(event) {\n    const { allowResize, maxSize, minSize, onChange, mode, step } = this.props;\n    const { active, position } = this.state;\n\n    if (allowResize && active) {\n      unFocus(document, window);\n      const isPrimaryFirst = this.props.primary === \"first\";\n      const ref = isPrimaryFirst ? this.pane1 : this.pane2;\n      const ref2 = isPrimaryFirst ? this.pane2 : this.pane1;\n      if (ref) {\n        const node = ref;\n        const node2 = ref2;\n\n        if (node.getBoundingClientRect) {\n          const width = node.getBoundingClientRect().width;\n          const height = node.getBoundingClientRect().height;\n          const current = mode === \"vertical\" ? event.touches[0].clientX : event.touches[0].clientY;\n          const size = mode === \"vertical\" ? width : height;\n          let positionDelta = position - current;\n          if (step) {\n            if (Math.abs(positionDelta) < step) {\n              return;\n            }\n            // Integer division\n            // eslint-disable-next-line no-bitwise\n            positionDelta = ~~(positionDelta / step) * step;\n          }\n          let sizeDelta = isPrimaryFirst ? positionDelta : -positionDelta;\n\n          const pane1Order = parseInt(window.getComputedStyle(node).order);\n          const pane2Order = parseInt(window.getComputedStyle(node2).order);\n          if (pane1Order > pane2Order) {\n            sizeDelta = -sizeDelta;\n          }\n\n          let newMaxSize = maxSize;\n          if (maxSize !== undefined && maxSize <= 0) {\n            const splitPane = this.splitPane;\n            if (mode === \"vertical\") {\n              newMaxSize = splitPane.getBoundingClientRect().width + maxSize;\n            } else {\n              newMaxSize = splitPane.getBoundingClientRect().height + maxSize;\n            }\n          }\n\n          let newSize = size - sizeDelta;\n          const newPosition = position - positionDelta;\n\n          if (newSize < minSize) {\n            newSize = minSize;\n          } else if (maxSize !== undefined && newSize > newMaxSize) {\n            newSize = newMaxSize;\n          } else {\n            this.setState({\n              position: newPosition,\n              resized: true\n            });\n          }\n\n          if (onChange) onChange(newSize);\n\n          this.setState({\n            draggedSize: newSize,\n            [isPrimaryFirst ? \"pane1Size\" : \"pane2Size\"]: newSize\n          });\n        }\n      }\n    }\n  }\n\n  onMouseUp() {\n    const { allowResize, onDragFinished } = this.props;\n    const { active, draggedSize } = this.state;\n    if (allowResize && active) {\n      if (typeof onDragFinished === \"function\") {\n        onDragFinished(draggedSize);\n      }\n      this.setState({ active: false });\n    }\n  }\n\n  // we have to check values since gDSFP is called on every render and more in StrictMode\n  static getSizeUpdate(props, state) {\n    const newState = {};\n    const { instanceProps } = state;\n\n    if (instanceProps.size === props.size && props.size !== undefined) {\n      return {};\n    }\n\n    const newSize =\n      props.size !== undefined\n        ? props.size\n        : getDefaultSize(props.defaultSize, props.minSize, props.maxSize, state.draggedSize);\n\n    if (props.size !== undefined) {\n      newState.draggedSize = newSize;\n    }\n\n    const isPane1Primary = props.primary === \"first\";\n\n    newState[isPane1Primary ? \"pane1Size\" : \"pane2Size\"] = newSize;\n    newState[isPane1Primary ? \"pane2Size\" : \"pane1Size\"] = undefined;\n\n    newState.instanceProps = { size: props.size };\n\n    return newState;\n  }\n\n  render() {\n    const {\n      allowResize,\n      children,\n      className,\n      onResizerClick,\n      onResizerDoubleClick,\n      paneClassName,\n      pane1ClassName,\n      pane2ClassName,\n      paneStyle,\n      pane1Style: pane1StyleProps,\n      pane2Style: pane2StyleProps,\n      resizerStyle,\n      mode,\n      style: styleProps,\n      hover\n    } = this.props;\n\n    const { pane1Size, pane2Size } = this.state;\n\n    const disabledClass = allowResize ? \"\" : \"disabled\";\n\n    const notNullChildren = removeNullChildren(children);\n\n    const style = {\n      display: \"flex\",\n      flex: 1,\n      height: \"100%\",\n      position: \"absolute\",\n      outline: \"none\",\n      overflow: \"hidden\",\n      MozUserSelect: \"text\",\n      WebkitUserSelect: \"text\",\n      msUserSelect: \"text\",\n      userSelect: \"text\",\n      ...styleProps\n    };\n\n    if (mode === \"vertical\") {\n      Object.assign(style, {\n        flexDirection: \"row\",\n        left: 0,\n        right: 0\n      });\n    } else {\n      Object.assign(style, {\n        bottom: 0,\n        flexDirection: \"column\",\n        minHeight: \"100%\",\n        top: 0,\n        width: \"100%\"\n      });\n    }\n\n    const pane1Style = { ...paneStyle, ...pane1StyleProps };\n    const pane2Style = { ...paneStyle, ...pane2StyleProps };\n\n    const classes = cx({\n      [`${mode}`]: mode,\n      [`${className}`]: className,\n      [`${disabledClass}`]: disabledClass\n    });\n\n    const pane1Classes = cx({\n      [`${paneClassName}`]: paneClassName,\n      [`${pane1ClassName}`]: pane1ClassName\n    });\n\n    const pane2Classes = cx({\n      [`${paneClassName}`]: paneClassName,\n      [`${pane2ClassName}`]: pane2ClassName\n    });\n\n    return (\n      <div\n        className={classes}\n        ref={(node) => {\n          this.splitPane = node;\n        }}\n        style={style}\n      >\n        <Panel\n          className={pane1Classes}\n          key=\"panel1\"\n          eleRef={(node) => {\n            this.pane1 = node;\n          }}\n          size={pane1Size}\n          mode={mode}\n          style={pane1Style}\n        >\n          {notNullChildren[0]}\n        </Panel>\n        <Resizer\n          className={disabledClass}\n          onClick={onResizerClick}\n          onDoubleClick={onResizerDoubleClick}\n          onMouseDown={this.onMouseDown}\n          onTouchStart={this.onTouchStart}\n          onTouchEnd={this.onMouseUp}\n          key=\"resizer\"\n          mode={mode}\n          style={resizerStyle || {}}\n          hover={hover}\n        />\n        <Panel\n          className={pane2Classes}\n          key=\"panel2\"\n          eleRef={(node) => {\n            this.pane2 = node;\n          }}\n          size={pane2Size}\n          mode={mode}\n          style={pane2Style}\n        >\n          {notNullChildren[1]}\n        </Panel>\n      </div>\n    );\n  }\n}\n\nSplitPanel.defaultProps = {\n  allowResize: true,\n  minSize: 50,\n  primary: \"first\",\n  mode: \"vertical\",\n  hover: false,\n  paneClassName: \"\",\n  pane1ClassName: \"\",\n  pane2ClassName: \"\"\n};\n\nexport default SplitPanel;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/src/materials/decoration/src/decoration1.js\";\n\nimport React, { useMemo, useRef, forwardRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useAutoResize } from \"~common/hooks\";\nimport { uuid } from \"~utils\";\nvar svgWH = [100, 100];\nvar Decoration = forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      style = _ref.style,\n      _ref$waitTime = _ref.waitTime,\n      waitTime = _ref$waitTime === void 0 ? 3 : _ref$waitTime;\n\n  var _useAutoResize = useAutoResize(ref),\n      width = _useAutoResize.width,\n      height = _useAutoResize.height,\n      domRef = _useAutoResize.domRef;\n\n  var polygonIdRef = useRef(\"decoration-polygon-\".concat(uuid()));\n  var mergedColor = [\"rgba(3, 166, 224, 0.8)\", \"rgba(3, 166, 224, 0.5)\"];\n  var svgScale = useMemo(function () {\n    var w = svgWH[0],\n        h = svgWH[1];\n    return [width / w, height / h];\n  }, [width, height]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gc-containers gc-decoration\",\n    style: style,\n    ref: domRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"\".concat(svgWH[0], \"px\"),\n    height: \"\".concat(svgWH[1], \"px\"),\n    style: {\n      transform: \"scale(\".concat(svgScale[0], \",\").concat(svgScale[1], \")\")\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"defs\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"polygon\", {\n    id: polygonIdRef.current,\n    points: \"15, 46.5, 21, 47.5, 21, 52.5, 15, 53.5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"50\",\n    cy: \"50\",\n    r: \"45\",\n    fill: \"transparent\",\n    stroke: mergedColor[1],\n    strokeWidth: \"10\",\n    strokeDasharray: \"80, 100, 30, 100\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    type: \"rotate\",\n    values: \"0 50 50;360 50 50\",\n    dur: \"\".concat(waitTime, \"s\"),\n    repeatCount: \"indefinite\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"50\",\n    cy: \"50\",\n    r: \"45\",\n    fill: \"transparent\",\n    stroke: mergedColor[0],\n    strokeWidth: \"6\",\n    strokeDasharray: \"50, 66, 100, 66\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    type: \"rotate\",\n    values: \"0 50 50;-360 50 50\",\n    dur: \"\".concat(waitTime, \"s\"),\n    repeatCount: \"indefinite\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"50\",\n    cy: \"50\",\n    r: \"38\",\n    fill: \"transparent\",\n    stroke: \"rgba(3, 166, 224, 0.3)\",\n    strokeWidth: \"1\",\n    strokeDasharray: \"5, 1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), new Array(20).fill(0).map(function (foo, i) {\n    return /*#__PURE__*/React.createElement(\"use\", {\n      key: i,\n      href: \"#\".concat(polygonIdRef.current),\n      stroke: mergedColor[1],\n      fill: Math.random() > 0.4 ? \"transparent\" : mergedColor[0],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n      attributeName: \"transform\",\n      type: \"rotate\",\n      values: \"0 50 50;360 50 50\",\n      dur: \"\".concat(waitTime, \"s\"),\n      begin: \"\".concat(i * waitTime / 20, \"s\"),\n      repeatCount: \"indefinite\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"50\",\n    cy: \"50\",\n    r: \"26\",\n    fill: \"transparent\",\n    stroke: \"rgba(3, 166, 224, 0.3)\",\n    strokeWidth: \"1\",\n    strokeDasharray: \"5, 1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })), children);\n});\nDecoration.propTypes = {\n  children: PropTypes.node,\n  style: PropTypes.object,\n  waitTime: PropTypes.number\n};\nexport default Decoration;","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/图元/react-visual-data/src/materials/decoration/src/decoration1.js"],"names":["React","useMemo","useRef","forwardRef","PropTypes","useAutoResize","uuid","svgWH","Decoration","ref","children","style","waitTime","width","height","domRef","polygonIdRef","mergedColor","svgScale","w","h","transform","current","Array","fill","map","foo","i","Math","random","propTypes","node","object","number"],"mappings":"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","sourcesContent":["import React, { useMemo, useRef, forwardRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useAutoResize } from \"~common/hooks\";\nimport { uuid } from \"~utils\";\n\nconst svgWH = [100, 100];\n\nconst Decoration = forwardRef(({ children, style, waitTime = 3 }, ref) => {\n  const { width, height, domRef } = useAutoResize(ref);\n\n  const polygonIdRef = useRef(`decoration-polygon-${uuid()}`);\n\n  const mergedColor = [\"rgba(3, 166, 224, 0.8)\", \"rgba(3, 166, 224, 0.5)\"];\n\n  const svgScale = useMemo(() => {\n    const [w, h] = svgWH;\n\n    return [width / w, height / h];\n  }, [width, height]);\n\n  return (\n    <div className=\"gc-containers gc-decoration\" style={style} ref={domRef}>\n      <svg\n        width={`${svgWH[0]}px`}\n        height={`${svgWH[1]}px`}\n        style={{ transform: `scale(${svgScale[0]},${svgScale[1]})` }}\n      >\n        <defs>\n          <polygon id={polygonIdRef.current} points=\"15, 46.5, 21, 47.5, 21, 52.5, 15, 53.5\" />\n        </defs>\n\n        <circle\n          cx=\"50\"\n          cy=\"50\"\n          r=\"45\"\n          fill=\"transparent\"\n          stroke={mergedColor[1]}\n          strokeWidth=\"10\"\n          strokeDasharray=\"80, 100, 30, 100\"\n        >\n          <animateTransform\n            attributeName=\"transform\"\n            type=\"rotate\"\n            values=\"0 50 50;360 50 50\"\n            dur={`${waitTime}s`}\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n\n        <circle\n          cx=\"50\"\n          cy=\"50\"\n          r=\"45\"\n          fill=\"transparent\"\n          stroke={mergedColor[0]}\n          strokeWidth=\"6\"\n          strokeDasharray=\"50, 66, 100, 66\"\n        >\n          <animateTransform\n            attributeName=\"transform\"\n            type=\"rotate\"\n            values=\"0 50 50;-360 50 50\"\n            dur={`${waitTime}s`}\n            repeatCount=\"indefinite\"\n          />\n        </circle>\n\n        <circle\n          cx=\"50\"\n          cy=\"50\"\n          r=\"38\"\n          fill=\"transparent\"\n          stroke=\"rgba(3, 166, 224, 0.3)\"\n          strokeWidth=\"1\"\n          strokeDasharray=\"5, 1\"\n        />\n        {new Array(20).fill(0).map((foo, i) => (\n          <use\n            key={i}\n            href={`#${polygonIdRef.current}`}\n            stroke={mergedColor[1]}\n            fill={Math.random() > 0.4 ? \"transparent\" : mergedColor[0]}\n          >\n            <animateTransform\n              attributeName=\"transform\"\n              type=\"rotate\"\n              values=\"0 50 50;360 50 50\"\n              dur={`${waitTime}s`}\n              begin={`${(i * waitTime) / 20}s`}\n              repeatCount=\"indefinite\"\n            />\n          </use>\n        ))}\n        <circle\n          cx=\"50\"\n          cy=\"50\"\n          r=\"26\"\n          fill=\"transparent\"\n          stroke=\"rgba(3, 166, 224, 0.3)\"\n          strokeWidth=\"1\"\n          strokeDasharray=\"5, 1\"\n        />\n      </svg>\n      {children}\n    </div>\n  );\n});\n\nDecoration.propTypes = {\n  children: PropTypes.node,\n  style: PropTypes.object,\n  waitTime: PropTypes.number\n};\n\nexport default Decoration;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/src/pages/report/preview.jsx\";\nimport React, { useMemo, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AxureGridParser } from \"~renderer\";\nimport { Scrollbar } from \"~components\";\nimport { useDocumentTitle } from \"~common/hooks\";\nimport storage from \"~utils/storage\";\n\nfunction PanelPreview(props) {\n  var schemaConfig = JSON.parse(storage.getLocal(\"schema_report_config\") || {});\n  var _schemaConfig$page = schemaConfig.page,\n      name = _schemaConfig$page.name,\n      backgroundMode = _schemaConfig$page.backgroundMode,\n      backgroundColor = _schemaConfig$page.backgroundColor,\n      backgroundImage = _schemaConfig$page.backgroundImage,\n      backgroundDefine = _schemaConfig$page.backgroundDefine,\n      backgroundOpacity = _schemaConfig$page.backgroundOpacity,\n      backgroundBlur = _schemaConfig$page.backgroundBlur;\n  useDocumentTitle(\"DataV Pro - \".concat(name || \"未命名\"));\n  var backgroundStyles = useMemo(function () {\n    if (backgroundMode === \"custom\") {\n      return backgroundImage ? \"url(\".concat(backgroundImage, \") 0% 0% / 100% 100%\") : backgroundColor;\n    }\n\n    if (backgroundMode === \"define\") {\n      return \"url(./static/templet/\".concat(backgroundDefine, \") 0% 0% / 100% 100%\");\n    }\n\n    return backgroundColor ? backgroundColor : null;\n  }, [backgroundMode, backgroundImage, backgroundDefine, backgroundColor]);\n  useEffect(function () {\n    props.dispatch({\n      type: \"component/mode\",\n      data: \"preview\"\n    });\n    return function () {\n      storage.clear();\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-container\",\n    style: {\n      background: backgroundStyles,\n      filter: \"blur(\".concat(backgroundBlur, \"px)\"),\n      opacity: parseFloat(backgroundOpacity / 10)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Scrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AxureGridParser, {\n    dataGrid: schemaConfig.components,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default connect(function (state) {\n  return state.component;\n})(PanelPreview);","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/图元/react-visual-data/src/pages/report/preview.jsx"],"names":["React","useMemo","useEffect","connect","AxureGridParser","Scrollbar","useDocumentTitle","storage","PanelPreview","props","schemaConfig","JSON","parse","getLocal","page","name","backgroundMode","backgroundColor","backgroundImage","backgroundDefine","backgroundOpacity","backgroundBlur","backgroundStyles","dispatch","type","data","clear","background","filter","opacity","parseFloat","components","state","component"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACM,QAAR,CAAiB,sBAAjB,KAA4C,EAAvD,CAAnB;AAD2B,2BAUvBH,YAAY,CAACI,IAVU;AAAA,MAGzBC,IAHyB,sBAGzBA,IAHyB;AAAA,MAIzBC,cAJyB,sBAIzBA,cAJyB;AAAA,MAKzBC,eALyB,sBAKzBA,eALyB;AAAA,MAMzBC,eANyB,sBAMzBA,eANyB;AAAA,MAOzBC,gBAPyB,sBAOzBA,gBAPyB;AAAA,MAQzBC,iBARyB,sBAQzBA,iBARyB;AAAA,MASzBC,cATyB,sBASzBA,cATyB;AAW3Bf,EAAAA,gBAAgB,uBAAgBS,IAAI,IAAI,KAAxB,EAAhB;AAEA,MAAMO,gBAAgB,GAAGrB,OAAO,CAAC,YAAM;AACrC,QAAIe,cAAc,KAAK,QAAvB,EAAiC;AAC/B,aAAOE,eAAe,iBAAUA,eAAV,2BAAiDD,eAAvE;AACD;;AAED,QAAID,cAAc,KAAK,QAAvB,EAAiC;AAC/B,4CAA+BG,gBAA/B;AACD;;AAED,WAAOF,eAAe,GAAGA,eAAH,GAAqB,IAA3C;AACD,GAV+B,EAU7B,CAACD,cAAD,EAAiBE,eAAjB,EAAkCC,gBAAlC,EAAoDF,eAApD,CAV6B,CAAhC;AAYAf,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,KAAK,CAACc,QAAN,CAAe;AAAEC,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,IAAI,EAAE;AAAhC,KAAf;AACA,WAAO,YAAM;AACXlB,MAAAA,OAAO,CAACmB,KAAR;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,sBACE,uDACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEL,gBADP;AAELM,MAAAA,MAAM,iBAAUP,cAAV,QAFD;AAGLQ,MAAAA,OAAO,EAAEC,UAAU,CAACV,iBAAiB,GAAG,EAArB;AAHd,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,QAAQ,EAAEV,YAAY,CAACqB,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,CADF;AAeD;;AAED,eAAe5B,OAAO,CAAC,UAAC6B,KAAD;AAAA,SAAWA,KAAK,CAACC,SAAjB;AAAA,CAAD,CAAP,CAAoCzB,YAApC,CAAf","sourcesContent":["import React, { useMemo, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AxureGridParser } from \"~renderer\";\nimport { Scrollbar } from \"~components\";\nimport { useDocumentTitle } from \"~common/hooks\";\nimport storage from \"~utils/storage\";\n\nfunction PanelPreview(props) {\n  let schemaConfig = JSON.parse(storage.getLocal(\"schema_report_config\") || {});\n  const {\n    name,\n    backgroundMode,\n    backgroundColor,\n    backgroundImage,\n    backgroundDefine,\n    backgroundOpacity,\n    backgroundBlur\n  } = schemaConfig.page;\n  useDocumentTitle(`DataV Pro - ${name || \"未命名\"}`);\n\n  const backgroundStyles = useMemo(() => {\n    if (backgroundMode === \"custom\") {\n      return backgroundImage ? `url(${backgroundImage}) 0% 0% / 100% 100%` : backgroundColor;\n    }\n\n    if (backgroundMode === \"define\") {\n      return `url(./static/templet/${backgroundDefine}) 0% 0% / 100% 100%`;\n    }\n\n    return backgroundColor ? backgroundColor : null;\n  }, [backgroundMode, backgroundImage, backgroundDefine, backgroundColor]);\n\n  useEffect(() => {\n    props.dispatch({ type: \"component/mode\", data: \"preview\" });\n    return () => {\n      storage.clear();\n    };\n  }, []);\n\n  return (\n    <>\n      <div\n        className=\"bg-container\"\n        style={{\n          background: backgroundStyles,\n          filter: `blur(${backgroundBlur}px)`,\n          opacity: parseFloat(backgroundOpacity / 10)\n        }}\n      />\n      <Scrollbar>\n        <AxureGridParser dataGrid={schemaConfig.components} />\n      </Scrollbar>\n    </>\n  );\n}\n\nexport default connect((state) => state.component)(PanelPreview);\n"]},"metadata":{},"sourceType":"module"}
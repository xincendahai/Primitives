{"ast":null,"code":"import _objectSpread from \"/Users/xiangmingxin/Wicrecend/Primitives/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport \"antd/es/tabs/style\";\nimport _Tabs from \"antd/es/tabs\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/xiangmingxin/Wicrecend/Primitives/src/pages/fullscreen/src/setting.jsx\";\n\nimport React, { useMemo } from \"react\";\nimport { connect } from \"react-redux\";\nimport cx from \"classnames\";\nimport { SchemaRender } from \"~renderer\";\nimport PageLayout from \"./page\";\nimport { useTools, useStore } from \"~common/hooks\";\nimport { getFieldConf, mergeFieldConfig, setLevelPath } from \"~renderer/utils\";\nimport { screenToSchema } from \"../schema\";\nvar TabPane = _Tabs.TabPane;\n\nvar FieldSetConf = function FieldSetConf(_ref) {\n  var activeKey = _ref.activeKey;\n\n  var _useTools = useTools(),\n      state = _useTools.state,\n      setState = _useTools.setState;\n\n  var _useStore = useStore(),\n      view = _useStore.view;\n\n  var classNames = cx(\"gc-design__setting\", {\n    \"is-show\": view.settingCollapsed\n  });\n  var currentConf = useMemo(function () {\n    if (state.components.length > 0 && activeKey !== \"-\") {\n      try {\n        // TODO: 获取物料组件配置项\n        var currentField = getFieldConf(state.components, activeKey);\n        return {\n          cname: currentField.type,\n          cid: currentField.uniqueId,\n          value: currentField.data,\n          configs: screenToSchema.find(function (o) {\n            return o.materials === currentField.type;\n          }).fields\n        };\n      } catch (error) {}\n    }\n\n    return {\n      cname: null,\n      cid: null,\n      value: {},\n      configs: []\n    };\n  }, [activeKey, state.tabsKey]);\n\n  if (activeKey === \"-\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PageLayout, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  var onValueChange = function onValueChange(value) {\n    var rootValue = _objectSpread({}, value); // 联动、下钻参数变更\n\n\n    if (value.drillDownOpen) {\n      rootValue = _objectSpread(_objectSpread({}, rootValue), {}, {\n        dependenceOpen: !value.drillDownOpen\n      });\n    }\n\n    if (value.dependenceOpen) {\n      rootValue = _objectSpread(_objectSpread({}, rootValue), {}, {\n        drillDownOpen: !value.dependenceOpen\n      });\n    }\n\n    var results = mergeFieldConfig(state.components, {\n      parentId: activeKey\n    }, rootValue);\n    setLevelPath(results, null);\n    setState({\n      components: results\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Tabs, {\n    className: \"setting-panel\",\n    size: \"large\",\n    tabPosition: \"right\",\n    activeKey: state.tabsKey,\n    onTabClick: function onTabClick(key) {\n      setState({\n        tabsKey: key\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, currentConf.configs.map(function (item) {\n    return /*#__PURE__*/React.createElement(TabPane, {\n      tab: item.name,\n      key: item.key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, state.tabsKey === item.key && /*#__PURE__*/React.createElement(SchemaRender, {\n      cname: currentConf.cname,\n      cid: currentConf.cid,\n      schema: item.schema,\n      formData: currentConf.value,\n      onChange: onValueChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }));\n  })));\n};\n\nexport default connect(function (state) {\n  return {\n    activeKey: state.component.activeKey\n  };\n})(FieldSetConf);","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/Primitives/src/pages/fullscreen/src/setting.jsx"],"names":["React","useMemo","connect","cx","SchemaRender","PageLayout","useTools","useStore","getFieldConf","mergeFieldConfig","setLevelPath","screenToSchema","TabPane","FieldSetConf","activeKey","state","setState","view","classNames","settingCollapsed","currentConf","components","length","currentField","cname","type","cid","uniqueId","value","data","configs","find","o","materials","fields","error","tabsKey","onValueChange","rootValue","drillDownOpen","dependenceOpen","results","parentId","key","map","item","name","schema","component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,UAAP,MAAuB,QAAvB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,eAAnC;AACA,SAASC,YAAT,EAAuBC,gBAAvB,EAAyCC,YAAzC,QAA6D,iBAA7D;AACA,SAASC,cAAT,QAA+B,WAA/B;IAEQC,O,SAAAA,O;;AAER,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAmB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAAA,kBACVR,QAAQ,EADE;AAAA,MAC9BS,KAD8B,aAC9BA,KAD8B;AAAA,MACvBC,QADuB,aACvBA,QADuB;;AAAA,kBAErBT,QAAQ,EAFa;AAAA,MAE9BU,IAF8B,aAE9BA,IAF8B;;AAItC,MAAMC,UAAU,GAAGf,EAAE,CAAC,oBAAD,EAAuB;AAC1C,eAAWc,IAAI,CAACE;AAD0B,GAAvB,CAArB;AAIA,MAAMC,WAAW,GAAGnB,OAAO,CAAC,YAAM;AAChC,QAAIc,KAAK,CAACM,UAAN,CAAiBC,MAAjB,GAA0B,CAA1B,IAA+BR,SAAS,KAAK,GAAjD,EAAsD;AACpD,UAAI;AACF;AACA,YAAMS,YAAY,GAAGf,YAAY,CAACO,KAAK,CAACM,UAAP,EAAmBP,SAAnB,CAAjC;AAEA,eAAO;AACLU,UAAAA,KAAK,EAAED,YAAY,CAACE,IADf;AAELC,UAAAA,GAAG,EAAEH,YAAY,CAACI,QAFb;AAGLC,UAAAA,KAAK,EAAEL,YAAY,CAACM,IAHf;AAILC,UAAAA,OAAO,EAAEnB,cAAc,CAACoB,IAAf,CAAoB,UAACC,CAAD;AAAA,mBAAOA,CAAC,CAACC,SAAF,KAAgBV,YAAY,CAACE,IAApC;AAAA,WAApB,EAA8DS;AAJlE,SAAP;AAMD,OAVD,CAUE,OAAOC,KAAP,EAAc,CAAE;AACnB;;AAED,WAAO;AACLX,MAAAA,KAAK,EAAE,IADF;AAELE,MAAAA,GAAG,EAAE,IAFA;AAGLE,MAAAA,KAAK,EAAE,EAHF;AAILE,MAAAA,OAAO,EAAE;AAJJ,KAAP;AAMD,GArB0B,EAqBxB,CAAChB,SAAD,EAAYC,KAAK,CAACqB,OAAlB,CArBwB,CAA3B;;AAuBA,MAAItB,SAAS,KAAK,GAAlB,EAAuB;AACrB,wBACE;AAAK,MAAA,SAAS,EAAEI,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAED,MAAMmB,aAAa,GAAG,SAAhBA,aAAgB,CAACT,KAAD,EAAW;AAC/B,QAAIU,SAAS,qBAAQV,KAAR,CAAb,CAD+B,CAG/B;;;AACA,QAAIA,KAAK,CAACW,aAAV,EAAyB;AACvBD,MAAAA,SAAS,mCACJA,SADI;AAEPE,QAAAA,cAAc,EAAE,CAACZ,KAAK,CAACW;AAFhB,QAAT;AAID;;AAED,QAAIX,KAAK,CAACY,cAAV,EAA0B;AACxBF,MAAAA,SAAS,mCACJA,SADI;AAEPC,QAAAA,aAAa,EAAE,CAACX,KAAK,CAACY;AAFf,QAAT;AAID;;AAED,QAAIC,OAAO,GAAGhC,gBAAgB,CAACM,KAAK,CAACM,UAAP,EAAmB;AAAEqB,MAAAA,QAAQ,EAAE5B;AAAZ,KAAnB,EAA4CwB,SAA5C,CAA9B;AACA5B,IAAAA,YAAY,CAAC+B,OAAD,EAAU,IAAV,CAAZ;AACAzB,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,UAAU,EAAEoB;AAAd,KAAD,CAAR;AACD,GArBD;;AAuBA,sBACE;AAAK,IAAA,SAAS,EAAEvB,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,WAAW,EAAC,OAHd;AAIE,IAAA,SAAS,EAAEH,KAAK,CAACqB,OAJnB;AAKE,IAAA,UAAU,EAAE,oBAACO,GAAD,EAAS;AACnB3B,MAAAA,QAAQ,CAAC;AAAEoB,QAAAA,OAAO,EAAEO;AAAX,OAAD,CAAR;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGvB,WAAW,CAACU,OAAZ,CAAoBc,GAApB,CAAwB,UAACC,IAAD;AAAA,wBACvB,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,IAAI,CAACC,IAAnB;AAAyB,MAAA,GAAG,EAAED,IAAI,CAACF,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG5B,KAAK,CAACqB,OAAN,KAAkBS,IAAI,CAACF,GAAvB,iBACC,oBAAC,YAAD;AACE,MAAA,KAAK,EAAEvB,WAAW,CAACI,KADrB;AAEE,MAAA,GAAG,EAAEJ,WAAW,CAACM,GAFnB;AAGE,MAAA,MAAM,EAAEmB,IAAI,CAACE,MAHf;AAIE,MAAA,QAAQ,EAAE3B,WAAW,CAACQ,KAJxB;AAKE,MAAA,QAAQ,EAAES,aALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADuB;AAAA,GAAxB,CATH,CADF,CADF;AA2BD,CAzFD;;AA2FA,eAAenC,OAAO,CAAC,UAACa,KAAD;AAAA,SAAY;AACjCD,IAAAA,SAAS,EAAEC,KAAK,CAACiC,SAAN,CAAgBlC;AADM,GAAZ;AAAA,CAAD,CAAP,CAEXD,YAFW,CAAf","sourcesContent":["import React, { useMemo } from \"react\";\nimport { Tabs } from \"antd\";\nimport { connect } from \"react-redux\";\nimport cx from \"classnames\";\nimport { SchemaRender } from \"~renderer\";\nimport PageLayout from \"./page\";\nimport { useTools, useStore } from \"~common/hooks\";\nimport { getFieldConf, mergeFieldConfig, setLevelPath } from \"~renderer/utils\";\nimport { screenToSchema } from \"../schema\";\n\nconst { TabPane } = Tabs;\n\nconst FieldSetConf = ({ activeKey }) => {\n  const { state, setState } = useTools();\n  const { view } = useStore();\n\n  const classNames = cx(\"gc-design__setting\", {\n    \"is-show\": view.settingCollapsed\n  });\n\n  const currentConf = useMemo(() => {\n    if (state.components.length > 0 && activeKey !== \"-\") {\n      try {\n        // TODO: 获取物料组件配置项\n        const currentField = getFieldConf(state.components, activeKey);\n\n        return {\n          cname: currentField.type,\n          cid: currentField.uniqueId,\n          value: currentField.data,\n          configs: screenToSchema.find((o) => o.materials === currentField.type).fields\n        };\n      } catch (error) {}\n    }\n\n    return {\n      cname: null,\n      cid: null,\n      value: {},\n      configs: []\n    };\n  }, [activeKey, state.tabsKey]);\n\n  if (activeKey === \"-\") {\n    return (\n      <div className={classNames}>\n        <PageLayout />\n      </div>\n    );\n  }\n\n  const onValueChange = (value) => {\n    let rootValue = { ...value };\n\n    // 联动、下钻参数变更\n    if (value.drillDownOpen) {\n      rootValue = {\n        ...rootValue,\n        dependenceOpen: !value.drillDownOpen\n      };\n    }\n\n    if (value.dependenceOpen) {\n      rootValue = {\n        ...rootValue,\n        drillDownOpen: !value.dependenceOpen\n      };\n    }\n\n    let results = mergeFieldConfig(state.components, { parentId: activeKey }, rootValue);\n    setLevelPath(results, null);\n    setState({ components: results });\n  };\n\n  return (\n    <div className={classNames}>\n      <Tabs\n        className=\"setting-panel\"\n        size=\"large\"\n        tabPosition=\"right\"\n        activeKey={state.tabsKey}\n        onTabClick={(key) => {\n          setState({ tabsKey: key });\n        }}\n      >\n        {currentConf.configs.map((item) => (\n          <TabPane tab={item.name} key={item.key}>\n            {state.tabsKey === item.key && (\n              <SchemaRender\n                cname={currentConf.cname}\n                cid={currentConf.cid}\n                schema={item.schema}\n                formData={currentConf.value}\n                onChange={onValueChange}\n              />\n            )}\n          </TabPane>\n        ))}\n      </Tabs>\n    </div>\n  );\n};\n\nexport default connect((state) => ({\n  activeKey: state.component.activeKey\n}))(FieldSetConf);\n"]},"metadata":{},"sourceType":"module"}
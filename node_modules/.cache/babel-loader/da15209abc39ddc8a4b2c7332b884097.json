{"ast":null,"code":"import echarts from \"echarts\";\nimport { DEFAULT_COLORS, GEOCOORDMAP } from \"~materials/constants\";\n\nfunction convertData(data, config) {\n  return data.reduce(function (arr, val) {\n    var geoCoord = config[val.name];\n\n    if (geoCoord) {\n      arr.push({\n        name: val.name,\n        value: geoCoord.concat(val.value)\n      });\n    }\n\n    return arr;\n  }, []);\n}\n\nexport default function getOptions(option, data) {\n  var _data$series = data.series,\n      series = _data$series === void 0 ? [] : _data$series;\n  var labelTextColor = option.labelTextColor,\n      showAreaName = option.showAreaName,\n      _option$provinces = option.provinces,\n      provinces = _option$provinces === void 0 ? \"sichuan\" : _option$provinces,\n      borderColor = option.borderColor;\n  var mapJson;\n\n  if (provinces === \"china\") {\n    mapJson = require(\"echarts/map/json/china.json\");\n  } else {\n    mapJson = require(\"echarts/map/json/province/\".concat(provinces, \".json\"));\n  }\n\n  echarts.registerMap(provinces, mapJson);\n  return {\n    color: DEFAULT_COLORS,\n    visualMap: {\n      show: false,\n      min: 0,\n      max: 200,\n      calculable: true,\n      seriesIndex: [1],\n      inRange: {\n        color: DEFAULT_COLORS\n      }\n    },\n    legend: {\n      orient: \"vertical\",\n      y: \"bottom\",\n      x: \"right\",\n      data: [\"pm2.5\"]\n    },\n    geo: {\n      map: \"china\",\n      roam: !1,\n      scaleLimit: {\n        min: 1,\n        max: 5\n      },\n      zoom: 1.13,\n      layoutCenter: [\"30%\", \"30%\"],\n      label: {\n        normal: {\n          show: showAreaName,\n          fontSize: \"14\",\n          color: labelTextColor\n        }\n      },\n      itemStyle: {\n        normal: {\n          shadowBlur: 1,\n          shadowColor: \"rgba(18, 32, 70,0.4)\",\n          borderColor: borderColor\n        },\n        emphasis: {\n          areaColor: \"rgba(23, 240, 204)\",\n          shadowOffsetX: 0,\n          shadowOffsetY: 0,\n          borderWidth: 0\n        }\n      }\n    },\n    series: [{\n      type: \"scatter\",\n      geoIndex: 0,\n      coordinateSystem: \"geo\",\n      data: convertData(series, GEOCOORDMAP)\n    }, {\n      name: \"点\",\n      type: \"scatter\",\n      coordinateSystem: \"geo\",\n      zlevel: 6\n    }, {\n      type: \"effectScatter\",\n      coordinateSystem: \"geo\",\n      data: convertData(series, GEOCOORDMAP),\n      symbolSize: function symbolSize(val) {\n        return val[2] / 20;\n      },\n      showEffectOn: \"render\",\n      rippleEffect: {\n        brushType: \"stroke\"\n      },\n      hoverAnimation: true,\n      label: {\n        normal: {\n          formatter: \"{b}\",\n          position: \"left\",\n          show: false\n        }\n      },\n      itemStyle: {\n        normal: {\n          color: \"yellow\",\n          shadowBlur: 10,\n          shadowColor: \"yellow\"\n        }\n      },\n      zlevel: 1\n    }]\n  };\n}","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/图元/react-visual-data/src/materials/vcharts/options/map.js"],"names":["echarts","DEFAULT_COLORS","GEOCOORDMAP","convertData","data","config","reduce","arr","val","geoCoord","name","push","value","concat","getOptions","option","series","labelTextColor","showAreaName","provinces","borderColor","mapJson","require","registerMap","color","visualMap","show","min","max","calculable","seriesIndex","inRange","legend","orient","y","x","geo","map","roam","scaleLimit","zoom","layoutCenter","label","normal","fontSize","itemStyle","shadowBlur","shadowColor","emphasis","areaColor","shadowOffsetX","shadowOffsetY","borderWidth","type","geoIndex","coordinateSystem","zlevel","symbolSize","showEffectOn","rippleEffect","brushType","hoverAnimation","formatter","position"],"mappings":"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","sourcesContent":["import echarts from \"echarts\";\nimport { DEFAULT_COLORS, GEOCOORDMAP } from \"~materials/constants\";\n\nfunction convertData(data, config) {\n  return data.reduce((arr, val) => {\n    const geoCoord = config[val.name];\n    if (geoCoord) {\n      arr.push({\n        name: val.name,\n        value: geoCoord.concat(val.value)\n      });\n    }\n    return arr;\n  }, []);\n}\n\nexport default function getOptions(option, data) {\n  const { series = [] } = data;\n  const { labelTextColor, showAreaName, provinces = \"sichuan\", borderColor } = option;\n\n  let mapJson;\n\n  if (provinces === \"china\") {\n    mapJson = require(`echarts/map/json/china.json`);\n  } else {\n    mapJson = require(`echarts/map/json/province/${provinces}.json`);\n  }\n  echarts.registerMap(provinces, mapJson);\n  return {\n    color: DEFAULT_COLORS,\n    visualMap: {\n      show: false,\n      min: 0,\n      max: 200,\n      calculable: true,\n      seriesIndex: [1],\n      inRange: {\n        color: DEFAULT_COLORS\n      }\n    },\n    legend: {\n      orient: \"vertical\",\n      y: \"bottom\",\n      x: \"right\",\n      data: [\"pm2.5\"]\n    },\n    geo: {\n      map: \"china\",\n      roam: !1,\n      scaleLimit: {\n        min: 1,\n        max: 5\n      },\n      zoom: 1.13,\n      layoutCenter: [\"30%\", \"30%\"],\n      label: {\n        normal: {\n          show: showAreaName,\n          fontSize: \"14\",\n          color: labelTextColor\n        }\n      },\n      itemStyle: {\n        normal: {\n          shadowBlur: 1,\n          shadowColor: \"rgba(18, 32, 70,0.4)\",\n          borderColor\n        },\n        emphasis: {\n          areaColor: \"rgba(23, 240, 204)\",\n          shadowOffsetX: 0,\n          shadowOffsetY: 0,\n          borderWidth: 0\n        }\n      }\n    },\n    series: [\n      {\n        type: \"scatter\",\n        geoIndex: 0,\n        coordinateSystem: \"geo\",\n        data: convertData(series, GEOCOORDMAP)\n      },\n      {\n        name: \"点\",\n        type: \"scatter\",\n        coordinateSystem: \"geo\",\n        zlevel: 6\n      },\n      {\n        type: \"effectScatter\",\n        coordinateSystem: \"geo\",\n        data: convertData(series, GEOCOORDMAP),\n        symbolSize: function (val) {\n          return val[2] / 20;\n        },\n        showEffectOn: \"render\",\n        rippleEffect: {\n          brushType: \"stroke\"\n        },\n        hoverAnimation: true,\n        label: {\n          normal: {\n            formatter: \"{b}\",\n            position: \"left\",\n            show: false\n          }\n        },\n        itemStyle: {\n          normal: {\n            color: \"yellow\",\n            shadowBlur: 10,\n            shadowColor: \"yellow\"\n          }\n        },\n        zlevel: 1\n      }\n    ]\n  };\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/result/style\";\nimport _Result from \"antd/es/result\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport _slicedToArray from \"/Users/xiangmingxin/Wicrecend/Primitives/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/xiangmingxin/Wicrecend/Primitives/src/components/iframe/simple.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { isEmpty } from \"~utils/helper\";\nimport { pathToMosaic } from \"~utils\";\nimport \"./style.less\";\n\nfunction IframeSimple(props) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      url = _useState4[0],\n      setUrl = _useState4[1];\n\n  var _props$className = props.className,\n      className = _props$className === void 0 ? \"\" : _props$className,\n      _props$src = props.src,\n      src = _props$src === void 0 ? \"\" : _props$src,\n      data = props.data,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required;\n  useEffect(function () {\n    var realPath;\n    var reg = /^(http|https):\\/\\//g;\n\n    if (required) {\n      if (reg.test(src)) {\n        realPath = data ? pathToMosaic(src, data) : src;\n        setUrl(realPath);\n      } else {\n        _message.error(\"iframe地址必须以 http 或 https 开头\");\n\n        setLoading(false);\n      }\n    } else {\n      setUrl(src);\n    }\n\n    return function () {\n      setLoading(false);\n    };\n  }, [src]);\n  return /*#__PURE__*/React.createElement(_Spin, {\n    spinning: loading,\n    wrapperClassName: \"gc-iframe\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, !isEmpty(url) ? /*#__PURE__*/React.createElement(\"iframe\", {\n    className: className,\n    onLoad: function onLoad() {\n      return setLoading(false);\n    },\n    src: url,\n    allowFullScreen: true,\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      verticalAlign: \"top\"\n    },\n    frameBorder: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(_Result, {\n    status: 404,\n    title: \"404\",\n    subTitle: \"Sorry, iframe\\u5730\\u5740\\u5FC5\\u987B\\u4EE5 http \\u6216 https \\u5F00\\u5934.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default IframeSimple;","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/Primitives/src/components/iframe/simple.jsx"],"names":["React","useState","useEffect","isEmpty","pathToMosaic","IframeSimple","props","loading","setLoading","url","setUrl","className","src","data","required","realPath","reg","test","error","width","height","verticalAlign"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,YAAT,QAA6B,QAA7B;AAEA,OAAO,cAAP;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,kBACGL,QAAQ,CAAC,IAAD,CADX;AAAA;AAAA,MACpBM,OADoB;AAAA,MACXC,UADW;;AAAA,mBAELP,QAAQ,CAAC,EAAD,CAFH;AAAA;AAAA,MAEpBQ,GAFoB;AAAA,MAEfC,MAFe;;AAAA,yBAGkCJ,KAHlC,CAGnBK,SAHmB;AAAA,MAGnBA,SAHmB,iCAGP,EAHO;AAAA,mBAGkCL,KAHlC,CAGHM,GAHG;AAAA,MAGHA,GAHG,2BAGG,EAHH;AAAA,MAGOC,IAHP,GAGkCP,KAHlC,CAGOO,IAHP;AAAA,wBAGkCP,KAHlC,CAGaQ,QAHb;AAAA,MAGaA,QAHb,gCAGwB,KAHxB;AAK3BZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIa,QAAJ;AACA,QAAMC,GAAG,GAAG,qBAAZ;;AAEA,QAAIF,QAAJ,EAAc;AACZ,UAAIE,GAAG,CAACC,IAAJ,CAASL,GAAT,CAAJ,EAAmB;AACjBG,QAAAA,QAAQ,GAAGF,IAAI,GAAGT,YAAY,CAACQ,GAAD,EAAMC,IAAN,CAAf,GAA6BD,GAA5C;AACAF,QAAAA,MAAM,CAACK,QAAD,CAAN;AACD,OAHD,MAGO;AACL,iBAAQG,KAAR,CAAc,6BAAd;;AACAV,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KARD,MAQO;AACLE,MAAAA,MAAM,CAACE,GAAD,CAAN;AACD;;AAED,WAAO,YAAM;AACXJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFD;AAGD,GAnBQ,EAmBN,CAACI,GAAD,CAnBM,CAAT;AAqBA,sBACE;AAAM,IAAA,QAAQ,EAAEL,OAAhB;AAAyB,IAAA,gBAAgB,EAAC,WAA1C;AAAsD,IAAA,IAAI,EAAC,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACJ,OAAO,CAACM,GAAD,CAAR,gBACC;AACE,IAAA,SAAS,EAAEE,SADb;AAEE,IAAA,MAAM,EAAE;AAAA,aAAMH,UAAU,CAAC,KAAD,CAAhB;AAAA,KAFV;AAGE,IAAA,GAAG,EAAEC,GAHP;AAIE,IAAA,eAAe,EAAE,IAJnB;AAKE,IAAA,KAAK,EAAE;AAAEU,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE,MAAzB;AAAiCC,MAAAA,aAAa,EAAE;AAAhD,KALT;AAME,IAAA,WAAW,EAAC,GANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAUC;AAAQ,IAAA,MAAM,EAAE,GAAhB;AAAqB,IAAA,KAAK,EAAC,KAA3B;AAAiC,IAAA,QAAQ,EAAC,6EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADF;AAgBD;;AAED,eAAehB,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Spin, message, Result } from \"antd\";\nimport { isEmpty } from \"~utils/helper\";\nimport { pathToMosaic } from \"~utils\";\n\nimport \"./style.less\";\n\nfunction IframeSimple(props) {\n  const [loading, setLoading] = useState(true);\n  const [url, setUrl] = useState(\"\");\n  const { className = \"\", src = \"\", data, required = false } = props;\n\n  useEffect(() => {\n    let realPath;\n    const reg = /^(http|https):\\/\\//g;\n\n    if (required) {\n      if (reg.test(src)) {\n        realPath = data ? pathToMosaic(src, data) : src;\n        setUrl(realPath);\n      } else {\n        message.error(\"iframe地址必须以 http 或 https 开头\");\n        setLoading(false);\n      }\n    } else {\n      setUrl(src);\n    }\n\n    return () => {\n      setLoading(false);\n    };\n  }, [src]);\n\n  return (\n    <Spin spinning={loading} wrapperClassName=\"gc-iframe\" size=\"large\">\n      {!isEmpty(url) ? (\n        <iframe\n          className={className}\n          onLoad={() => setLoading(false)}\n          src={url}\n          allowFullScreen={true}\n          style={{ width: \"100%\", height: \"100%\", verticalAlign: \"top\" }}\n          frameBorder=\"0\"\n        />\n      ) : (\n        <Result status={404} title=\"404\" subTitle=\"Sorry, iframe地址必须以 http 或 https 开头.\" />\n      )}\n    </Spin>\n  );\n}\n\nexport default IframeSimple;\n"]},"metadata":{},"sourceType":"module"}
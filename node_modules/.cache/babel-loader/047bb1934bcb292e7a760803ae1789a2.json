{"ast":null,"code":"import \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport _objectSpread from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/src/materials/form/select/multiple.js\";\n\nimport React, { useMemo } from \"react\";\nimport fetcher from \"~materials/hoc\";\n\nvar MultiSelectComponent = function MultiSelectComponent(props) {\n  var style = props.invalid ? {\n    borderColor: \"#f5222d\"\n  } : {};\n\n  var _ref = props.schema || {},\n      enums = _ref.enum,\n      enumNames = _ref.enumNames;\n\n  var rootValue = useMemo(function () {\n    return props.value && Array.isArray(props.value) ? props.value : [];\n  }, [props.value]);\n\n  var onChange = function onChange(value) {\n    return props.onChange(props.name, value);\n  };\n\n  return /*#__PURE__*/React.createElement(_Select, Object.assign({}, props.options, {\n    style: _objectSpread({\n      width: \"100%\"\n    }, style),\n    mode: \"multiple\",\n    disabled: props.disabled || props.readOnly,\n    defaultValue: rootValue,\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }), (enums || []).map(function (val, index) {\n    return /*#__PURE__*/React.createElement(_Select.Option, {\n      value: val,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      // eslint-disable-next-line react/no-danger\n      dangerouslySetInnerHTML: {\n        __html: enumNames ? enumNames[index] : val\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }));\n  }));\n};\n\nexport default fetcher(MultiSelectComponent);","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/图元/react-visual-data/src/materials/form/select/multiple.js"],"names":["React","useMemo","fetcher","MultiSelectComponent","props","style","invalid","borderColor","schema","enums","enum","enumNames","rootValue","value","Array","isArray","onChange","name","options","width","disabled","readOnly","map","val","index","__html"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAEA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD,EAAW;AACtC,MAAMC,KAAK,GAAGD,KAAK,CAACE,OAAN,GAAgB;AAAEC,IAAAA,WAAW,EAAE;AAAf,GAAhB,GAA6C,EAA3D;;AADsC,aAEHH,KAAK,CAACI,MAAN,IAAgB,EAFb;AAAA,MAExBC,KAFwB,QAE9BC,IAF8B;AAAA,MAEjBC,SAFiB,QAEjBA,SAFiB;;AAItC,MAAMC,SAAS,GAAGX,OAAO,CAAC,YAAM;AAC9B,WAAOG,KAAK,CAACS,KAAN,IAAeC,KAAK,CAACC,OAAN,CAAcX,KAAK,CAACS,KAApB,CAAf,GAA4CT,KAAK,CAACS,KAAlD,GAA0D,EAAjE;AACD,GAFwB,EAEtB,CAACT,KAAK,CAACS,KAAP,CAFsB,CAAzB;;AAIA,MAAMG,QAAQ,GAAG,SAAXA,QAAW,CAACH,KAAD;AAAA,WAAWT,KAAK,CAACY,QAAN,CAAeZ,KAAK,CAACa,IAArB,EAA2BJ,KAA3B,CAAX;AAAA,GAAjB;;AAEA,sBACE,+CACMT,KAAK,CAACc,OADZ;AAEE,IAAA,KAAK;AAAIC,MAAAA,KAAK,EAAE;AAAX,OAAsBd,KAAtB,CAFP;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,QAAQ,EAAED,KAAK,CAACgB,QAAN,IAAkBhB,KAAK,CAACiB,QAJpC;AAKE,IAAA,YAAY,EAAET,SALhB;AAME,IAAA,QAAQ,EAAEI,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQG,CAACP,KAAK,IAAI,EAAV,EAAca,GAAd,CAAkB,UAACC,GAAD,EAAMC,KAAN;AAAA,wBACjB,4BAAQ,MAAR;AAAe,MAAA,KAAK,EAAED,GAAtB;AAA2B,MAAA,GAAG,EAAEC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE;AACA,MAAA,uBAAuB,EAAE;AACvBC,QAAAA,MAAM,EAAEd,SAAS,GAAGA,SAAS,CAACa,KAAD,CAAZ,GAAsBD;AADhB,OAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADiB;AAAA,GAAlB,CARH,CADF;AAqBD,CA/BD;;AAiCA,eAAerB,OAAO,CAACC,oBAAD,CAAtB","sourcesContent":["import React, { useMemo } from \"react\";\nimport { Select } from \"antd\";\nimport fetcher from \"~materials/hoc\";\n\nconst MultiSelectComponent = (props) => {\n  const style = props.invalid ? { borderColor: \"#f5222d\" } : {};\n  const { enum: enums, enumNames } = props.schema || {};\n\n  const rootValue = useMemo(() => {\n    return props.value && Array.isArray(props.value) ? props.value : [];\n  }, [props.value]);\n\n  const onChange = (value) => props.onChange(props.name, value);\n\n  return (\n    <Select\n      {...props.options}\n      style={{ width: \"100%\", ...style }}\n      mode=\"multiple\"\n      disabled={props.disabled || props.readOnly}\n      defaultValue={rootValue}\n      onChange={onChange}\n    >\n      {(enums || []).map((val, index) => (\n        <Select.Option value={val} key={index}>\n          <span\n            // eslint-disable-next-line react/no-danger\n            dangerouslySetInnerHTML={{\n              __html: enumNames ? enumNames[index] : val\n            }}\n          />\n        </Select.Option>\n      ))}\n    </Select>\n  );\n};\n\nexport default fetcher(MultiSelectComponent);\n"]},"metadata":{},"sourceType":"module"}
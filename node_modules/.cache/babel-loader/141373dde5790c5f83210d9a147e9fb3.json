{"ast":null,"code":"import { cloneDeep } from \"~utils\";\nimport { DEFAULT_COLORS } from \"~materials/constants\";\nimport { tooltipFormatter } from \"~materials/vcharts/util\";\n\nfunction calcPosition(data, inverse, position) {\n  var positionLabel = \"\";\n  return data.reduce(function (arr, val) {\n    if (inverse && !position) {\n      positionLabel = val <= 0 ? \"top\" : \"bottom\";\n    } else if (!inverse && !position) {\n      positionLabel = val >= 0 ? \"top\" : \"bottom\";\n    } else if (inverse && position) {\n      positionLabel = val >= 0 ? \"right\" : \"left\";\n    } else if (!inverse && position) {\n      positionLabel = val <= 0 ? \"left\" : \"right\";\n    }\n\n    arr.push({\n      value: val,\n      label: {\n        position: positionLabel\n      }\n    });\n    return arr;\n  }, []);\n}\n\nfunction reverseData(data, falg) {\n  return data.reduce(function (arr, val, index) {\n    if (falg && index === 0) {\n      arr.push(val * -1);\n    }\n\n    return arr;\n  }, []);\n}\n\nexport default function getOptions(option, data) {\n  var _data$categories = data.categories,\n      categories = _data$categories === void 0 ? [] : _data$categories,\n      _data$series = data.series,\n      series = _data$series === void 0 ? [] : _data$series;\n  var _option$sortType = option.sortType,\n      sortType = _option$sortType === void 0 ? \"bar\" : _option$sortType,\n      _option$direction = option.direction,\n      direction = _option$direction === void 0 ? \"horizontal\" : _option$direction,\n      _option$inverse = option.inverse,\n      inverse = _option$inverse === void 0 ? false : _option$inverse,\n      _option$showX = option.showX,\n      showX = _option$showX === void 0 ? true : _option$showX,\n      _option$showY = option.showY,\n      showY = _option$showY === void 0 ? true : _option$showY,\n      _option$labelFontSize = option.labelFontSizeX,\n      labelFontSizeX = _option$labelFontSize === void 0 ? 12 : _option$labelFontSize,\n      _option$labelColor = option.labelColor,\n      labelColor = _option$labelColor === void 0 ? \"#ffffff\" : _option$labelColor,\n      _option$chartContrast = option.chartContrast,\n      chartContrast = _option$chartContrast === void 0 ? false : _option$chartContrast,\n      _option$axisLineColor = option.axisLineColor,\n      axisLineColor = _option$axisLineColor === void 0 ? \"#CCC\" : _option$axisLineColor,\n      _option$splitLineColo = option.splitLineColor,\n      splitLineColor = _option$splitLineColo === void 0 ? \"#5B5B5B\" : _option$splitLineColo,\n      _option$splitLineShow = option.splitLineShow,\n      splitLineShow = _option$splitLineShow === void 0 ? false : _option$splitLineShow,\n      _option$splitLineType = option.splitLineType,\n      splitLineType = _option$splitLineType === void 0 ? \"solid\" : _option$splitLineType,\n      _option$legendShow = option.legendShow,\n      legendShow = _option$legendShow === void 0 ? true : _option$legendShow,\n      _option$stack = option.stack,\n      stack = _option$stack === void 0 ? false : _option$stack,\n      _option$barWidth = option.barWidth,\n      barWidth = _option$barWidth === void 0 ? \"auto\" : _option$barWidth,\n      _option$barBorderRadi = option.barBorderRadius,\n      barBorderRadius = _option$barBorderRadi === void 0 ? 0 : _option$barBorderRadi,\n      _option$barTitlePosit = option.barTitlePosition,\n      barTitlePosition = _option$barTitlePosit === void 0 ? false : _option$barTitlePosit,\n      _option$barTextShow = option.barTextShow,\n      barTextShow = _option$barTextShow === void 0 ? false : _option$barTextShow,\n      _option$barTextFont = option.barTextFont,\n      barTextFont = _option$barTextFont === void 0 ? 12 : _option$barTextFont,\n      _option$axisTickShow = option.axisTickShow,\n      axisTickShow = _option$axisTickShow === void 0 ? false : _option$axisTickShow,\n      _option$unit = option.unit,\n      unit = _option$unit === void 0 ? \"\" : _option$unit;\n  var xAxisOpt, yAxisOpt, defaultX, defaultY;\n  defaultX = {\n    type: \"category\",\n    inverse: inverse,\n    axisLabel: {\n      show: showX,\n      fontSize: labelFontSizeX,\n      color: labelColor,\n      formatter: function formatter(parma) {\n        if (chartContrast && parma < 0) {\n          return parma * -1;\n        }\n\n        return parma;\n      }\n    },\n    splitLine: {\n      show: splitLineShow,\n      lineStyle: {\n        color: splitLineColor,\n        type: splitLineType\n      }\n    },\n    axisLine: {\n      show: showX,\n      lineStyle: {\n        color: axisLineColor\n      }\n    },\n    axisTick: {\n      show: showX\n    },\n    data: categories\n  };\n  defaultY = {\n    type: \"value\",\n    inverse: inverse,\n    axisLabel: {\n      show: showY,\n      fontSize: labelFontSizeX,\n      color: labelColor || \"#fff\",\n      formatter: function formatter(parma) {\n        if (chartContrast && parma < 0) {\n          return parma * -1;\n        }\n\n        return parma;\n      }\n    },\n    splitLine: {\n      show: splitLineShow,\n      lineStyle: {\n        color: splitLineColor,\n        type: splitLineType\n      }\n    },\n    axisLine: {\n      show: showY,\n      lineStyle: {\n        color: axisLineColor\n      }\n    },\n    axisTick: {\n      show: axisTickShow ? axisTickShow : showY\n    }\n  };\n\n  if (direction === \"vertical\") {\n    xAxisOpt = cloneDeep(defaultY);\n    yAxisOpt = cloneDeep(defaultX);\n  } else {\n    xAxisOpt = cloneDeep(defaultX);\n    yAxisOpt = cloneDeep(defaultY);\n  }\n\n  return {\n    color: DEFAULT_COLORS,\n    grid: {\n      top: 20,\n      left: 15,\n      right: 20,\n      bottom: 30,\n      containLabel: true\n    },\n    tooltip: {\n      trigger: \"axis\",\n      axisPointer: {\n        type: \"line\",\n        lineStyle: {\n          color: \"#57617B\"\n        }\n      },\n      formatter: function formatter(parma) {\n        if (chartContrast) {\n          parma[0].value = parma[0].value * -1;\n        }\n\n        return tooltipFormatter(parma, unit);\n      }\n    },\n    legend: {\n      show: legendShow,\n      bottom: 0,\n      data: series.map(function (item) {\n        return item.name;\n      })\n    },\n    xAxis: xAxisOpt,\n    yAxis: yAxisOpt,\n    series: series.map(function (item, index) {\n      var results = chartContrast && index === 0 ? reverseData(item.data, chartContrast) : item.data;\n      return {\n        name: item.name,\n        type: sortType ? sortType : \"bar\",\n        stack: stack ? \"something\" : \"\",\n        barCategoryGap: sortType === \"pictorialBar\" ? \"-80%\" : null,\n        symbol: sortType === \"pictorialBar\" ? \"path://M0,10 L10,10 C5.5,10 5.5,5 5,0 C4.5,5 4.5,10 0,10 z\" : null,\n        barWidth: barWidth,\n        itemStyle: {\n          barBorderRadius: barBorderRadius\n        },\n        label: {\n          show: barTextShow,\n          fontSize: barTextFont\n        },\n        data: calcPosition(results, inverse, barTitlePosition)\n      };\n    })\n  };\n}","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/图元/react-visual-data/src/materials/vcharts/options/bar.js"],"names":["cloneDeep","DEFAULT_COLORS","tooltipFormatter","calcPosition","data","inverse","position","positionLabel","reduce","arr","val","push","value","label","reverseData","falg","index","getOptions","option","categories","series","sortType","direction","showX","showY","labelFontSizeX","labelColor","chartContrast","axisLineColor","splitLineColor","splitLineShow","splitLineType","legendShow","stack","barWidth","barBorderRadius","barTitlePosition","barTextShow","barTextFont","axisTickShow","unit","xAxisOpt","yAxisOpt","defaultX","defaultY","type","axisLabel","show","fontSize","color","formatter","parma","splitLine","lineStyle","axisLine","axisTick","grid","top","left","right","bottom","containLabel","tooltip","trigger","axisPointer","legend","map","item","name","xAxis","yAxis","results","barCategoryGap","symbol","itemStyle"],"mappings":"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","sourcesContent":["import { cloneDeep } from \"~utils\";\nimport { DEFAULT_COLORS } from \"~materials/constants\";\nimport { tooltipFormatter } from \"~materials/vcharts/util\";\nfunction calcPosition(data, inverse, position) {\n  let positionLabel = \"\";\n  return data.reduce((arr, val) => {\n    if (inverse && !position) {\n      positionLabel = val <= 0 ? \"top\" : \"bottom\";\n    } else if (!inverse && !position) {\n      positionLabel = val >= 0 ? \"top\" : \"bottom\";\n    } else if (inverse && position) {\n      positionLabel = val >= 0 ? \"right\" : \"left\";\n    } else if (!inverse && position) {\n      positionLabel = val <= 0 ? \"left\" : \"right\";\n    }\n    arr.push({\n      value: val,\n      label: {\n        position: positionLabel\n      }\n    });\n    return arr;\n  }, []);\n}\n\nfunction reverseData(data, falg) {\n  return data.reduce((arr, val, index) => {\n    if (falg && index === 0) {\n      arr.push(val * -1);\n    }\n    return arr;\n  }, []);\n}\n\nexport default function getOptions(option, data) {\n  const { categories = [], series = [] } = data;\n  const {\n    sortType = \"bar\",\n    direction = \"horizontal\",\n    inverse = false,\n    showX = true,\n    showY = true,\n    labelFontSizeX = 12,\n    labelColor = \"#ffffff\",\n    chartContrast = false,\n    axisLineColor = \"#CCC\",\n    splitLineColor = \"#5B5B5B\",\n    splitLineShow = false,\n    splitLineType = \"solid\",\n    legendShow = true,\n    stack = false,\n    barWidth = \"auto\",\n    barBorderRadius = 0,\n    barTitlePosition = false,\n    barTextShow = false,\n    barTextFont = 12,\n    axisTickShow = false,\n    unit = \"\"\n  } = option;\n\n  let xAxisOpt, yAxisOpt, defaultX, defaultY;\n\n  defaultX = {\n    type: \"category\",\n    inverse: inverse,\n    axisLabel: {\n      show: showX,\n      fontSize: labelFontSizeX,\n      color: labelColor,\n      formatter: function (parma) {\n        if (chartContrast && parma < 0) {\n          return parma * -1;\n        }\n        return parma;\n      }\n    },\n    splitLine: {\n      show: splitLineShow,\n      lineStyle: {\n        color: splitLineColor,\n        type: splitLineType\n      }\n    },\n    axisLine: {\n      show: showX,\n      lineStyle: {\n        color: axisLineColor\n      }\n    },\n    axisTick: {\n      show: showX\n    },\n    data: categories\n  };\n\n  defaultY = {\n    type: \"value\",\n    inverse: inverse,\n    axisLabel: {\n      show: showY,\n      fontSize: labelFontSizeX,\n      color: labelColor || \"#fff\",\n      formatter: function (parma) {\n        if (chartContrast && parma < 0) {\n          return parma * -1;\n        }\n        return parma;\n      }\n    },\n    splitLine: {\n      show: splitLineShow,\n      lineStyle: {\n        color: splitLineColor,\n        type: splitLineType\n      }\n    },\n    axisLine: {\n      show: showY,\n      lineStyle: {\n        color: axisLineColor\n      }\n    },\n    axisTick: {\n      show: axisTickShow ? axisTickShow : showY\n    }\n  };\n\n  if (direction === \"vertical\") {\n    xAxisOpt = cloneDeep(defaultY);\n    yAxisOpt = cloneDeep(defaultX);\n  } else {\n    xAxisOpt = cloneDeep(defaultX);\n    yAxisOpt = cloneDeep(defaultY);\n  }\n  return {\n    color: DEFAULT_COLORS,\n    grid: {\n      top: 20,\n      left: 15,\n      right: 20,\n      bottom: 30,\n      containLabel: true\n    },\n    tooltip: {\n      trigger: \"axis\",\n      axisPointer: {\n        type: \"line\",\n        lineStyle: {\n          color: \"#57617B\"\n        }\n      },\n      formatter: function (parma) {\n        if (chartContrast) {\n          parma[0].value = parma[0].value * -1;\n        }\n        return tooltipFormatter(parma, unit);\n      }\n    },\n    legend: {\n      show: legendShow,\n      bottom: 0,\n      data: series.map((item) => item.name)\n    },\n    xAxis: xAxisOpt,\n    yAxis: yAxisOpt,\n    series: series.map((item, index) => {\n      let results = chartContrast && index === 0 ? reverseData(item.data, chartContrast) : item.data;\n      return {\n        name: item.name,\n        type: sortType ? sortType : \"bar\",\n        stack: stack ? \"something\" : \"\",\n        barCategoryGap: sortType === \"pictorialBar\" ? \"-80%\" : null,\n        symbol: sortType === \"pictorialBar\" ? \"path://M0,10 L10,10 C5.5,10 5.5,5 5,0 C4.5,5 4.5,10 0,10 z\" : null,\n        barWidth: barWidth,\n        itemStyle: {\n          barBorderRadius: barBorderRadius\n        },\n        label: {\n          show: barTextShow,\n          fontSize: barTextFont\n        },\n        data: calcPosition(results, inverse, barTitlePosition)\n      };\n    })\n  };\n}\n"]},"metadata":{},"sourceType":"module"}
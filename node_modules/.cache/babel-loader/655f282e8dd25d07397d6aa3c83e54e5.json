{"ast":null,"code":"import _slicedToArray from \"/Users/xiangmingxin/Wicrecend/Primitives/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/xiangmingxin/Wicrecend/Primitives/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { isEmpty } from \"~utils/helper\";\nexport function getFormat(format) {\n  var dateFormat;\n\n  switch (format) {\n    case \"date\":\n      dateFormat = \"YYYY-MM-DD\";\n      break;\n\n    case \"time\":\n      dateFormat = \"HH:mm:ss\";\n      break;\n\n    case \"dateTime\":\n      dateFormat = \"YYYY-MM-DD HH:mm:ss\";\n      break;\n\n    case \"year\":\n      dateFormat = \"YYYY\";\n      break;\n\n    case \"quarter\":\n      dateFormat = \"YYYY-[Q]Q\";\n      break;\n\n    case \"month\":\n      dateFormat = \"YYYY-MM\";\n      break;\n\n    case \"week\":\n      dateFormat = \"YYYY-W[*]\";\n      break;\n\n    default:\n      dateFormat = \"YYYY-MM-DD\";\n\n      if (format && typeof format === \"string\") {\n        dateFormat = format;\n      }\n\n  }\n\n  return dateFormat;\n} // 获得propsSchema的children\n\nfunction getChildren(schema) {\n  if (!schema) return [];\n  var properties = schema.properties,\n      items = schema.items,\n      type = schema.type;\n\n  if (!properties && !items) {\n    return [];\n  }\n\n  var schemaSubs = {};\n\n  if (type === \"object\") {\n    schemaSubs = properties;\n  }\n\n  if (type === \"array\") {\n    schemaSubs = items;\n  }\n\n  return Object.keys(schemaSubs).map(function (name) {\n    return {\n      schema: schemaSubs[name],\n      name: name\n    };\n  });\n} // 整合配置Schema\n\n\nexport function combineSchema() {\n  var propsSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var propList = getChildren(propsSchema);\n  var newList = propList.map(function (p) {\n    var _p$schema = p.schema,\n        type = _p$schema.type,\n        options = _p$schema.enum,\n        properties = _p$schema.properties,\n        items = _p$schema.items;\n    var isObj = type === \"object\" && properties;\n    var isArr = type === \"array\" && items && !options; // enum + array 代表的多选框，没有sub\n    // 如果是list，递归合并items\n\n    if (isArr) {\n      var newItems = combineSchema(items);\n      return _objectSpread(_objectSpread({}, p), {}, {\n        schema: _objectSpread(_objectSpread({}, p.schema), {}, {\n          items: newItems\n        })\n      });\n    } // object递归合并整个schema\n\n\n    if (isObj) {\n      var newSchema = combineSchema(p.schema);\n      return _objectSpread(_objectSpread({}, p), {}, {\n        schema: newSchema\n      });\n    }\n\n    return _objectSpread(_objectSpread({}, p), {}, {\n      schema: _objectSpread({}, p.schema)\n    });\n  });\n  var newObj = {};\n  newList.forEach(function (s) {\n    newObj[s.name] = s.schema;\n  });\n\n  if (isEmpty(newObj)) {\n    return _objectSpread({}, propsSchema);\n  }\n\n  return _objectSpread(_objectSpread({}, propsSchema), {}, {\n    properties: newObj\n  });\n} // 解析函数字符串值\n\nvar isValidVariableName = function isValidVariableName(param) {\n  return /^[a-zA-Z]+$/g.test(param);\n}; // Remove all window valid api\n// For safety jest-* variable will throw error\n\n\nfunction safeEval(code) {\n  var safeContextStr = \"\";\n\n  if (typeof window !== \"undefined\") {\n    var windowContextAttr = Object.getOwnPropertyNames(window).filter(isValidVariableName);\n\n    for (var i = 0, len = windowContextAttr.length; i < len; i++) {\n      safeContextStr += \"var \".concat(windowContextAttr[i], \" = undefined;\");\n    }\n  }\n\n  return new Function(\"\".concat(safeContextStr, \" \\\"use strict\\\";  \").concat(code))();\n} // 代替eval的函数\n\n\nfunction parseString(string) {\n  return safeEval(\"return (\".concat(string, \")\"));\n} // 解析函数字符串值\n\n\nvar evaluateString = function evaluateString(string, formData, rootValue) {\n  return safeEval(\"\\n  const rootValue = \".concat(JSON.stringify(rootValue), \";\\n  const formData = \").concat(JSON.stringify(formData), \";\\n  return (\").concat(string, \")\\n  \"));\n}; // 判断schema的值是是否是“函数”\n\n\nexport function isFunction(fn) {\n  if (typeof fn === \"function\") {\n    return true;\n  }\n\n  if (typeof fn === \"string\" && fn.substring(0, 2) === \"{{\" && fn.substring(fn.length - 2, fn.length) === \"}}\") {\n    return fn.substring(2, fn.length - 2);\n  }\n\n  return false;\n} // 函数表达式转换成值\n\nexport var convertValue = function convertValue(item, formData, rootValue) {\n  if (typeof item === \"function\") {\n    return item(formData, rootValue);\n  } else if (typeof item === \"string\" && isFunction(item) !== false) {\n    var _item = isFunction(item);\n\n    try {\n      return evaluateString(_item, formData, rootValue);\n    } catch (error) {\n      console.error(\"happen at \".concat(item, \"\\uFF1A\").concat(error.message));\n      return item;\n    }\n  }\n\n  return item;\n};\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/;\nvar reIsPlainProp = /^\\w*$/;\n\nfunction isKey(value, object) {\n  if (Array.isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type === \"number\" || type === \"boolean\" || value == null) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nfunction castPath(value, object) {\n  if (Array.isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : value.match(/([^\\.\\[\\]\"']+)/g);\n}\n\nfunction toKey(value) {\n  if (typeof value === \"string\") {\n    return value;\n  }\n\n  var result = \"\".concat(value);\n  return result == \"0\" && 1 / value == -INFINITY ? \"-0\" : result;\n}\n\nexport function baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0;\n  var length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n} // 计算单个表达式的hidden值\n\nvar calcHidden = function calcHidden(hiddenString, rootValue, formData) {\n  if (!rootValue || typeof rootValue !== \"object\") {\n    return false;\n  } // 支持四种基本运算符\n\n\n  var operators = [\"==\", \"!=\", \">\", \"<\"];\n\n  try {\n    var op = operators.find(function (op) {\n      return hiddenString.indexOf(op) > -1;\n    });\n\n    var _hiddenString$split$m = hiddenString.split(op).map(function (item) {\n      return item.trim();\n    }),\n        _hiddenString$split$m2 = _slicedToArray(_hiddenString$split$m, 2),\n        key = _hiddenString$split$m2[0],\n        value = _hiddenString$split$m2[1];\n\n    var left = rootValue[key]; // feature: 允许从 formData 取值\n\n    if (key.substring(0, 9) === \"formData.\" && formData) {\n      var subKey = key.substring(9);\n      left = baseGet(formData, subKey);\n    }\n\n    var right = parseString(value);\n    return parseString(\"\\\"\".concat(String(left), \"\\\"\").concat(op, \"\\\"\").concat(String(right), \"\\\"\"));\n  } catch (e) {\n    console.error(e);\n  }\n\n  return false;\n};\n\nexport function isHidden(_ref) {\n  var hidden = _ref.hidden,\n      rootValue = _ref.rootValue,\n      formData = _ref.formData;\n\n  if (typeof hidden === \"string\") {\n    // 支持 && 和 ||\n    var hasAnd = function hasAnd(string) {\n      return string.indexOf(\"&&\") > -1;\n    };\n\n    var hasOr = function hasOr(string) {\n      return string.indexOf(\"||\") > -1;\n    };\n\n    var hiddenList = [];\n\n    if (!hasOr(hidden)) {\n      if (!hasAnd(hidden)) {\n        return calcHidden(hidden, rootValue, formData);\n      } else {\n        hiddenList = hidden.split(\"&&\").map(function (item) {\n          return item.trim();\n        });\n        return hiddenList.every(function (item) {\n          return calcHidden(item, rootValue, formData);\n        });\n      }\n    } else {\n      hiddenList = hidden.split(\"||\").map(function (item) {\n        return item.trim();\n      });\n\n      if (!hasAnd(hidden)) {\n        return hiddenList.some(function (item) {\n          return calcHidden(item, rootValue, formData);\n        });\n      } else {\n        return hiddenList.some(function (item) {\n          if (hasAnd(item)) {\n            var list = item.split(\"&&\").map(function (item) {\n              return item.trim();\n            });\n            return list.every(function (x) {\n              return calcHidden(x, rootValue, formData);\n            });\n          } else {\n            return calcHidden(item, rootValue, formData);\n          }\n        });\n      }\n    }\n  }\n\n  return hidden;\n}\nexport function getEnum(schema) {\n  if (!schema) return undefined;\n  var itemEnum = schema && schema.items && schema.items.enum;\n  var schemaEnum = schema && schema.enum;\n  return itemEnum ? itemEnum : schemaEnum;\n}","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/Primitives/src/library/form-render/utils.js"],"names":["isEmpty","getFormat","format","dateFormat","getChildren","schema","properties","items","type","schemaSubs","Object","keys","map","name","combineSchema","propsSchema","propList","newList","p","options","enum","isObj","isArr","newItems","newSchema","newObj","forEach","s","isValidVariableName","param","test","safeEval","code","safeContextStr","window","windowContextAttr","getOwnPropertyNames","filter","i","len","length","Function","parseString","string","evaluateString","formData","rootValue","JSON","stringify","isFunction","fn","substring","convertValue","item","_item","error","console","message","reIsDeepProp","reIsPlainProp","isKey","value","object","Array","isArray","castPath","match","toKey","result","INFINITY","baseGet","path","index","undefined","calcHidden","hiddenString","operators","op","find","indexOf","split","trim","key","left","subKey","right","String","e","isHidden","hidden","hasAnd","hasOr","hiddenList","every","some","list","x","getEnum","itemEnum","schemaEnum"],"mappings":"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","sourcesContent":["import { isEmpty } from \"~utils/helper\";\n\nexport function getFormat(format) {\n  let dateFormat;\n  switch (format) {\n    case \"date\":\n      dateFormat = \"YYYY-MM-DD\";\n      break;\n    case \"time\":\n      dateFormat = \"HH:mm:ss\";\n      break;\n    case \"dateTime\":\n      dateFormat = \"YYYY-MM-DD HH:mm:ss\";\n      break;\n    case \"year\":\n      dateFormat = \"YYYY\";\n      break;\n    case \"quarter\":\n      dateFormat = \"YYYY-[Q]Q\";\n      break;\n    case \"month\":\n      dateFormat = \"YYYY-MM\";\n      break;\n    case \"week\":\n      dateFormat = \"YYYY-W[*]\";\n      break;\n    default:\n      dateFormat = \"YYYY-MM-DD\";\n      if (format && typeof format === \"string\") {\n        dateFormat = format;\n      }\n  }\n  return dateFormat;\n}\n\n// 获得propsSchema的children\nfunction getChildren(schema) {\n  if (!schema) return [];\n  const {\n    // object\n    properties,\n    // array\n    items,\n    type\n  } = schema;\n  if (!properties && !items) {\n    return [];\n  }\n  let schemaSubs = {};\n  if (type === \"object\") {\n    schemaSubs = properties;\n  }\n  if (type === \"array\") {\n    schemaSubs = items;\n  }\n  return Object.keys(schemaSubs).map((name) => ({\n    schema: schemaSubs[name],\n    name\n  }));\n}\n\n// 整合配置Schema\nexport function combineSchema(propsSchema = {}) {\n  const propList = getChildren(propsSchema);\n  const newList = propList.map((p) => {\n    const { type, enum: options, properties, items } = p.schema;\n    const isObj = type === \"object\" && properties;\n    const isArr = type === \"array\" && items && !options; // enum + array 代表的多选框，没有sub\n    // 如果是list，递归合并items\n    if (isArr) {\n      const newItems = combineSchema(items);\n      return { ...p, schema: { ...p.schema, items: newItems } };\n    }\n    // object递归合并整个schema\n    if (isObj) {\n      const newSchema = combineSchema(p.schema);\n      return { ...p, schema: newSchema };\n    }\n    return { ...p, schema: { ...p.schema } };\n  });\n\n  const newObj = {};\n  newList.forEach((s) => {\n    newObj[s.name] = s.schema;\n  });\n\n  if (isEmpty(newObj)) {\n    return { ...propsSchema };\n  }\n  return { ...propsSchema, properties: newObj };\n}\n\n// 解析函数字符串值\nconst isValidVariableName = (param) => /^[a-zA-Z]+$/g.test(param);\n\n// Remove all window valid api\n// For safety jest-* variable will throw error\nfunction safeEval(code) {\n  let safeContextStr = \"\";\n  if (typeof window !== \"undefined\") {\n    const windowContextAttr = Object.getOwnPropertyNames(window).filter(isValidVariableName);\n    for (let i = 0, len = windowContextAttr.length; i < len; i++) {\n      safeContextStr += `var ${windowContextAttr[i]} = undefined;`;\n    }\n  }\n  return new Function(`${safeContextStr} \"use strict\";  ${code}`)();\n}\n\n// 代替eval的函数\nfunction parseString(string) {\n  return safeEval(`return (${string})`);\n}\n\n// 解析函数字符串值\nconst evaluateString = (string, formData, rootValue) =>\n  safeEval(`\n  const rootValue = ${JSON.stringify(rootValue)};\n  const formData = ${JSON.stringify(formData)};\n  return (${string})\n  `);\n\n// 判断schema的值是是否是“函数”\nexport function isFunction(fn) {\n  if (typeof fn === \"function\") {\n    return true;\n  }\n  if (typeof fn === \"string\" && fn.substring(0, 2) === \"{{\" && fn.substring(fn.length - 2, fn.length) === \"}}\") {\n    return fn.substring(2, fn.length - 2);\n  }\n  return false;\n}\n\n// 函数表达式转换成值\nexport const convertValue = (item, formData, rootValue) => {\n  if (typeof item === \"function\") {\n    return item(formData, rootValue);\n  } else if (typeof item === \"string\" && isFunction(item) !== false) {\n    const _item = isFunction(item);\n    try {\n      return evaluateString(_item, formData, rootValue);\n    } catch (error) {\n      console.error(`happen at ${item}：${error.message}`);\n      return item;\n    }\n  }\n  return item;\n};\n\nconst reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/;\nconst reIsPlainProp = /^\\w*$/;\n\nfunction isKey(value, object) {\n  if (Array.isArray(value)) {\n    return false;\n  }\n  const type = typeof value;\n  if (type === \"number\" || type === \"boolean\" || value == null) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || (object != null && value in Object(object));\n}\n\nfunction castPath(value, object) {\n  if (Array.isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : value.match(/([^\\.\\[\\]\"']+)/g);\n}\n\nfunction toKey(value) {\n  if (typeof value === \"string\") {\n    return value;\n  }\n  const result = `${value}`;\n  return result == \"0\" && 1 / value == -INFINITY ? \"-0\" : result;\n}\n\nexport function baseGet(object, path) {\n  path = castPath(path, object);\n\n  let index = 0;\n  const length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return index && index == length ? object : undefined;\n}\n\n// 计算单个表达式的hidden值\nconst calcHidden = (hiddenString, rootValue, formData) => {\n  if (!rootValue || typeof rootValue !== \"object\") {\n    return false;\n  }\n  // 支持四种基本运算符\n  const operators = [\"==\", \"!=\", \">\", \"<\"];\n  try {\n    const op = operators.find((op) => hiddenString.indexOf(op) > -1);\n    const [key, value] = hiddenString.split(op).map((item) => item.trim());\n    let left = rootValue[key];\n    // feature: 允许从 formData 取值\n    if (key.substring(0, 9) === \"formData.\" && formData) {\n      const subKey = key.substring(9);\n      left = baseGet(formData, subKey);\n    }\n    const right = parseString(value);\n    return parseString(`\"${String(left)}\"${op}\"${String(right)}\"`);\n  } catch (e) {\n    console.error(e);\n  }\n  return false;\n};\n\nexport function isHidden({ hidden, rootValue, formData }) {\n  if (typeof hidden === \"string\") {\n    // 支持 && 和 ||\n    const hasAnd = (string) => string.indexOf(\"&&\") > -1;\n    const hasOr = (string) => string.indexOf(\"||\") > -1;\n    let hiddenList = [];\n    if (!hasOr(hidden)) {\n      if (!hasAnd(hidden)) {\n        return calcHidden(hidden, rootValue, formData);\n      } else {\n        hiddenList = hidden.split(\"&&\").map((item) => item.trim());\n        return hiddenList.every((item) => calcHidden(item, rootValue, formData));\n      }\n    } else {\n      hiddenList = hidden.split(\"||\").map((item) => item.trim());\n      if (!hasAnd(hidden)) {\n        return hiddenList.some((item) => calcHidden(item, rootValue, formData));\n      } else {\n        return hiddenList.some((item) => {\n          if (hasAnd(item)) {\n            const list = item.split(\"&&\").map((item) => item.trim());\n            return list.every((x) => calcHidden(x, rootValue, formData));\n          } else {\n            return calcHidden(item, rootValue, formData);\n          }\n        });\n      }\n    }\n  }\n  return hidden;\n}\n\nexport function getEnum(schema) {\n  if (!schema) return undefined;\n  const itemEnum = schema && schema.items && schema.items.enum;\n  const schemaEnum = schema && schema.enum;\n  return itemEnum ? itemEnum : schemaEnum;\n}\n"]},"metadata":{},"sourceType":"module"}
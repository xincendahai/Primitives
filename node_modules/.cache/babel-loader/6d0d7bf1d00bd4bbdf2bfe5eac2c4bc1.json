{"ast":null,"code":"import _classCallCheck from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/src/components/sketch-ruler/canvas-ruler.js\";\nimport React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { drawHorizontalRuler, drawVerticalRuler } from \"./utils\";\n\nvar getValueByOffset = function getValueByOffset(offset, start, scale) {\n  return Math.round(start + offset / scale);\n};\n\nvar CanvasRuler = /*#__PURE__*/function (_PureComponent) {\n  _inherits(CanvasRuler, _PureComponent);\n\n  var _super = _createSuper(CanvasRuler);\n\n  function CanvasRuler() {\n    var _this;\n\n    _classCallCheck(this, CanvasRuler);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.setCanvasRef = function (ref) {\n      _this.$canvas = ref;\n      _this.canvasContext = ref && ref.getContext(\"2d\");\n    };\n\n    _this.handleClick = function (e) {\n      var _this$props = _this.props,\n          vertical = _this$props.vertical,\n          scale = _this$props.scale,\n          start = _this$props.start,\n          onAddLine = _this$props.onAddLine;\n      var offset = vertical ? e.nativeEvent.offsetY : e.nativeEvent.offsetX;\n      onAddLine(getValueByOffset(offset, start, scale));\n    };\n\n    _this.handleEnter = function (e) {\n      var _this$props2 = _this.props,\n          vertical = _this$props2.vertical,\n          scale = _this$props2.scale,\n          start = _this$props2.start,\n          onIndicatorShow = _this$props2.onIndicatorShow;\n      var offset = vertical ? e.nativeEvent.offsetY : e.nativeEvent.offsetX;\n      onIndicatorShow(getValueByOffset(offset, start, scale));\n    };\n\n    _this.handleMove = function (e) {\n      var _this$props3 = _this.props,\n          vertical = _this$props3.vertical,\n          scale = _this$props3.scale,\n          start = _this$props3.start,\n          onIndicatorMove = _this$props3.onIndicatorMove;\n      var offset = vertical ? e.nativeEvent.offsetY : e.nativeEvent.offsetX;\n      onIndicatorMove(getValueByOffset(offset, start, scale));\n    };\n\n    _this.handleLeave = function () {\n      return _this.props.onIndicatorHide();\n    };\n\n    _this.handleRightMenu = function (e) {\n      e.stopPropagation();\n\n      if (e.button === 2) {\n        var onhandleShowRightMenu = _this.props.onhandleShowRightMenu;\n        var clickLeft = e.clientX;\n        var clickTop = e.clientY;\n        onhandleShowRightMenu(clickLeft, clickTop);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(CanvasRuler, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateCanvasContext();\n      this.drawRuler();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.width !== this.props.width || prevProps.height !== this.props.height) {\n        this.updateCanvasContext();\n      }\n\n      this.drawRuler();\n    }\n  }, {\n    key: \"updateCanvasContext\",\n    value: function updateCanvasContext() {\n      var _this$props4 = this.props,\n          width = _this$props4.width,\n          height = _this$props4.height,\n          canvasConfigs = _this$props4.canvasConfigs;\n      var ratio = canvasConfigs.ratio; // 比例宽高\n\n      this.$canvas.width = width * ratio;\n      this.$canvas.height = height * ratio;\n      var ctx = this.$canvas.getContext(\"2d\");\n      ctx.font = \"\".concat(12 * ratio, \"px -apple-system, \\\"Helvetica Neue\\\", \\\".SFNSText-Regular\\\", \\\"SF UI Text\\\", Arial, \\\"PingFang SC\\\", \\\"Hiragino Sans GB\\\", \\\"Microsoft YaHei\\\", \\\"WenQuanYi Zen Hei\\\", sans-serif\");\n      ctx.lineWidth = 1;\n      ctx.textBaseline = \"middle\";\n    }\n  }, {\n    key: \"drawRuler\",\n    value: function drawRuler() {\n      var _this$props5 = this.props,\n          start = _this$props5.start,\n          scale = _this$props5.scale,\n          width = _this$props5.width,\n          height = _this$props5.height,\n          selectStart = _this$props5.selectStart,\n          selectLength = _this$props5.selectLength,\n          canvasConfigs = _this$props5.canvasConfigs;\n      var options = {\n        scale: scale,\n        width: width,\n        height: height,\n        canvasConfigs: canvasConfigs\n      };\n\n      if (this.props.vertical) {\n        drawVerticalRuler(this.canvasContext, start, {\n          y: selectStart,\n          height: selectLength\n        }, options);\n      } else {\n        drawHorizontalRuler(this.canvasContext, start, {\n          x: selectStart,\n          width: selectLength\n        }, options);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"canvas\", {\n        className: \"ruler\",\n        ref: this.setCanvasRef,\n        onClick: this.handleClick,\n        onMouseEnter: this.handleEnter,\n        onMouseDown: this.handleRightMenu,\n        onMouseMove: this.handleMove,\n        onMouseLeave: this.handleLeave,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return CanvasRuler;\n}(PureComponent);\n\nexport { CanvasRuler as default };\nCanvasRuler.propTypes = {\n  vertical: PropTypes.bool,\n  start: PropTypes.number,\n  scale: PropTypes.number,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  canvasConfigs: PropTypes.object,\n  selectStart: PropTypes.number,\n  selectLength: PropTypes.number,\n  onAddLine: PropTypes.func,\n  onIndicatorShow: PropTypes.func,\n  onIndicatorMove: PropTypes.func,\n  onIndicatorHide: PropTypes.func,\n  onhandleShowRightMenu: PropTypes.func\n};","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/图元/react-visual-data/src/components/sketch-ruler/canvas-ruler.js"],"names":["React","PureComponent","PropTypes","drawHorizontalRuler","drawVerticalRuler","getValueByOffset","offset","start","scale","Math","round","CanvasRuler","setCanvasRef","ref","$canvas","canvasContext","getContext","handleClick","e","props","vertical","onAddLine","nativeEvent","offsetY","offsetX","handleEnter","onIndicatorShow","handleMove","onIndicatorMove","handleLeave","onIndicatorHide","handleRightMenu","stopPropagation","button","onhandleShowRightMenu","clickLeft","clientX","clickTop","clientY","updateCanvasContext","drawRuler","prevProps","width","height","canvasConfigs","ratio","ctx","font","lineWidth","textBaseline","selectStart","selectLength","options","y","x","propTypes","bool","number","object","func"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,mBAAT,EAA8BC,iBAA9B,QAAuD,SAAvD;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD,EAASC,KAAT,EAAgBC,KAAhB;AAAA,SAA0BC,IAAI,CAACC,KAAL,CAAWH,KAAK,GAAGD,MAAM,GAAGE,KAA5B,CAA1B;AAAA,CAAzB;;IAEqBG,W;;;;;;;;;;;;;;;;UAmCnBC,Y,GAAe,UAACC,GAAD,EAAS;AACtB,YAAKC,OAAL,GAAeD,GAAf;AACA,YAAKE,aAAL,GAAqBF,GAAG,IAAIA,GAAG,CAACG,UAAJ,CAAe,IAAf,CAA5B;AACD,K;;UACDC,W,GAAc,UAACC,CAAD,EAAO;AAAA,wBAC2B,MAAKC,KADhC;AAAA,UACXC,QADW,eACXA,QADW;AAAA,UACDZ,KADC,eACDA,KADC;AAAA,UACMD,KADN,eACMA,KADN;AAAA,UACac,SADb,eACaA,SADb;AAEnB,UAAMf,MAAM,GAAGc,QAAQ,GAAGF,CAAC,CAACI,WAAF,CAAcC,OAAjB,GAA2BL,CAAC,CAACI,WAAF,CAAcE,OAAhE;AACAH,MAAAA,SAAS,CAAChB,gBAAgB,CAACC,MAAD,EAASC,KAAT,EAAgBC,KAAhB,CAAjB,CAAT;AACD,K;;UACDiB,W,GAAc,UAACP,CAAD,EAAO;AAAA,yBACiC,MAAKC,KADtC;AAAA,UACXC,QADW,gBACXA,QADW;AAAA,UACDZ,KADC,gBACDA,KADC;AAAA,UACMD,KADN,gBACMA,KADN;AAAA,UACamB,eADb,gBACaA,eADb;AAEnB,UAAMpB,MAAM,GAAGc,QAAQ,GAAGF,CAAC,CAACI,WAAF,CAAcC,OAAjB,GAA2BL,CAAC,CAACI,WAAF,CAAcE,OAAhE;AACAE,MAAAA,eAAe,CAACrB,gBAAgB,CAACC,MAAD,EAASC,KAAT,EAAgBC,KAAhB,CAAjB,CAAf;AACD,K;;UACDmB,U,GAAa,UAACT,CAAD,EAAO;AAAA,yBACkC,MAAKC,KADvC;AAAA,UACVC,QADU,gBACVA,QADU;AAAA,UACAZ,KADA,gBACAA,KADA;AAAA,UACOD,KADP,gBACOA,KADP;AAAA,UACcqB,eADd,gBACcA,eADd;AAElB,UAAMtB,MAAM,GAAGc,QAAQ,GAAGF,CAAC,CAACI,WAAF,CAAcC,OAAjB,GAA2BL,CAAC,CAACI,WAAF,CAAcE,OAAhE;AACAI,MAAAA,eAAe,CAACvB,gBAAgB,CAACC,MAAD,EAASC,KAAT,EAAgBC,KAAhB,CAAjB,CAAf;AACD,K;;UACDqB,W,GAAc;AAAA,aAAM,MAAKV,KAAL,CAAWW,eAAX,EAAN;AAAA,K;;UAEdC,e,GAAkB,UAACb,CAAD,EAAO;AACvBA,MAAAA,CAAC,CAACc,eAAF;;AACA,UAAId,CAAC,CAACe,MAAF,KAAa,CAAjB,EAAoB;AAAA,YACVC,qBADU,GACgB,MAAKf,KADrB,CACVe,qBADU;AAElB,YAAMC,SAAS,GAAGjB,CAAC,CAACkB,OAApB;AACA,YAAMC,QAAQ,GAAGnB,CAAC,CAACoB,OAAnB;AACAJ,QAAAA,qBAAqB,CAACC,SAAD,EAAYE,QAAZ,CAArB;AACD;AACF,K;;;;;;;wCA/DmB;AAClB,WAAKE,mBAAL;AACA,WAAKC,SAAL;AACD;;;uCACkBC,S,EAAW;AAC5B,UAAIA,SAAS,CAACC,KAAV,KAAoB,KAAKvB,KAAL,CAAWuB,KAA/B,IAAwCD,SAAS,CAACE,MAAV,KAAqB,KAAKxB,KAAL,CAAWwB,MAA5E,EAAoF;AAClF,aAAKJ,mBAAL;AACD;;AACD,WAAKC,SAAL;AACD;;;0CACqB;AAAA,yBACqB,KAAKrB,KAD1B;AAAA,UACZuB,KADY,gBACZA,KADY;AAAA,UACLC,MADK,gBACLA,MADK;AAAA,UACGC,aADH,gBACGA,aADH;AAAA,UAEZC,KAFY,GAEFD,aAFE,CAEZC,KAFY,EAIpB;;AACA,WAAK/B,OAAL,CAAa4B,KAAb,GAAqBA,KAAK,GAAGG,KAA7B;AACA,WAAK/B,OAAL,CAAa6B,MAAb,GAAsBA,MAAM,GAAGE,KAA/B;AAEA,UAAMC,GAAG,GAAG,KAAKhC,OAAL,CAAaE,UAAb,CAAwB,IAAxB,CAAZ;AACA8B,MAAAA,GAAG,CAACC,IAAJ,aACE,KAAKF,KADP;AAGAC,MAAAA,GAAG,CAACE,SAAJ,GAAgB,CAAhB;AACAF,MAAAA,GAAG,CAACG,YAAJ,GAAmB,QAAnB;AACD;;;gCACW;AAAA,yBACwE,KAAK9B,KAD7E;AAAA,UACFZ,KADE,gBACFA,KADE;AAAA,UACKC,KADL,gBACKA,KADL;AAAA,UACYkC,KADZ,gBACYA,KADZ;AAAA,UACmBC,MADnB,gBACmBA,MADnB;AAAA,UAC2BO,WAD3B,gBAC2BA,WAD3B;AAAA,UACwCC,YADxC,gBACwCA,YADxC;AAAA,UACsDP,aADtD,gBACsDA,aADtD;AAEV,UAAMQ,OAAO,GAAG;AAAE5C,QAAAA,KAAK,EAALA,KAAF;AAASkC,QAAAA,KAAK,EAALA,KAAT;AAAgBC,QAAAA,MAAM,EAANA,MAAhB;AAAwBC,QAAAA,aAAa,EAAbA;AAAxB,OAAhB;;AACA,UAAI,KAAKzB,KAAL,CAAWC,QAAf,EAAyB;AACvBhB,QAAAA,iBAAiB,CAAC,KAAKW,aAAN,EAAqBR,KAArB,EAA4B;AAAE8C,UAAAA,CAAC,EAAEH,WAAL;AAAkBP,UAAAA,MAAM,EAAEQ;AAA1B,SAA5B,EAAsEC,OAAtE,CAAjB;AACD,OAFD,MAEO;AACLjD,QAAAA,mBAAmB,CAAC,KAAKY,aAAN,EAAqBR,KAArB,EAA4B;AAAE+C,UAAAA,CAAC,EAAEJ,WAAL;AAAkBR,UAAAA,KAAK,EAAES;AAAzB,SAA5B,EAAqEC,OAArE,CAAnB;AACD;AACF;;;6BA+BQ;AACP,0BACE;AACE,QAAA,SAAS,EAAC,OADZ;AAEE,QAAA,GAAG,EAAE,KAAKxC,YAFZ;AAGE,QAAA,OAAO,EAAE,KAAKK,WAHhB;AAIE,QAAA,YAAY,EAAE,KAAKQ,WAJrB;AAKE,QAAA,WAAW,EAAE,KAAKM,eALpB;AAME,QAAA,WAAW,EAAE,KAAKJ,UANpB;AAOE,QAAA,YAAY,EAAE,KAAKE,WAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAWD;;;;EA7EsC5B,a;;SAApBU,W;AA+ErBA,WAAW,CAAC4C,SAAZ,GAAwB;AACtBnC,EAAAA,QAAQ,EAAElB,SAAS,CAACsD,IADE;AAEtBjD,EAAAA,KAAK,EAAEL,SAAS,CAACuD,MAFK;AAGtBjD,EAAAA,KAAK,EAAEN,SAAS,CAACuD,MAHK;AAItBf,EAAAA,KAAK,EAAExC,SAAS,CAACuD,MAJK;AAKtBd,EAAAA,MAAM,EAAEzC,SAAS,CAACuD,MALI;AAMtBb,EAAAA,aAAa,EAAE1C,SAAS,CAACwD,MANH;AAOtBR,EAAAA,WAAW,EAAEhD,SAAS,CAACuD,MAPD;AAQtBN,EAAAA,YAAY,EAAEjD,SAAS,CAACuD,MARF;AAStBpC,EAAAA,SAAS,EAAEnB,SAAS,CAACyD,IATC;AAUtBjC,EAAAA,eAAe,EAAExB,SAAS,CAACyD,IAVL;AAWtB/B,EAAAA,eAAe,EAAE1B,SAAS,CAACyD,IAXL;AAYtB7B,EAAAA,eAAe,EAAE5B,SAAS,CAACyD,IAZL;AAatBzB,EAAAA,qBAAqB,EAAEhC,SAAS,CAACyD;AAbX,CAAxB","sourcesContent":["import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { drawHorizontalRuler, drawVerticalRuler } from \"./utils\";\n\nconst getValueByOffset = (offset, start, scale) => Math.round(start + offset / scale);\n\nexport default class CanvasRuler extends PureComponent {\n  componentDidMount() {\n    this.updateCanvasContext();\n    this.drawRuler();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.width !== this.props.width || prevProps.height !== this.props.height) {\n      this.updateCanvasContext();\n    }\n    this.drawRuler();\n  }\n  updateCanvasContext() {\n    const { width, height, canvasConfigs } = this.props;\n    const { ratio } = canvasConfigs;\n\n    // 比例宽高\n    this.$canvas.width = width * ratio;\n    this.$canvas.height = height * ratio;\n\n    const ctx = this.$canvas.getContext(\"2d\");\n    ctx.font = `${\n      12 * ratio\n    }px -apple-system, \"Helvetica Neue\", \".SFNSText-Regular\", \"SF UI Text\", Arial, \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei\", \"WenQuanYi Zen Hei\", sans-serif`;\n    ctx.lineWidth = 1;\n    ctx.textBaseline = \"middle\";\n  }\n  drawRuler() {\n    const { start, scale, width, height, selectStart, selectLength, canvasConfigs } = this.props;\n    const options = { scale, width, height, canvasConfigs };\n    if (this.props.vertical) {\n      drawVerticalRuler(this.canvasContext, start, { y: selectStart, height: selectLength }, options);\n    } else {\n      drawHorizontalRuler(this.canvasContext, start, { x: selectStart, width: selectLength }, options);\n    }\n  }\n  setCanvasRef = (ref) => {\n    this.$canvas = ref;\n    this.canvasContext = ref && ref.getContext(\"2d\");\n  };\n  handleClick = (e) => {\n    const { vertical, scale, start, onAddLine } = this.props;\n    const offset = vertical ? e.nativeEvent.offsetY : e.nativeEvent.offsetX;\n    onAddLine(getValueByOffset(offset, start, scale));\n  };\n  handleEnter = (e) => {\n    const { vertical, scale, start, onIndicatorShow } = this.props;\n    const offset = vertical ? e.nativeEvent.offsetY : e.nativeEvent.offsetX;\n    onIndicatorShow(getValueByOffset(offset, start, scale));\n  };\n  handleMove = (e) => {\n    const { vertical, scale, start, onIndicatorMove } = this.props;\n    const offset = vertical ? e.nativeEvent.offsetY : e.nativeEvent.offsetX;\n    onIndicatorMove(getValueByOffset(offset, start, scale));\n  };\n  handleLeave = () => this.props.onIndicatorHide();\n\n  handleRightMenu = (e) => {\n    e.stopPropagation();\n    if (e.button === 2) {\n      const { onhandleShowRightMenu } = this.props;\n      const clickLeft = e.clientX;\n      const clickTop = e.clientY;\n      onhandleShowRightMenu(clickLeft, clickTop);\n    }\n  };\n  render() {\n    return (\n      <canvas\n        className=\"ruler\"\n        ref={this.setCanvasRef}\n        onClick={this.handleClick}\n        onMouseEnter={this.handleEnter}\n        onMouseDown={this.handleRightMenu}\n        onMouseMove={this.handleMove}\n        onMouseLeave={this.handleLeave}\n      />\n    );\n  }\n}\nCanvasRuler.propTypes = {\n  vertical: PropTypes.bool,\n  start: PropTypes.number,\n  scale: PropTypes.number,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  canvasConfigs: PropTypes.object,\n  selectStart: PropTypes.number,\n  selectLength: PropTypes.number,\n  onAddLine: PropTypes.func,\n  onIndicatorShow: PropTypes.func,\n  onIndicatorMove: PropTypes.func,\n  onIndicatorHide: PropTypes.func,\n  onhandleShowRightMenu: PropTypes.func\n};\n"]},"metadata":{},"sourceType":"module"}
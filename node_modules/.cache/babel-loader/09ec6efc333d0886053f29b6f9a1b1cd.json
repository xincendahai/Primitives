{"ast":null,"code":"import \"antd/es/input-number/style\";\nimport _InputNumber from \"antd/es/input-number\";\nimport _objectSpread from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/src/materials/form/number/index.js\";\n\nimport React, { useMemo } from \"react\";\nimport fetcher from \"~materials/hoc\";\nimport { isEmpty } from \"~utils/helper\";\n\nvar NumberComponent = function NumberComponent(props) {\n  var style = props.invalid ? {\n    borderColor: \"#f5222d\"\n  } : {};\n  var _props$schema = props.schema,\n      max = _props$schema.max,\n      min = _props$schema.min,\n      step = _props$schema.step;\n  var obj = {\n    placeholder: \"请输入数字\"\n  };\n\n  if (max || max === 0) {\n    obj = {\n      max: max\n    };\n  }\n\n  if (min || min === 0) {\n    obj = _objectSpread(_objectSpread({}, obj), {}, {\n      min: min\n    });\n  }\n\n  if (step) {\n    obj = _objectSpread(_objectSpread({}, obj), {}, {\n      step: step\n    });\n  }\n\n  var rootValue = useMemo(function () {\n    return !isEmpty(props.value) ? props.value : min || 0;\n  }, [props.value]);\n\n  var onChange = function onChange(value) {\n    props.onChange(props.name, value);\n  };\n\n  return /*#__PURE__*/React.createElement(_InputNumber, Object.assign({}, obj, {\n    style: _objectSpread({\n      width: \"100%\"\n    }, style),\n    disabled: props.disabled || props.readonly\n  }, props.options, {\n    value: rootValue,\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default fetcher(NumberComponent);","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/图元/react-visual-data/src/materials/form/number/index.js"],"names":["React","useMemo","fetcher","isEmpty","NumberComponent","props","style","invalid","borderColor","schema","max","min","step","obj","placeholder","rootValue","value","onChange","name","width","disabled","readonly","options"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAEA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,OAAT,QAAwB,eAAxB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,MAAMC,KAAK,GAAGD,KAAK,CAACE,OAAN,GAAgB;AAAEC,IAAAA,WAAW,EAAE;AAAf,GAAhB,GAA6C,EAA3D;AADiC,sBAENH,KAAK,CAACI,MAFA;AAAA,MAEzBC,GAFyB,iBAEzBA,GAFyB;AAAA,MAEpBC,GAFoB,iBAEpBA,GAFoB;AAAA,MAEfC,IAFe,iBAEfA,IAFe;AAGjC,MAAIC,GAAG,GAAG;AACRC,IAAAA,WAAW,EAAE;AADL,GAAV;;AAGA,MAAIJ,GAAG,IAAIA,GAAG,KAAK,CAAnB,EAAsB;AACpBG,IAAAA,GAAG,GAAG;AAAEH,MAAAA,GAAG,EAAHA;AAAF,KAAN;AACD;;AAED,MAAIC,GAAG,IAAIA,GAAG,KAAK,CAAnB,EAAsB;AACpBE,IAAAA,GAAG,mCAAQA,GAAR;AAAaF,MAAAA,GAAG,EAAHA;AAAb,MAAH;AACD;;AAED,MAAIC,IAAJ,EAAU;AACRC,IAAAA,GAAG,mCAAQA,GAAR;AAAaD,MAAAA,IAAI,EAAJA;AAAb,MAAH;AACD;;AAED,MAAMG,SAAS,GAAGd,OAAO,CAAC,YAAM;AAC9B,WAAO,CAACE,OAAO,CAACE,KAAK,CAACW,KAAP,CAAR,GAAwBX,KAAK,CAACW,KAA9B,GAAsCL,GAAG,IAAI,CAApD;AACD,GAFwB,EAEtB,CAACN,KAAK,CAACW,KAAP,CAFsB,CAAzB;;AAIA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACD,KAAD,EAAW;AAC1BX,IAAAA,KAAK,CAACY,QAAN,CAAeZ,KAAK,CAACa,IAArB,EAA2BF,KAA3B;AACD,GAFD;;AAIA,sBACE,oDACMH,GADN;AAEE,IAAA,KAAK;AAAIM,MAAAA,KAAK,EAAE;AAAX,OAAsBb,KAAtB,CAFP;AAGE,IAAA,QAAQ,EAAED,KAAK,CAACe,QAAN,IAAkBf,KAAK,CAACgB;AAHpC,KAIMhB,KAAK,CAACiB,OAJZ;AAKE,IAAA,KAAK,EAAEP,SALT;AAME,IAAA,QAAQ,EAAEE,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAUD,CApCD;;AAsCA,eAAef,OAAO,CAACE,eAAD,CAAtB","sourcesContent":["import React, { useMemo } from \"react\";\nimport { InputNumber } from \"antd\";\nimport fetcher from \"~materials/hoc\";\nimport { isEmpty } from \"~utils/helper\";\n\nconst NumberComponent = (props) => {\n  const style = props.invalid ? { borderColor: \"#f5222d\" } : {};\n  const { max, min, step } = props.schema;\n  let obj = {\n    placeholder: \"请输入数字\"\n  };\n  if (max || max === 0) {\n    obj = { max };\n  }\n\n  if (min || min === 0) {\n    obj = { ...obj, min };\n  }\n\n  if (step) {\n    obj = { ...obj, step };\n  }\n\n  const rootValue = useMemo(() => {\n    return !isEmpty(props.value) ? props.value : min || 0;\n  }, [props.value]);\n\n  const onChange = (value) => {\n    props.onChange(props.name, value);\n  };\n\n  return (\n    <InputNumber\n      {...obj}\n      style={{ width: \"100%\", ...style }}\n      disabled={props.disabled || props.readonly}\n      {...props.options}\n      value={rootValue}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default fetcher(NumberComponent);\n"]},"metadata":{},"sourceType":"module"}
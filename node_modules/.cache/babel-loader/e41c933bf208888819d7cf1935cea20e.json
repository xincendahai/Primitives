{"ast":null,"code":"import \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/tree/style\";\nimport _Tree from \"antd/es/tree\";\nimport _slicedToArray from \"/Users/xiangmingxin/Wicrecend/Primitives/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/collapse/style\";\nimport _Collapse from \"antd/es/collapse\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport _objectSpread from \"/Users/xiangmingxin/Wicrecend/Primitives/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/xiangmingxin/Wicrecend/Primitives/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/xiangmingxin/Wicrecend/Primitives/src/pages/report/src/aside.jsx\";\n\nimport React, { Fragment, useRef, useState, useEffect, useMemo } from \"react\";\nimport { connect } from \"react-redux\";\nimport { IconFont, Scrollbar, SplitPanel } from \"~components\";\nimport { useTools, useStore } from \"~common/hooks\";\nimport { FORM_ID } from \"~common/constants\";\nimport assemblyData from \"../data\";\nimport { widgets } from \"~materials\";\nimport { generatorField } from \"~renderer/utils\";\nimport { FORM_CONTAINER_CONF } from \"../data/default\";\nvar VERSION = window.appConfig.VERSION;\n/**\n * 分类组件栏\n * @param {*} mode 组件模式 component 组件/ form 表单\n * @param {*} list 组件列表\n */\n\nvar SubEnumField = connect(function (state) {\n  return {\n    conditions: state.form.conditions\n  };\n})(function (_ref) {\n  var list = _ref.list,\n      conditions = _ref.conditions,\n      dispatch = _ref.dispatch;\n\n  var _useTools = useTools(),\n      state = _useTools.state,\n      setState = _useTools.setState;\n\n  var createChartField = function createChartField(config) {\n    try {\n      var _generatorField = generatorField(state.components, \"grid\", config),\n          components = _generatorField.components,\n          fieldId = _generatorField.fieldId;\n\n      setState({\n        tabsKey: \"base\",\n        components: components\n      });\n      dispatch({\n        type: \"component/activeKey\",\n        data: fieldId\n      });\n      dispatch({\n        type: \"component/fieldType\",\n        data: \"component\"\n      });\n      dispatch({\n        type: \"form/dependencies\",\n        data: components.map(function (item) {\n          return item.uniqueId;\n        })\n      });\n    } catch (error) {\n      console.log(\"\\u7EC4\\u4EF6\\u521B\\u5EFA\\u5931\\u8D25\\uFF0C\".concat(error));\n    }\n  };\n\n  var createFormField = function createFormField(config) {\n    try {\n      var _components;\n\n      var _generatorField2 = generatorField(conditions, \"form\", config),\n          components = _generatorField2.components,\n          fieldId = _generatorField2.fieldId; // TODO: 识别是否有表单容器、有且只有一个\n\n\n      _components = state.components.some(function (item) {\n        return item.type === \"container\";\n      }) ? state.components : [].concat(_toConsumableArray(state.components), [_objectSpread(_objectSpread({}, FORM_CONTAINER_CONF), {}, {\n        uniqueId: FORM_ID\n      })]);\n      setState({\n        tabsKey: \"base\",\n        components: _components\n      });\n      dispatch({\n        type: \"component/activeKey\",\n        data: fieldId\n      });\n      dispatch({\n        type: \"component/fieldType\",\n        data: \"form\"\n      });\n      dispatch({\n        type: \"form/conditions\",\n        data: components\n      });\n    } catch (error) {\n      console.log(\"\\u8868\\u5355\\u521B\\u5EFA\\u5931\\u8D25\\uFF0C\".concat(error));\n    }\n  };\n\n  var createField = function createField(element) {\n    // TODO：识别当前新建元件是否为表单控件\n    var isFormField = Object.keys(widgets).some(function (item) {\n      return item === element.type;\n    });\n    isFormField ? createFormField(element) : createChartField(element);\n  };\n\n  return /*#__PURE__*/React.createElement(_Row, {\n    gutter: 10,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, list.map(function (ele, idx) {\n    return /*#__PURE__*/React.createElement(_Col, {\n      span: 12,\n      key: \"\".concat(idx),\n      className: \"silder-item\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(_Card, {\n      hoverable: true,\n      cover: ele.icon ? /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"AutoComplete\",\n        src: \"./static/component/\".concat(ele.icon, \".png\"),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 33\n        }\n      }) : null,\n      bodyStyle: {\n        padding: \"10px 5px\",\n        fontSize: 12\n      },\n      onClick: function onClick() {\n        createField(ele);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(_Card.Meta, {\n      description: ele.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    })));\n  }));\n});\n/**\n * 枚举组件\n * @param {*} value 搜索值\n */\n\nfunction EnumFields(_ref2) {\n  var _this2 = this;\n\n  var value = _ref2.value;\n  var componentTools = useRef([{\n    key: \"form\",\n    name: \"过滤条件\",\n    icon: \"WindowsOutlined\",\n    list: assemblyData.query\n  }, {\n    key: \"bar\",\n    name: \"柱状图\",\n    icon: \"BarChartOutlined\",\n    list: assemblyData.bar\n  }, {\n    key: \"line\",\n    name: \"线形图\",\n    icon: \"LineChartOutlined\",\n    list: assemblyData.line\n  }, {\n    key: \"pie\",\n    name: \"饼状图\",\n    icon: \"PieChartOutlined\",\n    list: assemblyData.pie\n  }, {\n    key: \"map\",\n    name: \"地图\",\n    icon: \"HeatMapOutlined\",\n    list: assemblyData.map\n  }, {\n    key: \"border\",\n    name: \"边框\",\n    icon: \"WindowsOutlined\",\n    list: assemblyData.border\n  }]).current;\n  var displayField = useMemo(function () {\n    return assemblyData.total.filter(function (ele) {\n      return ele.name === value;\n    });\n  }, [value]);\n  return displayField && displayField.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"silder-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(_Collapse, {\n    defaultActiveKey: \"form\",\n    expandIconPosition: \"right\",\n    accordion: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, componentTools.map(function (item) {\n    return /*#__PURE__*/React.createElement(_Collapse.Panel, {\n      header: /*#__PURE__*/React.createElement(Fragment, {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(IconFont, {\n        antd: true,\n        style: {\n          marginRight: 5\n        },\n        type: item.icon,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }), item.name),\n      key: item.key,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SubEnumField, {\n      list: item.list,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }));\n  }))) : /*#__PURE__*/React.createElement(SubEnumField, {\n    list: displayField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  });\n} // 组件市场汇总\n\n\nfunction FieldMarkets(_ref3) {\n  var _this3 = this;\n\n  var activeKey = _ref3.activeKey,\n      conditions = _ref3.conditions,\n      dispatch = _ref3.dispatch;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      cname = _useState2[0],\n      setcname = _useState2[1];\n\n  var _useState3 = useState([{\n    title: \"图层\",\n    key: \"-\",\n    children: []\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      layer = _useState4[0],\n      setLayer = _useState4[1];\n\n  var _useTools2 = useTools(),\n      state = _useTools2.state,\n      setState = _useTools2.setState;\n\n  var _useStore = useStore(),\n      view = _useStore.view;\n\n  useEffect(function () {\n    var treeList = [{\n      title: \"图层\",\n      key: \"-\",\n      children: state.components.filter(function (m) {\n        return m.type !== \"container\";\n      }).map(function (m) {\n        return {\n          key: m.uniqueId,\n          title: m.name,\n          isLeaf: true\n        };\n      })\n    }]; // todo: 过滤条件和图层分块显示\n\n    if (conditions.length > 0) {\n      treeList.unshift({\n        title: \"过滤条件\",\n        key: \"__form__\",\n        children: conditions.map(function (m) {\n          return {\n            key: m.uniqueId,\n            title: m.name,\n            isLeaf: true\n          };\n        })\n      });\n    } // 最终图层面板\n\n\n    setLayer(treeList);\n  }, [activeKey]);\n\n  var onChange = function onChange(value) {\n    setcname(value);\n  };\n\n  var onSelect = function onSelect(keys) {\n    setState({\n      tabsKey: \"base\"\n    });\n    dispatch({\n      type: \"component/activeKey\",\n      data: keys.join(\"\")\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"aside\", {\n    className: view.layerCollapsed ? \"gc-design__silder is-show\" : \"gc-design__silder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SplitPanel, {\n    mode: \"horizontal\",\n    minSize: 180,\n    maxSize: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"silder-tree\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Scrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Card, {\n    title: \"\\u62A5\\u8868\\u8BBE\\u8BA1\\u5668\\uFF08\\u81EA\\u9002\\u5E94\\u5E03\\u5C40\\uFF09\",\n    bordered: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Tree.DirectoryTree, {\n    defaultExpandAll: true,\n    expandAction: false,\n    selectedKeys: [activeKey],\n    onSelect: onSelect,\n    treeData: layer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"silder-components\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Scrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(_Card, {\n    title: \"\\u7EC4\\u4EF6 \\uFF08\\u5F53\\u524D\\u7248\\u672C\\uFF1A\".concat(VERSION, \"\\uFF09\"),\n    bordered: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(_Select, {\n    className: \"silder-select\",\n    showSearch: true,\n    allowClear: true,\n    placeholder: \"\\u67E5\\u627E\\u5BF9\\u5E94\\u7EC4\\u4EF6\",\n    optionFilterProp: \"children\",\n    onChange: onChange,\n    filterOption: function filterOption(input, option) {\n      return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, assemblyData.total.map(function (item) {\n    return /*#__PURE__*/React.createElement(_Select.Option, {\n      value: item.name,\n      key: item.name,\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, item.name);\n  })), /*#__PURE__*/React.createElement(EnumFields, {\n    value: cname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default connect(function (state) {\n  return {\n    activeKey: state.component.activeKey,\n    conditions: state.form.conditions\n  };\n})(FieldMarkets);","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/Primitives/src/pages/report/src/aside.jsx"],"names":["React","Fragment","useRef","useState","useEffect","useMemo","connect","IconFont","Scrollbar","SplitPanel","useTools","useStore","FORM_ID","assemblyData","widgets","generatorField","FORM_CONTAINER_CONF","VERSION","window","appConfig","SubEnumField","state","conditions","form","list","dispatch","setState","createChartField","config","components","fieldId","tabsKey","type","data","map","item","uniqueId","error","console","log","createFormField","_components","some","createField","element","isFormField","Object","keys","ele","idx","icon","padding","fontSize","name","EnumFields","value","componentTools","key","query","bar","line","pie","border","current","displayField","total","filter","length","marginRight","FieldMarkets","activeKey","cname","setcname","title","children","layer","setLayer","view","treeList","m","isLeaf","unshift","onChange","onSelect","join","layerCollapsed","input","option","toLowerCase","indexOf","component"],"mappings":"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","sourcesContent":["import React, { Fragment, useRef, useState, useEffect, useMemo } from \"react\";\nimport { Collapse, Tree, Select, Card, Col, Row } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { IconFont, Scrollbar, SplitPanel } from \"~components\";\nimport { useTools, useStore } from \"~common/hooks\";\nimport { FORM_ID } from \"~common/constants\";\nimport assemblyData from \"../data\";\nimport { widgets } from \"~materials\";\nimport { generatorField } from \"~renderer/utils\";\nimport { FORM_CONTAINER_CONF } from \"../data/default\";\nconst { VERSION } = window.appConfig;\n\n/**\n * 分类组件栏\n * @param {*} mode 组件模式 component 组件/ form 表单\n * @param {*} list 组件列表\n */\nconst SubEnumField = connect((state) => ({\n  conditions: state.form.conditions\n}))(({ list, conditions, dispatch }) => {\n  const { state, setState } = useTools();\n\n  const createChartField = (config) => {\n    try {\n      const { components, fieldId } = generatorField(state.components, \"grid\", config);\n\n      setState({ tabsKey: \"base\", components: components });\n      dispatch({ type: \"component/activeKey\", data: fieldId });\n      dispatch({ type: \"component/fieldType\", data: \"component\" });\n      dispatch({ type: \"form/dependencies\", data: components.map((item) => item.uniqueId) });\n    } catch (error) {\n      console.log(`组件创建失败，${error}`);\n    }\n  };\n\n  const createFormField = (config) => {\n    try {\n      let _components;\n      const { components, fieldId } = generatorField(conditions, \"form\", config);\n\n      // TODO: 识别是否有表单容器、有且只有一个\n      _components = state.components.some((item) => item.type === \"container\")\n        ? state.components\n        : [...state.components, { ...FORM_CONTAINER_CONF, uniqueId: FORM_ID }];\n\n      setState({ tabsKey: \"base\", components: _components });\n      dispatch({ type: \"component/activeKey\", data: fieldId });\n      dispatch({ type: \"component/fieldType\", data: \"form\" });\n      dispatch({ type: \"form/conditions\", data: components });\n    } catch (error) {\n      console.log(`表单创建失败，${error}`);\n    }\n  };\n\n  const createField = (element) => {\n    // TODO：识别当前新建元件是否为表单控件\n    const isFormField = Object.keys(widgets).some((item) => item === element.type);\n    isFormField ? createFormField(element) : createChartField(element);\n  };\n\n  return (\n    <Row gutter={10}>\n      {list.map((ele, idx) => {\n        return (\n          <Col span={12} key={`${idx}`} className=\"silder-item\">\n            <Card\n              hoverable\n              cover={ele.icon ? <img alt=\"AutoComplete\" src={`./static/component/${ele.icon}.png`} /> : null}\n              bodyStyle={{\n                padding: \"10px 5px\",\n                fontSize: 12\n              }}\n              onClick={() => {\n                createField(ele);\n              }}\n            >\n              <Card.Meta description={ele.name} />\n            </Card>\n          </Col>\n        );\n      })}\n    </Row>\n  );\n});\n\n/**\n * 枚举组件\n * @param {*} value 搜索值\n */\nfunction EnumFields({ value }) {\n  const componentTools = useRef([\n    {\n      key: \"form\",\n      name: \"过滤条件\",\n      icon: \"WindowsOutlined\",\n      list: assemblyData.query\n    },\n    {\n      key: \"bar\",\n      name: \"柱状图\",\n      icon: \"BarChartOutlined\",\n      list: assemblyData.bar\n    },\n    {\n      key: \"line\",\n      name: \"线形图\",\n      icon: \"LineChartOutlined\",\n      list: assemblyData.line\n    },\n    {\n      key: \"pie\",\n      name: \"饼状图\",\n      icon: \"PieChartOutlined\",\n      list: assemblyData.pie\n    },\n    {\n      key: \"map\",\n      name: \"地图\",\n      icon: \"HeatMapOutlined\",\n      list: assemblyData.map\n    },\n    {\n      key: \"border\",\n      name: \"边框\",\n      icon: \"WindowsOutlined\",\n      list: assemblyData.border\n    }\n  ]).current;\n\n  const displayField = useMemo(() => {\n    return assemblyData.total.filter((ele) => ele.name === value);\n  }, [value]);\n\n  return displayField && displayField.length === 0 ? (\n    <div className=\"silder-tab\">\n      <Collapse defaultActiveKey=\"form\" expandIconPosition=\"right\" accordion>\n        {componentTools.map((item) => (\n          <Collapse.Panel\n            header={\n              <Fragment>\n                <IconFont antd={true} style={{ marginRight: 5 }} type={item.icon} />\n                {item.name}\n              </Fragment>\n            }\n            key={item.key}\n          >\n            <SubEnumField list={item.list} />\n          </Collapse.Panel>\n        ))}\n      </Collapse>\n    </div>\n  ) : (\n    <SubEnumField list={displayField} />\n  );\n}\n\n// 组件市场汇总\nfunction FieldMarkets({ activeKey, conditions, dispatch }) {\n  const [cname, setcname] = useState(\"\");\n  const [layer, setLayer] = useState([\n    {\n      title: \"图层\",\n      key: \"-\",\n      children: []\n    }\n  ]);\n  const { state, setState } = useTools();\n  const { view } = useStore();\n\n  useEffect(() => {\n    let treeList = [\n      {\n        title: \"图层\",\n        key: \"-\",\n        children: state.components\n          .filter((m) => m.type !== \"container\")\n          .map((m) => ({\n            key: m.uniqueId,\n            title: m.name,\n            isLeaf: true\n          }))\n      }\n    ];\n    // todo: 过滤条件和图层分块显示\n    if (conditions.length > 0) {\n      treeList.unshift({\n        title: \"过滤条件\",\n        key: \"__form__\",\n        children: conditions.map((m) => ({\n          key: m.uniqueId,\n          title: m.name,\n          isLeaf: true\n        }))\n      });\n    }\n    // 最终图层面板\n    setLayer(treeList);\n  }, [activeKey]);\n\n  const onChange = (value) => {\n    setcname(value);\n  };\n\n  const onSelect = (keys) => {\n    setState({ tabsKey: \"base\" });\n    dispatch({ type: \"component/activeKey\", data: keys.join(\"\") });\n  };\n\n  return (\n    <aside className={view.layerCollapsed ? \"gc-design__silder is-show\" : \"gc-design__silder\"}>\n      <SplitPanel mode=\"horizontal\" minSize={180} maxSize={600}>\n        <div className=\"silder-tree\">\n          <Scrollbar>\n            <Card title=\"报表设计器（自适应布局）\" bordered={false}>\n              <Tree.DirectoryTree\n                defaultExpandAll\n                expandAction={false}\n                selectedKeys={[activeKey]}\n                onSelect={onSelect}\n                treeData={layer}\n              />\n            </Card>\n          </Scrollbar>\n        </div>\n        <div className=\"silder-components\">\n          <Scrollbar>\n            <Card title={`组件 （当前版本：${VERSION}）`} bordered={false}>\n              <Select\n                className=\"silder-select\"\n                showSearch={true}\n                allowClear={true}\n                placeholder=\"查找对应组件\"\n                optionFilterProp=\"children\"\n                onChange={onChange}\n                filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n              >\n                {assemblyData.total.map((item) => {\n                  return (\n                    <Select.Option value={item.name} key={item.name}>\n                      {item.name}\n                    </Select.Option>\n                  );\n                })}\n              </Select>\n              <EnumFields value={cname} />\n            </Card>\n          </Scrollbar>\n        </div>\n      </SplitPanel>\n    </aside>\n  );\n}\n\nexport default connect((state) => ({\n  activeKey: state.component.activeKey,\n  conditions: state.form.conditions\n}))(FieldMarkets);\n"]},"metadata":{},"sourceType":"module"}
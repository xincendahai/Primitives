{"ast":null,"code":"import _regeneratorRuntime from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/src/materials/rank-panel/index.js\";\n\nimport React, { useEffect, useRef, useState, forwardRef, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useAutoResize } from \"~common/hooks\";\nvar defaultConfig = {\n  data: [],\n  rowNum: 5,\n  waitTime: 2000,\n  carousel: \"single\",\n  unit: \"\",\n  sort: true\n};\n\nfunction interceptor(gen) {\n  var destroyed = false; // 处理 return 之后 resume 的问题\n\n  var stop = false;\n  if (typeof gen === \"function\") gen = gen();\n  if (!gen || typeof gen.next !== \"function\") return function () {\n    return {};\n  };\n  Promise.resolve().then(function () {\n    destroyed || next(gen.next());\n  });\n  return {\n    end: function end() {\n      destroyed = true;\n      Promise.resolve().then(function () {\n        gen.return();\n        gen = null;\n      });\n    },\n    pause: function pause() {\n      if (!destroyed) {\n        stop = true;\n      }\n    },\n    resume: function resume() {\n      Promise.resolve().then(function () {\n        if (!destroyed && stop) {\n          stop = false;\n          next(gen.next());\n        }\n      });\n    }\n  };\n\n  function next(ret) {\n    if (ret.done) return ret.value;\n    return Promise.resolve(ret.value).then(function () {\n      !destroyed && !stop && next(gen.next());\n    });\n  }\n}\n\nfunction calcRows(_ref) {\n  var data = _ref.data,\n      rowNum = _ref.rowNum,\n      sort = _ref.sort;\n  sort && data.sort(function (_ref2, _ref3) {\n    var a = _ref2.value;\n    var b = _ref3.value;\n    if (a > b) return -1;\n    if (a < b) return 1;\n    if (a === b) return 0;\n  });\n  var value = data.map(function (_ref4) {\n    var value = _ref4.value;\n    return value;\n  });\n  var max = Math.max.apply(Math, _toConsumableArray(value)) || 0;\n  data = data.map(function (row, i) {\n    return _objectSpread(_objectSpread({}, row), {}, {\n      ranking: i + 1,\n      percent: row.value / max * 100\n    });\n  });\n  var rowLength = data.length;\n\n  if (rowLength > rowNum && rowLength < 2 * rowNum) {\n    data = [].concat(_toConsumableArray(data), _toConsumableArray(data));\n  }\n\n  data = data.map(function (d, i) {\n    return _objectSpread(_objectSpread({}, d), {}, {\n      scroll: i\n    });\n  });\n  return data;\n}\n\nvar ScrollRankPanel = forwardRef(function (_ref5, ref) {\n  var _marked = /*#__PURE__*/_regeneratorRuntime.mark(animation);\n\n  var _ref5$config = _ref5.config,\n      config = _ref5$config === void 0 ? {} : _ref5$config,\n      style = _ref5.style;\n\n  var _useAutoResize = useAutoResize(ref),\n      width = _useAutoResize.width,\n      height = _useAutoResize.height,\n      domRef = _useAutoResize.domRef;\n\n  var _useState = useState({\n    mergedConfig: null,\n    rows: [],\n    heights: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      store = _useState2[0],\n      setState = _useState2[1];\n\n  var mergedConfig = store.mergedConfig,\n      rows = store.rows,\n      heights = store.heights;\n  var stateRef = useRef(_objectSpread(_objectSpread({}, store), {}, {\n    rowsData: [],\n    avgHeight: 0,\n    animationIndex: 0\n  }));\n  var heightRef = useRef(height);\n  Object.assign(stateRef.current, store);\n\n  function onResize() {\n    var onresize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    if (!mergedConfig) return;\n    var heights = calcHeights(mergedConfig, onresize);\n\n    if (heights !== undefined) {\n      Object.assign(stateRef.current, {\n        heights: heights\n      });\n      setState(function (state) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          heights: heights\n        });\n      });\n    }\n  }\n\n  function calcData() {\n    var mergedConfig = _objectSpread(_objectSpread({}, defaultConfig), config);\n\n    var rows = calcRows(mergedConfig);\n    var heights = calcHeights(mergedConfig);\n    var data = {\n      mergedConfig: mergedConfig,\n      rows: rows\n    };\n    heights !== undefined && Object.assign(data, {\n      heights: heights\n    });\n    Object.assign(stateRef.current, data, {\n      rowsData: rows,\n      animationIndex: 0\n    });\n    setState(function (state) {\n      return _objectSpread(_objectSpread({}, state), data);\n    });\n  }\n\n  function calcHeights(_ref6) {\n    var rowNum = _ref6.rowNum,\n        data = _ref6.data;\n    var onresize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var avgHeight = height / rowNum;\n    Object.assign(stateRef.current, {\n      avgHeight: avgHeight\n    });\n\n    if (!onresize) {\n      return new Array(data.length).fill(avgHeight);\n    }\n  }\n\n  function animation() {\n    var start,\n        _stateRef$current,\n        avgHeight,\n        animationIndex,\n        _stateRef$current$mer,\n        waitTime,\n        carousel,\n        rowNum,\n        rowsData,\n        rowLength,\n        animationNum,\n        rows,\n        heights,\n        back,\n        newHeights,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function animation$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            start = _args.length > 0 && _args[0] !== undefined ? _args[0] : false;\n            _stateRef$current = stateRef.current, avgHeight = _stateRef$current.avgHeight, animationIndex = _stateRef$current.animationIndex, _stateRef$current$mer = _stateRef$current.mergedConfig, waitTime = _stateRef$current$mer.waitTime, carousel = _stateRef$current$mer.carousel, rowNum = _stateRef$current$mer.rowNum, rowsData = _stateRef$current.rowsData;\n            rowLength = rowsData.length;\n\n            if (!start) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 6;\n            return new Promise(function (resolve) {\n              return setTimeout(resolve, waitTime);\n            });\n\n          case 6:\n            animationNum = carousel === \"single\" ? 1 : rowNum;\n            rows = rowsData.slice(animationIndex);\n            rows.push.apply(rows, _toConsumableArray(rowsData.slice(0, animationIndex)));\n            heights = new Array(rowLength).fill(avgHeight);\n            setState(function (state) {\n              return _objectSpread(_objectSpread({}, state), {}, {\n                rows: rows,\n                heights: heights\n              });\n            });\n            _context.next = 13;\n            return new Promise(function (resolve) {\n              return setTimeout(resolve, 300);\n            });\n\n          case 13:\n            animationIndex += animationNum;\n            back = animationIndex - rowLength;\n            if (back >= 0) animationIndex = back;\n            newHeights = _toConsumableArray(heights);\n            newHeights.splice.apply(newHeights, [0, animationNum].concat(_toConsumableArray(new Array(animationNum).fill(0))));\n            Object.assign(stateRef.current, {\n              animationIndex: animationIndex\n            });\n            setState(function (state) {\n              return _objectSpread(_objectSpread({}, state), {}, {\n                heights: newHeights\n              });\n            });\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _marked);\n  }\n\n  useEffect(function () {\n    var _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loop);\n\n    calcData();\n    var start = true;\n\n    function loop() {\n      var _loop;\n\n      return _regeneratorRuntime.wrap(function loop$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _loop = /*#__PURE__*/_regeneratorRuntime.mark(function _loop() {\n                var waitTime;\n                return _regeneratorRuntime.wrap(function _loop$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        return _context2.delegateYield(animation(start), \"t0\", 1);\n\n                      case 1:\n                        start = false;\n                        waitTime = stateRef.current.mergedConfig.waitTime;\n                        _context2.next = 5;\n                        return new Promise(function (resolve) {\n                          return setTimeout(resolve, waitTime - 300);\n                        });\n\n                      case 5:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _loop);\n              });\n\n            case 1:\n              if (!true) {\n                _context3.next = 5;\n                break;\n              }\n\n              return _context3.delegateYield(_loop(), \"t0\", 3);\n\n            case 3:\n              _context3.next = 1;\n              break;\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _marked2);\n    }\n\n    var _stateRef$current2 = stateRef.current,\n        rowNum = _stateRef$current2.mergedConfig.rowNum,\n        rowsData = _stateRef$current2.rows;\n    var rowLength = rowsData.length;\n    if (rowNum >= rowLength) return;\n    return interceptor(loop).end;\n  }, [config, domRef.current]);\n  useEffect(function () {\n    if (heightRef.current === 0 && height !== 0) {\n      onResize();\n      heightRef.current = height;\n    } else {\n      onResize(true);\n    }\n  }, [width, height, domRef.current]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gc-scroll-ranking-board\",\n    style: style,\n    ref: domRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 5\n    }\n  }, rows.map(function (item, i) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row-item\",\n      key: item.toString() + item.scroll,\n      style: {\n        height: \"\".concat(heights[i], \"px\")\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ranking-info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rank\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }, \"No.\", item.ranking), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-name\",\n      dangerouslySetInnerHTML: {\n        __html: item.name\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ranking-value\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }, item.value + mergedConfig.unit)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ranking-column\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inside-column\",\n      style: {\n        width: \"\".concat(item.percent, \"%\")\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shine\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 15\n      }\n    }))));\n  }));\n});\nScrollRankPanel.propTypes = {\n  config: PropTypes.object,\n  style: PropTypes.object\n};\n\nvar VRankPanel = function VRankPanel(_ref7) {\n  var options = _ref7.options,\n      schema = _ref7.schema;\n  var data = schema.data;\n  var option = useMemo(function () {\n    return _objectSpread(_objectSpread({}, options), data);\n  }, [options, data]);\n  return /*#__PURE__*/React.createElement(ScrollRankPanel, {\n    config: option,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default VRankPanel;","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/图元/react-visual-data/src/materials/rank-panel/index.js"],"names":["React","useEffect","useRef","useState","forwardRef","useMemo","PropTypes","useAutoResize","defaultConfig","data","rowNum","waitTime","carousel","unit","sort","interceptor","gen","destroyed","stop","next","Promise","resolve","then","end","return","pause","resume","ret","done","value","calcRows","a","b","map","max","Math","row","i","ranking","percent","rowLength","length","d","scroll","ScrollRankPanel","ref","animation","config","style","width","height","domRef","mergedConfig","rows","heights","store","setState","stateRef","rowsData","avgHeight","animationIndex","heightRef","Object","assign","current","onResize","onresize","calcHeights","undefined","state","calcData","Array","fill","start","setTimeout","animationNum","slice","push","back","newHeights","splice","loop","item","toString","__html","name","propTypes","object","VRankPanel","options","schema","option"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState, forwardRef, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useAutoResize } from \"~common/hooks\";\n\nconst defaultConfig = {\n  data: [],\n  rowNum: 5,\n  waitTime: 2000,\n  carousel: \"single\",\n  unit: \"\",\n  sort: true\n};\n\nfunction interceptor(gen) {\n  let destroyed = false;\n\n  // 处理 return 之后 resume 的问题\n  let stop = false;\n\n  if (typeof gen === \"function\") gen = gen();\n\n  if (!gen || typeof gen.next !== \"function\") return () => ({});\n\n  Promise.resolve().then(() => {\n    destroyed || next(gen.next());\n  });\n\n  return {\n    end() {\n      destroyed = true;\n\n      Promise.resolve().then(() => {\n        gen.return();\n\n        gen = null;\n      });\n    },\n    pause() {\n      if (!destroyed) {\n        stop = true;\n      }\n    },\n    resume() {\n      Promise.resolve().then(() => {\n        if (!destroyed && stop) {\n          stop = false;\n\n          next(gen.next());\n        }\n      });\n    }\n  };\n\n  function next(ret) {\n    if (ret.done) return ret.value;\n\n    return Promise.resolve(ret.value).then(() => {\n      !destroyed && !stop && next(gen.next());\n    });\n  }\n}\n\nfunction calcRows({ data, rowNum, sort }) {\n  sort &&\n    data.sort(({ value: a }, { value: b }) => {\n      if (a > b) return -1;\n      if (a < b) return 1;\n      if (a === b) return 0;\n    });\n\n  const value = data.map(({ value }) => value);\n\n  const max = Math.max(...value) || 0;\n\n  data = data.map((row, i) => ({\n    ...row,\n    ranking: i + 1,\n    percent: (row.value / max) * 100\n  }));\n\n  const rowLength = data.length;\n\n  if (rowLength > rowNum && rowLength < 2 * rowNum) {\n    data = [...data, ...data];\n  }\n\n  data = data.map((d, i) => ({ ...d, scroll: i }));\n\n  return data;\n}\n\nconst ScrollRankPanel = forwardRef(({ config = {}, style }, ref) => {\n  const { width, height, domRef } = useAutoResize(ref);\n\n  const [store, setState] = useState({\n    mergedConfig: null,\n    rows: [],\n    heights: []\n  });\n\n  const { mergedConfig, rows, heights } = store;\n\n  const stateRef = useRef({\n    ...store,\n    rowsData: [],\n    avgHeight: 0,\n    animationIndex: 0\n  });\n\n  const heightRef = useRef(height);\n\n  Object.assign(stateRef.current, store);\n\n  function onResize(onresize = false) {\n    if (!mergedConfig) return;\n\n    const heights = calcHeights(mergedConfig, onresize);\n\n    if (heights !== undefined) {\n      Object.assign(stateRef.current, { heights });\n      setState((state) => ({ ...state, heights }));\n    }\n  }\n\n  function calcData() {\n    const mergedConfig = { ...defaultConfig, ...config };\n\n    const rows = calcRows(mergedConfig);\n\n    const heights = calcHeights(mergedConfig);\n\n    const data = { mergedConfig, rows };\n\n    heights !== undefined && Object.assign(data, { heights });\n\n    Object.assign(stateRef.current, data, {\n      rowsData: rows,\n      animationIndex: 0\n    });\n\n    setState((state) => ({ ...state, ...data }));\n  }\n\n  function calcHeights({ rowNum, data }, onresize = false) {\n    const avgHeight = height / rowNum;\n\n    Object.assign(stateRef.current, { avgHeight });\n\n    if (!onresize) {\n      return new Array(data.length).fill(avgHeight);\n    }\n  }\n\n  function* animation(start = false) {\n    let {\n      avgHeight,\n      animationIndex,\n      mergedConfig: { waitTime, carousel, rowNum },\n      rowsData\n    } = stateRef.current;\n\n    const rowLength = rowsData.length;\n\n    if (start) yield new Promise((resolve) => setTimeout(resolve, waitTime));\n\n    const animationNum = carousel === \"single\" ? 1 : rowNum;\n\n    let rows = rowsData.slice(animationIndex);\n    rows.push(...rowsData.slice(0, animationIndex));\n\n    const heights = new Array(rowLength).fill(avgHeight);\n    setState((state) => ({ ...state, rows, heights }));\n\n    yield new Promise((resolve) => setTimeout(resolve, 300));\n\n    animationIndex += animationNum;\n\n    const back = animationIndex - rowLength;\n    if (back >= 0) animationIndex = back;\n\n    const newHeights = [...heights];\n    newHeights.splice(0, animationNum, ...new Array(animationNum).fill(0));\n\n    Object.assign(stateRef.current, { animationIndex });\n    setState((state) => ({ ...state, heights: newHeights }));\n  }\n\n  useEffect(() => {\n    calcData();\n\n    let start = true;\n\n    function* loop() {\n      while (true) {\n        yield* animation(start);\n\n        start = false;\n\n        const { waitTime } = stateRef.current.mergedConfig;\n\n        yield new Promise((resolve) => setTimeout(resolve, waitTime - 300));\n      }\n    }\n\n    const {\n      mergedConfig: { rowNum },\n      rows: rowsData\n    } = stateRef.current;\n\n    const rowLength = rowsData.length;\n\n    if (rowNum >= rowLength) return;\n\n    return interceptor(loop).end;\n  }, [config, domRef.current]);\n\n  useEffect(() => {\n    if (heightRef.current === 0 && height !== 0) {\n      onResize();\n\n      heightRef.current = height;\n    } else {\n      onResize(true);\n    }\n  }, [width, height, domRef.current]);\n\n  return (\n    <div className=\"gc-scroll-ranking-board\" style={style} ref={domRef}>\n      {rows.map((item, i) => (\n        <div className=\"row-item\" key={item.toString() + item.scroll} style={{ height: `${heights[i]}px` }}>\n          <div className=\"ranking-info\">\n            <div className=\"rank\">No.{item.ranking}</div>\n            <div className=\"info-name\" dangerouslySetInnerHTML={{ __html: item.name }} />\n            <div className=\"ranking-value\">{item.value + mergedConfig.unit}</div>\n          </div>\n\n          <div className=\"ranking-column\">\n            <div className=\"inside-column\" style={{ width: `${item.percent}%` }}>\n              <div className=\"shine\" />\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n});\n\nScrollRankPanel.propTypes = {\n  config: PropTypes.object,\n  style: PropTypes.object\n};\n\nconst VRankPanel = ({ options, schema }) => {\n  const { data } = schema;\n\n  const option = useMemo(() => {\n    return {\n      ...options,\n      ...data\n    };\n  }, [options, data]);\n\n  return <ScrollRankPanel config={option} />;\n};\n\nexport default VRankPanel;\n"]},"metadata":{},"sourceType":"module"}
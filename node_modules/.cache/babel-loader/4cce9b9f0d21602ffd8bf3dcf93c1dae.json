{"ast":null,"code":"import { DEFAULT_COLORS } from \"~materials/constants\";\nimport { tooltipFormatter } from \"~materials/vcharts/util\";\nexport default function getOptions(option, data) {\n  var _data$categories = data.categories,\n      categories = _data$categories === void 0 ? [] : _data$categories,\n      _data$series = data.series,\n      series = _data$series === void 0 ? [] : _data$series;\n  var _option$smooth = option.smooth,\n      smooth = _option$smooth === void 0 ? false : _option$smooth,\n      _option$symbol = option.symbol,\n      symbol = _option$symbol === void 0 ? \"none\" : _option$symbol,\n      _option$stack = option.stack,\n      stack = _option$stack === void 0 ? false : _option$stack,\n      _option$axisLineShowX = option.axisLineShowX,\n      axisLineShowX = _option$axisLineShowX === void 0 ? false : _option$axisLineShowX,\n      _option$axisLineColor = option.axisLineColorX,\n      axisLineColorX = _option$axisLineColor === void 0 ? \"#463e3e\" : _option$axisLineColor,\n      _option$axisLabelColo = option.axisLabelColorX,\n      axisLabelColorX = _option$axisLabelColo === void 0 ? \"#ffffff\" : _option$axisLabelColo,\n      _option$axisTickShowX = option.axisTickShowX,\n      axisTickShowX = _option$axisTickShowX === void 0 ? false : _option$axisTickShowX,\n      _option$axisLineShowY = option.axisLineShowY,\n      axisLineShowY = _option$axisLineShowY === void 0 ? false : _option$axisLineShowY,\n      _option$axisLabelColo2 = option.axisLabelColorY,\n      axisLabelColorY = _option$axisLabelColo2 === void 0 ? \"#463e3e\" : _option$axisLabelColo2,\n      _option$splitLineShow = option.splitLineShowY,\n      splitLineShowY = _option$splitLineShow === void 0 ? true : _option$splitLineShow,\n      _option$splitLineColo = option.splitLineColorY,\n      splitLineColorY = _option$splitLineColo === void 0 ? \"#5B5B5B\" : _option$splitLineColo,\n      _option$splitLineType = option.splitLineType,\n      splitLineType = _option$splitLineType === void 0 ? \"solid\" : _option$splitLineType,\n      _option$diyAxis = option.diyAxis,\n      diyAxis = _option$diyAxis === void 0 ? false : _option$diyAxis,\n      _option$step = option.step,\n      step = _option$step === void 0 ? false : _option$step,\n      _option$barWidth = option.barWidth,\n      barWidth = _option$barWidth === void 0 ? \"auto\" : _option$barWidth,\n      _option$unit = option.unit,\n      unit = _option$unit === void 0 ? \"\" : _option$unit;\n  var yAxisOpt;\n\n  if (diyAxis) {\n    yAxisOpt = [{\n      type: \"value\",\n      min: 0,\n      axisLabel: {\n        color: axisLabelColorY,\n        textStyle: {\n          fontSize: 12\n        },\n        formatter: \"{value}\"\n      },\n      axisLine: {\n        show: false\n      },\n      axisTick: {\n        show: false\n      },\n      splitLine: {\n        show: splitLineShowY,\n        lineStyle: {\n          color: splitLineColorY\n        }\n      }\n    }, {\n      type: \"value\",\n      max: 100,\n      min: 0,\n      interval: 16.4,\n      axisLabel: {\n        color: axisLabelColorY,\n        textStyle: {\n          fontStyle: \"normal\",\n          fontFamily: \"微软雅黑\",\n          fontSize: 12\n        },\n        formatter: \"{value} %\"\n      },\n      axisLine: {\n        show: axisLineShowY\n      },\n      axisTick: {\n        show: false\n      },\n      splitLine: {\n        show: splitLineShowY,\n        lineStyle: {\n          color: splitLineColorY,\n          type: splitLineType\n        }\n      }\n    }];\n  } else {\n    yAxisOpt = {\n      type: \"value\",\n      min: 0,\n      axisTick: {\n        show: false\n      },\n      axisLine: {\n        show: axisLineShowY\n      },\n      splitLine: {\n        show: splitLineShowY,\n        lineStyle: {\n          color: splitLineColorY,\n          type: splitLineType\n        }\n      }\n    };\n  }\n\n  return {\n    color: DEFAULT_COLORS,\n    grid: {\n      top: 30,\n      left: 15,\n      right: 20,\n      bottom: 30,\n      containLabel: true\n    },\n    tooltip: {\n      trigger: \"axis\",\n      formatter: function formatter(parma) {\n        return tooltipFormatter(parma, unit);\n      }\n    },\n    legend: {\n      show: true,\n      type: \"plain\",\n      bottom: 0,\n      data: series.map(function (item) {\n        return item.name;\n      })\n    },\n    xAxis: {\n      type: \"category\",\n      nameLocation: \"middle\",\n      nameGap: 22,\n      axisLine: {\n        show: axisLineShowX,\n        lineStyle: {\n          color: axisLineColorX\n        }\n      },\n      axisLabel: {\n        color: axisLabelColorX\n      },\n      axisTick: {\n        show: axisTickShowX\n      },\n      boundaryGap: true,\n      data: categories\n    },\n    yAxis: yAxisOpt,\n    series: series.map(function (item) {\n      return {\n        name: item.name,\n        type: item.type ? item.type : \"line\",\n        barWidth: barWidth,\n        smooth: smooth,\n        showSymbol: !1,\n        symbol: symbol,\n        step: step,\n        areaStyle: stack ? {\n          normal: {}\n        } : undefined,\n        data: item.data\n      };\n    })\n  };\n}","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/图元/react-visual-data/src/materials/vcharts/options/line.js"],"names":["DEFAULT_COLORS","tooltipFormatter","getOptions","option","data","categories","series","smooth","symbol","stack","axisLineShowX","axisLineColorX","axisLabelColorX","axisTickShowX","axisLineShowY","axisLabelColorY","splitLineShowY","splitLineColorY","splitLineType","diyAxis","step","barWidth","unit","yAxisOpt","type","min","axisLabel","color","textStyle","fontSize","formatter","axisLine","show","axisTick","splitLine","lineStyle","max","interval","fontStyle","fontFamily","grid","top","left","right","bottom","containLabel","tooltip","trigger","parma","legend","map","item","name","xAxis","nameLocation","nameGap","boundaryGap","yAxis","showSymbol","areaStyle","normal","undefined"],"mappings":"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","sourcesContent":["import { DEFAULT_COLORS } from \"~materials/constants\";\nimport { tooltipFormatter } from \"~materials/vcharts/util\";\n\nexport default function getOptions(option, data) {\n  const { categories = [], series = [] } = data;\n  const {\n    smooth = false,\n    symbol = \"none\",\n    stack = false,\n    axisLineShowX = false,\n    axisLineColorX = \"#463e3e\",\n    axisLabelColorX = \"#ffffff\",\n    axisTickShowX = false,\n    axisLineShowY = false,\n    axisLabelColorY = \"#463e3e\",\n    splitLineShowY = true,\n    splitLineColorY = \"#5B5B5B\",\n    splitLineType = \"solid\",\n    diyAxis = false,\n    step = false,\n    barWidth = \"auto\",\n    unit = \"\"\n  } = option;\n\n  let yAxisOpt;\n\n  if (diyAxis) {\n    yAxisOpt = [\n      {\n        type: \"value\",\n        min: 0,\n        axisLabel: {\n          color: axisLabelColorY,\n          textStyle: {\n            fontSize: 12\n          },\n          formatter: \"{value}\"\n        },\n        axisLine: {\n          show: false\n        },\n        axisTick: {\n          show: false\n        },\n        splitLine: {\n          show: splitLineShowY,\n          lineStyle: {\n            color: splitLineColorY\n          }\n        }\n      },\n      {\n        type: \"value\",\n        max: 100,\n        min: 0,\n        interval: 16.4,\n        axisLabel: {\n          color: axisLabelColorY,\n          textStyle: {\n            fontStyle: \"normal\",\n            fontFamily: \"微软雅黑\",\n            fontSize: 12\n          },\n          formatter: \"{value} %\"\n        },\n        axisLine: {\n          show: axisLineShowY\n        },\n        axisTick: {\n          show: false\n        },\n        splitLine: {\n          show: splitLineShowY,\n          lineStyle: {\n            color: splitLineColorY,\n            type: splitLineType\n          }\n        }\n      }\n    ];\n  } else {\n    yAxisOpt = {\n      type: \"value\",\n      min: 0,\n      axisTick: {\n        show: false\n      },\n      axisLine: {\n        show: axisLineShowY\n      },\n      splitLine: {\n        show: splitLineShowY,\n        lineStyle: {\n          color: splitLineColorY,\n          type: splitLineType\n        }\n      }\n    };\n  }\n\n  return {\n    color: DEFAULT_COLORS,\n    grid: {\n      top: 30,\n      left: 15,\n      right: 20,\n      bottom: 30,\n      containLabel: true\n    },\n    tooltip: {\n      trigger: \"axis\",\n      formatter: function (parma) {\n        return tooltipFormatter(parma, unit);\n      }\n    },\n    legend: {\n      show: true,\n      type: \"plain\",\n      bottom: 0,\n      data: series.map((item) => item.name)\n    },\n    xAxis: {\n      type: \"category\",\n      nameLocation: \"middle\",\n      nameGap: 22,\n      axisLine: {\n        show: axisLineShowX,\n        lineStyle: {\n          color: axisLineColorX\n        }\n      },\n      axisLabel: {\n        color: axisLabelColorX\n      },\n      axisTick: {\n        show: axisTickShowX\n      },\n      boundaryGap: true,\n      data: categories\n    },\n    yAxis: yAxisOpt,\n    series: series.map((item) => {\n      return {\n        name: item.name,\n        type: item.type ? item.type : \"line\",\n        barWidth: barWidth,\n        smooth: smooth,\n        showSymbol: !1,\n        symbol: symbol,\n        step: step,\n        areaStyle: stack\n          ? {\n              normal: {}\n            }\n          : undefined,\n        data: item.data\n      };\n    })\n  };\n}\n"]},"metadata":{},"sourceType":"module"}
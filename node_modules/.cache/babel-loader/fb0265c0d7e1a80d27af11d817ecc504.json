{"ast":null,"code":"import _objectWithoutProperties from \"/Users/xiangmingxin/Wicrecend/Primitives/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/xiangmingxin/Wicrecend/Primitives/src/library/form-render/factory.jsx\",\n    _this = this;\n\nimport React, { useRef, useMemo, useEffect, useImperativeHandle } from \"react\";\nimport { asField, DefaultFieldUI } from \"./asField\";\nimport schemaParser from \"./parser\";\nimport schemaResolve from \"./resolve\";\nimport { useDebounce } from \"../common/hooks\";\nimport { getValidateList } from \"./validate\";\nimport { combineSchema } from \"./utils\";\nimport { isEmpty } from \"~utils/helper\";\n\nfunction RenderField(_ref) {\n  var fields = _ref.fields,\n      onChange = _ref.onChange,\n      settings = _objectWithoutProperties(_ref, [\"fields\", \"onChange\"]);\n\n  var _schemaParser = schemaParser(settings, fields),\n      Field = _schemaParser.Field,\n      props = _schemaParser.props;\n\n  if (!Field) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Field, Object.assign({\n    isRoot: true\n  }, props, {\n    value: settings.data,\n    onChange: onChange,\n    formData: settings.formData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }\n  }));\n}\n/**\n * @param generated 根据 Widget 生成的 Field\n * @param customized 自定义的 Field\n * @param mapping 字段 type 与 widgetName 的映射关系\n */\n\n\nfunction FieldRender(_ref2) {\n  var _ref2$className = _ref2.className,\n      className = _ref2$className === void 0 ? \"\" : _ref2$className,\n      _ref2$name = _ref2.name,\n      name = _ref2$name === void 0 ? \"$Field\" : _ref2$name,\n      _ref2$cname = _ref2.cname,\n      cname = _ref2$cname === void 0 ? null : _ref2$cname,\n      _ref2$cid = _ref2.cid,\n      cid = _ref2$cid === void 0 ? \"-1\" : _ref2$cid,\n      _ref2$schema = _ref2.schema,\n      schema = _ref2$schema === void 0 ? {} : _ref2$schema,\n      _ref2$formData = _ref2.formData,\n      formData = _ref2$formData === void 0 ? {} : _ref2$formData,\n      _ref2$widgets = _ref2.widgets,\n      widgets = _ref2$widgets === void 0 ? {} : _ref2$widgets,\n      _ref2$FieldUI = _ref2.FieldUI,\n      FieldUI = _ref2$FieldUI === void 0 ? DefaultFieldUI : _ref2$FieldUI,\n      _ref2$fields = _ref2.fields,\n      fields = _ref2$fields === void 0 ? {} : _ref2$fields,\n      _ref2$mapping = _ref2.mapping,\n      mapping = _ref2$mapping === void 0 ? {} : _ref2$mapping,\n      _ref2$displayType = _ref2.displayType,\n      displayType = _ref2$displayType === void 0 ? \"row\" : _ref2$displayType,\n      _ref2$tooltip = _ref2.tooltip,\n      tooltip = _ref2$tooltip === void 0 ? true : _ref2$tooltip,\n      _ref2$labelWidth = _ref2.labelWidth,\n      labelWidth = _ref2$labelWidth === void 0 ? 85 : _ref2$labelWidth,\n      _ref2$disabled = _ref2.disabled,\n      disabled = _ref2$disabled === void 0 ? false : _ref2$disabled,\n      _ref2$verify = _ref2.verify,\n      verify = _ref2$verify === void 0 ? false : _ref2$verify,\n      _ref2$labelColor = _ref2.labelColor,\n      labelColor = _ref2$labelColor === void 0 ? \"#bcc9d4\" : _ref2$labelColor,\n      _ref2$onValidate = _ref2.onValidate,\n      onValidate = _ref2$onValidate === void 0 ? function () {} : _ref2$onValidate,\n      _ref2$onChange = _ref2.onChange,\n      onChange = _ref2$onChange === void 0 ? function () {} : _ref2$onChange,\n      forwardedRef = _ref2.forwardedRef;\n  var isUserInput = useRef(false); // 状态改变是否来自于用户操作\n\n  var originWidgets = useRef();\n  var generatedFields = useRef({});\n  var rootData = useMemo(function () {\n    return schemaResolve(schema, formData);\n  }, [schema, formData]); // 字段验证防抖\n\n  var debouncedValidate = useDebounce(onValidate, 300);\n  useEffect(function () {\n    if (isUserInput.current) {\n      isUserInput.current = false;\n      return;\n    }\n\n    if (isEmpty(formData)) return;\n  }, []); // data修改比较常用，所以放第一位\n\n  var resetData = function resetData(newData, newSchema) {\n    var _schema = newSchema || schema;\n\n    var _formData = newData || formData;\n\n    var res = schemaResolve(_schema, _formData);\n    return new Promise(function (resolve) {\n      onChange(res);\n      resolve(res);\n    });\n  }; // 数据验证相关\n\n\n  var onValidateList = function onValidateList(newData, newSchema) {\n    var _schema = newSchema || schema;\n\n    var _formData = newData || formData;\n\n    return getValidateList(_formData, _schema);\n  };\n\n  useImperativeHandle(forwardedRef, function () {\n    return {\n      resetData: resetData,\n      validate: onValidateList\n    };\n  }); // 用户输入都是调用这个函数\n\n  var handleChange = function handleChange(key, val) {\n    isUserInput.current = true;\n    onChange(val);\n    if (!verify) return;\n    debouncedValidate(getValidateList(val, schema));\n  };\n\n  var generated = useMemo(function () {\n    var obj = {};\n\n    if (!originWidgets.current) {\n      originWidgets.current = widgets;\n    }\n\n    Object.keys(widgets).forEach(function (key) {\n      var oWidget = originWidgets.current[key];\n      var nWidget = widgets[key];\n      var gField = generatedFields.current[key];\n\n      if (!gField || oWidget !== nWidget) {\n        if (oWidget !== nWidget) {\n          originWidgets.current[key] = nWidget;\n        }\n\n        gField = asField({\n          FieldUI: FieldUI,\n          Widget: nWidget\n        });\n        generatedFields.current[key] = gField;\n      }\n\n      obj[key] = gField;\n    });\n    return obj;\n  }, []);\n  var settings = {\n    className: className,\n    cname: cname,\n    cid: cid,\n    schema: schema,\n    data: rootData,\n    name: name,\n    verify: verify,\n    labelColor: labelColor,\n    tooltip: tooltip,\n    displayType: displayType,\n    labelWidth: labelWidth,\n    disabled: disabled,\n    formData: formData\n  };\n  var _fields = {\n    // 根据 Widget 生成的 Field\n    generated: generated,\n    // 自定义的 Field\n    customized: fields,\n    // 字段 type 与 widgetName 的映射关系\n    mapping: mapping\n  };\n  return /*#__PURE__*/React.createElement(RenderField, Object.assign({}, settings, {\n    fields: _fields,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 10\n    }\n  }));\n}\n\nvar Wrapper = function Wrapper(_ref3) {\n  var schema = _ref3.schema,\n      args = _objectWithoutProperties(_ref3, [\"schema\"]);\n\n  return /*#__PURE__*/React.createElement(FieldRender, Object.assign({\n    schema: combineSchema(schema)\n  }, args, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default Wrapper;","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/Primitives/src/library/form-render/factory.jsx"],"names":["React","useRef","useMemo","useEffect","useImperativeHandle","asField","DefaultFieldUI","schemaParser","schemaResolve","useDebounce","getValidateList","combineSchema","isEmpty","RenderField","fields","onChange","settings","Field","props","data","formData","FieldRender","className","name","cname","cid","schema","widgets","FieldUI","mapping","displayType","tooltip","labelWidth","disabled","verify","labelColor","onValidate","forwardedRef","isUserInput","originWidgets","generatedFields","rootData","debouncedValidate","current","resetData","newData","newSchema","_schema","_formData","res","Promise","resolve","onValidateList","validate","handleChange","key","val","generated","obj","Object","keys","forEach","oWidget","nWidget","gField","Widget","_fields","customized","Wrapper","args"],"mappings":"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","sourcesContent":["import React, { useRef, useMemo, useEffect, useImperativeHandle } from \"react\";\nimport { asField, DefaultFieldUI } from \"./asField\";\nimport schemaParser from \"./parser\";\nimport schemaResolve from \"./resolve\";\nimport { useDebounce } from \"../common/hooks\";\nimport { getValidateList } from \"./validate\";\nimport { combineSchema } from \"./utils\";\nimport { isEmpty } from \"~utils/helper\";\n\nfunction RenderField({ fields, onChange, ...settings }) {\n  const { Field, props } = schemaParser(settings, fields);\n  if (!Field) {\n    return null;\n  }\n  return <Field isRoot {...props} value={settings.data} onChange={onChange} formData={settings.formData} />;\n}\n\n/**\n * @param generated 根据 Widget 生成的 Field\n * @param customized 自定义的 Field\n * @param mapping 字段 type 与 widgetName 的映射关系\n */\nfunction FieldRender({\n  className = \"\",\n  name = \"$Field\",\n  cname = null,\n  cid = \"-1\",\n  schema = {},\n  formData = {},\n  widgets = {},\n  FieldUI = DefaultFieldUI,\n  fields = {},\n  mapping = {},\n  displayType = \"row\",\n  tooltip = true,\n  labelWidth = 85,\n  disabled = false,\n  verify = false,\n  labelColor = \"#bcc9d4\",\n  onValidate = () => {},\n  onChange = () => {},\n  forwardedRef\n}) {\n  const isUserInput = useRef(false); // 状态改变是否来自于用户操作\n  const originWidgets = useRef();\n  const generatedFields = useRef({});\n\n  const rootData = useMemo(() => schemaResolve(schema, formData), [schema, formData]);\n\n  // 字段验证防抖\n  const debouncedValidate = useDebounce(onValidate, 300);\n\n  useEffect(() => {\n    if (isUserInput.current) {\n      isUserInput.current = false;\n      return;\n    }\n    if (isEmpty(formData)) return;\n  }, []);\n\n  // data修改比较常用，所以放第一位\n  const resetData = (newData, newSchema) => {\n    const _schema = newSchema || schema;\n    const _formData = newData || formData;\n    const res = schemaResolve(_schema, _formData);\n    return new Promise((resolve) => {\n      onChange(res);\n      resolve(res);\n    });\n  };\n\n  // 数据验证相关\n  const onValidateList = (newData, newSchema) => {\n    const _schema = newSchema || schema;\n    const _formData = newData || formData;\n    return getValidateList(_formData, _schema);\n  };\n\n  useImperativeHandle(forwardedRef, () => ({\n    resetData,\n    validate: onValidateList\n  }));\n\n  // 用户输入都是调用这个函数\n  const handleChange = (key, val) => {\n    isUserInput.current = true;\n    onChange(val);\n\n    if (!verify) return;\n    debouncedValidate(getValidateList(val, schema));\n  };\n\n  const generated = useMemo(() => {\n    let obj = {};\n    if (!originWidgets.current) {\n      originWidgets.current = widgets;\n    }\n    Object.keys(widgets).forEach((key) => {\n      const oWidget = originWidgets.current[key];\n      const nWidget = widgets[key];\n      let gField = generatedFields.current[key];\n      if (!gField || oWidget !== nWidget) {\n        if (oWidget !== nWidget) {\n          originWidgets.current[key] = nWidget;\n        }\n        gField = asField({ FieldUI, Widget: nWidget });\n        generatedFields.current[key] = gField;\n      }\n      obj[key] = gField;\n    });\n    return obj;\n  }, []);\n\n  const settings = {\n    className,\n    cname,\n    cid,\n    schema,\n    data: rootData,\n    name,\n    verify,\n    labelColor,\n    tooltip,\n    displayType,\n    labelWidth,\n    disabled,\n    formData\n  };\n\n  const _fields = {\n    // 根据 Widget 生成的 Field\n    generated,\n    // 自定义的 Field\n    customized: fields,\n    // 字段 type 与 widgetName 的映射关系\n    mapping\n  };\n\n  return <RenderField {...settings} fields={_fields} onChange={handleChange} />;\n}\n\nconst Wrapper = ({ schema, ...args }) => {\n  return <FieldRender schema={combineSchema(schema)} {...args} />;\n};\n\nexport default Wrapper;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport _regeneratorRuntime from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/src/materials/form/upload/crop.js\";\n\nimport React, { useEffect } from \"react\";\nimport ImgCrop from \"antd-img-crop\";\nimport { IconFont } from \"~components\";\nimport { useSet } from \"~common/hooks\";\nimport { percent, isEmpty, getBase64 } from \"~utils/helper\";\n\nvar VUploadCrop = function VUploadCrop(prop) {\n  var _useSet = useSet({\n    previewVisible: false,\n    previewImage: \"\",\n    previewTitle: \"\",\n    fileLists: []\n  }),\n      _useSet2 = _slicedToArray(_useSet, 2),\n      store = _useSet2[0],\n      setState = _useSet2[1];\n\n  var previewVisible = store.previewVisible,\n      previewImage = store.previewImage,\n      previewTitle = store.previewTitle,\n      fileLists = store.fileLists;\n  useEffect(function () {\n    if (isEmpty(prop.value)) return;\n    setState({\n      fileLists: [{\n        uid: \"-1\",\n        name: previewTitle,\n        status: \"done\",\n        url: prop.value\n      }]\n    });\n  }, []);\n  var renderProps = {\n    name: \"file\",\n    action: prop.action,\n    enctype: \"multipart/form-data\",\n    withCredentials: true,\n    type: \"file\",\n    fileList: fileLists,\n    listType: \"picture-card\",\n    progress: {\n      strokeColor: {\n        \"0%\": \"#108ee9\",\n        \"100%\": \"#87d068\"\n      },\n      strokeWidth: 3,\n      format: function format(percents) {\n        return \"\".concat(percent(percents, 2));\n      }\n    },\n    onPreview: function () {\n      var _onPreview = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(file) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (file.url) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _context.next = 3;\n                return getBase64(file.originFileObj);\n\n              case 3:\n                file.url = _context.sent;\n\n              case 4:\n                setState({\n                  previewImage: file.url,\n                  previewVisible: true,\n                  previewTitle: file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1)\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function onPreview(_x) {\n        return _onPreview.apply(this, arguments);\n      }\n\n      return onPreview;\n    }(),\n    onChange: function onChange(_ref) {\n      var file = _ref.file,\n          fileList = _ref.fileList;\n\n      if (file.status === \"done\") {\n        _message.success(\"\".concat(file.name, \" \\u6587\\u4EF6\\u4E0A\\u4F20\\u6210\\u529F\"));\n\n        setState({\n          fileLists: fileList,\n          previewTitle: file.name\n        });\n        prop.onChange(prop.name, file.response.thumbUrl);\n      } else if (file.status === \"error\") {\n        _message.error(\"\".concat(file.name, \" \\u6587\\u4EF6\\u4E0A\\u4F20\\u5931\\u8D25\"));\n\n        prop.onChange(prop.name, \"\");\n      }\n    },\n    onRemove: function onRemove() {\n      prop.onChange(prop.name, \"\");\n      setState({\n        fileLists: []\n      });\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gc-upload-mod\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ImgCrop, {\n    rotate: true,\n    modalWidth: 960,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(_Upload, Object.assign({}, renderProps, {\n    disabled: fileLists.length >= 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(_Button, {\n    type: \"text\",\n    disabled: fileLists.length >= 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconFont, {\n    antd: true,\n    type: \"UploadOutlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), \" \\u4E0A\\u4F20\"))), /*#__PURE__*/React.createElement(_Modal, {\n    visible: previewVisible,\n    title: previewTitle,\n    footer: null,\n    onCancel: function onCancel() {\n      return setState({\n        previewVisible: false\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"example\",\n    style: {\n      width: \"100%\"\n    },\n    src: previewImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default VUploadCrop;","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/图元/react-visual-data/src/materials/form/upload/crop.js"],"names":["React","useEffect","ImgCrop","IconFont","useSet","percent","isEmpty","getBase64","VUploadCrop","prop","previewVisible","previewImage","previewTitle","fileLists","store","setState","value","uid","name","status","url","renderProps","action","enctype","withCredentials","type","fileList","listType","progress","strokeColor","strokeWidth","format","percents","onPreview","file","originFileObj","substring","lastIndexOf","onChange","success","response","thumbUrl","error","onRemove","length","width"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Upload, message, Button, Modal } from \"antd\";\nimport ImgCrop from \"antd-img-crop\";\nimport { IconFont } from \"~components\";\n\nimport { useSet } from \"~common/hooks\";\nimport { percent, isEmpty, getBase64 } from \"~utils/helper\";\n\nconst VUploadCrop = (prop) => {\n  const [store, setState] = useSet({\n    previewVisible: false,\n    previewImage: \"\",\n    previewTitle: \"\",\n    fileLists: []\n  });\n\n  const { previewVisible, previewImage, previewTitle, fileLists } = store;\n\n  useEffect(() => {\n    if (isEmpty(prop.value)) return;\n    setState({\n      fileLists: [\n        {\n          uid: \"-1\",\n          name: previewTitle,\n          status: \"done\",\n          url: prop.value\n        }\n      ]\n    });\n  }, []);\n\n  const renderProps = {\n    name: \"file\",\n    action: prop.action,\n    enctype: \"multipart/form-data\",\n    withCredentials: true,\n    type: \"file\",\n    fileList: fileLists,\n    listType: \"picture-card\",\n    progress: {\n      strokeColor: {\n        \"0%\": \"#108ee9\",\n        \"100%\": \"#87d068\"\n      },\n      strokeWidth: 3,\n      format: (percents) => `${percent(percents, 2)}`\n    },\n    onPreview: async (file) => {\n      if (!file.url) {\n        file.url = await getBase64(file.originFileObj);\n      }\n      setState({\n        previewImage: file.url,\n        previewVisible: true,\n        previewTitle: file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1)\n      });\n    },\n    onChange({ file, fileList }) {\n      if (file.status === \"done\") {\n        message.success(`${file.name} 文件上传成功`);\n        setState({ fileLists: fileList, previewTitle: file.name });\n        prop.onChange(prop.name, file.response.thumbUrl);\n      } else if (file.status === \"error\") {\n        message.error(`${file.name} 文件上传失败`);\n        prop.onChange(prop.name, \"\");\n      }\n    },\n    onRemove() {\n      prop.onChange(prop.name, \"\");\n      setState({ fileLists: [] });\n    }\n  };\n\n  return (\n    <div className=\"gc-upload-mod\">\n      <ImgCrop rotate modalWidth={960}>\n        <Upload {...renderProps} disabled={fileLists.length >= 1}>\n          <Button type=\"text\" disabled={fileLists.length >= 1}>\n            <IconFont antd={true} type=\"UploadOutlined\" /> 上传\n          </Button>\n        </Upload>\n      </ImgCrop>\n      {/* 模态框 */}\n      <Modal\n        visible={previewVisible}\n        title={previewTitle}\n        footer={null}\n        onCancel={() =>\n          setState({\n            previewVisible: false\n          })\n        }\n      >\n        <img alt=\"example\" style={{ width: \"100%\" }} src={previewImage} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default VUploadCrop;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/src/library/renderer/compiler/grid.jsx\";\n\nimport React, { useState, useEffect } from \"react\";\nimport cx from \"classnames\";\nimport { WidthProvider, Responsive } from \"react-grid-layout\";\nimport { connect } from \"react-redux\";\nimport { widgets } from \"~materials\";\nimport generator from \"../generator\";\nimport { getField } from \"~materials\";\nimport \"react-grid-layout/css/styles.css\";\nimport \"react-resizable/css/styles.css\";\nvar ResponsiveGridLayout = WidthProvider(Responsive);\n\nvar GeneratorField = function GeneratorField(_ref) {\n  var _cx;\n\n  var mode = _ref.mode,\n      value = _ref.value;\n\n  var _value$data = value.data,\n      title = _value$data.title,\n      hideTitle = _value$data.hideTitle,\n      titleAlign = _value$data.titleAlign,\n      titleColor = _value$data.titleColor,\n      background = _value$data.background,\n      rest = _objectWithoutProperties(_value$data, [\"title\", \"hideTitle\", \"titleAlign\", \"titleColor\", \"background\"]);\n\n  var className = cx(\"gc-field-grid animate__animated\", (_cx = {}, _defineProperty(_cx, \"animate__\".concat(rest.animateType), rest.animateType), _defineProperty(_cx, \"animate__\".concat(rest.animateSpeed), rest.animateSpeed), _defineProperty(_cx, \"animate__\".concat(rest.animateRepeat), rest.animateRepeat), _defineProperty(_cx, \"animate__delay-\".concat(rest.animateTime, \"s\"), rest.animateTime), _cx));\n  var overwriteStyle = {\n    background: background,\n    boxShadow: rest.shadowColor ? \"\".concat(rest.shadowColor, \" \").concat(rest.shadowWidth || 0, \" \").concat(rest.shadowOffset || 0, \" \").concat(rest.shadowOffset || 0) : rest.shadowWidth\n  };\n\n  var getSubField = function getSubField(m) {\n    var prop = getField(value.type, mode);\n    return generator(prop)(m);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: overwriteStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, !hideTitle ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-hd\",\n    style: {\n      color: titleColor,\n      textAlign: titleAlign\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, title) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid-bd\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, getSubField({\n    value: value.data,\n    type: value.type,\n    uniqueId: value.uniqueId,\n    options: value.data.config\n  })));\n};\n\nvar GridRenderer = function GridRenderer(_ref2) {\n  var dataGrid = _ref2.dataGrid;\n  if (dataGrid.length === 0) return null;\n  return /*#__PURE__*/React.createElement(ResponsiveGridLayout, {\n    rowHeight: 0,\n    breakpoints: {\n      lg: 1200,\n      md: 996,\n      sm: 768,\n      xs: 480,\n      xxs: 0\n    },\n    cols: {\n      lg: 12,\n      md: 10,\n      sm: 6,\n      xs: 4,\n      xxs: 2\n    },\n    isResizable: false,\n    isDraggable: false,\n    containerPadding: [0, 0],\n    useCSSTransforms: !1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, dataGrid.map(function (prop) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: prop.uniqueId,\n      \"data-grid\": {\n        x: prop.data.left,\n        y: prop.data.top,\n        // puts it at the bottom\n        w: prop.data.width,\n        h: prop.data.height\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, !prop.data.isHidden ? /*#__PURE__*/React.createElement(GeneratorField, {\n      value: prop,\n      key: prop.uniqueId,\n      mode: typeof widgets[prop.type] === \"function\" ? \"form\" : \"field\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }) : null);\n  }));\n};\n\nexport default connect(function (state) {\n  return {\n    conditions: state.form.conditions\n  };\n})(GridRenderer);","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/图元/react-visual-data/src/library/renderer/compiler/grid.jsx"],"names":["React","useState","useEffect","cx","WidthProvider","Responsive","connect","widgets","generator","getField","ResponsiveGridLayout","GeneratorField","mode","value","data","title","hideTitle","titleAlign","titleColor","background","rest","className","animateType","animateSpeed","animateRepeat","animateTime","overwriteStyle","boxShadow","shadowColor","shadowWidth","shadowOffset","getSubField","m","prop","type","color","textAlign","uniqueId","options","config","GridRenderer","dataGrid","length","lg","md","sm","xs","xxs","map","x","left","y","top","w","width","h","height","isHidden","state","conditions","form"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport cx from \"classnames\";\nimport { WidthProvider, Responsive } from \"react-grid-layout\";\nimport { connect } from \"react-redux\";\nimport { widgets } from \"~materials\";\nimport generator from \"../generator\";\nimport { getField } from \"~materials\";\n\nimport \"react-grid-layout/css/styles.css\";\nimport \"react-resizable/css/styles.css\";\n\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n\nconst GeneratorField = ({ mode, value }) => {\n  const { title, hideTitle, titleAlign, titleColor, background, ...rest } = value.data;\n  const className = cx(\"gc-field-grid animate__animated\", {\n    [`animate__${rest.animateType}`]: rest.animateType,\n    [`animate__${rest.animateSpeed}`]: rest.animateSpeed,\n    [`animate__${rest.animateRepeat}`]: rest.animateRepeat,\n    [`animate__delay-${rest.animateTime}s`]: rest.animateTime\n  });\n\n  const overwriteStyle = {\n    background,\n    boxShadow: rest.shadowColor\n      ? `${rest.shadowColor} ${rest.shadowWidth || 0} ${rest.shadowOffset || 0} ${rest.shadowOffset || 0}`\n      : rest.shadowWidth\n  };\n\n  const getSubField = (m) => {\n    const prop = getField(value.type, mode);\n    return generator(prop)(m);\n  };\n\n  return (\n    <div className={className} style={overwriteStyle}>\n      {!hideTitle ? (\n        <div\n          className=\"grid-hd\"\n          style={{\n            color: titleColor,\n            textAlign: titleAlign\n          }}\n        >\n          {title}\n        </div>\n      ) : null}\n      <div className=\"grid-bd\">\n        {getSubField({\n          value: value.data,\n          type: value.type,\n          uniqueId: value.uniqueId,\n          options: value.data.config\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst GridRenderer = ({ dataGrid }) => {\n  if (dataGrid.length === 0) return null;\n\n  return (\n    <ResponsiveGridLayout\n      rowHeight={0}\n      breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\n      cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\n      isResizable={false}\n      isDraggable={false}\n      containerPadding={[0, 0]}\n      useCSSTransforms={!1}\n    >\n      {dataGrid.map((prop) => (\n        <div\n          key={prop.uniqueId}\n          data-grid={{\n            x: prop.data.left,\n            y: prop.data.top, // puts it at the bottom\n            w: prop.data.width,\n            h: prop.data.height\n          }}\n        >\n          {!prop.data.isHidden ? (\n            <GeneratorField\n              value={prop}\n              key={prop.uniqueId}\n              mode={typeof widgets[prop.type] === \"function\" ? \"form\" : \"field\"}\n            />\n          ) : null}\n        </div>\n      ))}\n    </ResponsiveGridLayout>\n  );\n};\n\nexport default connect((state) => ({\n  conditions: state.form.conditions\n}))(GridRenderer);\n"]},"metadata":{},"sourceType":"module"}
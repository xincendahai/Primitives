{"ast":null,"code":"import _regeneratorRuntime from \"/Users/xiangmingxin/Wicrecend/Primitives/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/xiangmingxin/Wicrecend/Primitives/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/xiangmingxin/Wicrecend/Primitives/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/xiangmingxin/Wicrecend/Primitives/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/xiangmingxin/Wicrecend/Primitives/src/materials/scroll-panel/index.js\";\n\nimport React, { useEffect, useState, useRef, forwardRef, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useAutoResize } from \"~common/hooks\";\nvar defaultConfig = {\n  columns: [],\n  rows: [],\n  rowNum: 5,\n  headerBGC: \"#00BAFF\",\n  oddRowBGC: \"#003B51\",\n  evenRowBGC: \"#0A2732\",\n  waitTime: 2000,\n  headerHeight: 35,\n  columnWidth: [],\n  align: [],\n  index: false,\n  indexHeader: \"#\",\n  carousel: \"single\",\n  hoverPause: true\n};\n\nfunction interceptor(gen) {\n  var destroyed = false; // 处理 return 之后 resume 的问题\n\n  var stop = false;\n  if (typeof gen === \"function\") gen = gen();\n  if (!gen || typeof gen.next !== \"function\") return function () {\n    return {};\n  };\n  Promise.resolve().then(function () {\n    destroyed || next(gen.next());\n  });\n  return {\n    end: function end() {\n      destroyed = true;\n      Promise.resolve().then(function () {\n        gen.return();\n        gen = null;\n      });\n    },\n    pause: function pause() {\n      if (!destroyed) {\n        stop = true;\n      }\n    },\n    resume: function resume() {\n      Promise.resolve().then(function () {\n        if (!destroyed && stop) {\n          stop = false;\n          next(gen.next());\n        }\n      });\n    }\n  };\n\n  function next(ret) {\n    if (ret.done) return ret.value;\n    return Promise.resolve(ret.value).then(function () {\n      !destroyed && !stop && next(gen.next());\n    });\n  }\n}\n\nfunction calcHeaderData(_ref) {\n  var columns = _ref.columns,\n      index = _ref.index,\n      indexHeader = _ref.indexHeader;\n\n  if (!columns.length) {\n    return [];\n  }\n\n  columns = _toConsumableArray(columns);\n  if (index) columns.unshift({\n    name: indexHeader,\n    index: -1\n  });\n  return columns;\n}\n\nfunction calcRows(_ref2) {\n  var rows = _ref2.rows,\n      index = _ref2.index,\n      headerBGC = _ref2.headerBGC,\n      rowNum = _ref2.rowNum;\n\n  if (index) {\n    rows = rows.map(function (row, i) {\n      row = _toConsumableArray(row);\n      var indexTag = \"<span class=\\\"index\\\" style=\\\"background-color: \".concat(headerBGC, \";\\\">\").concat(i + 1, \"</span>\");\n      row.unshift(indexTag);\n      return row;\n    });\n  }\n\n  rows = rows.map(function (cell, i) {\n    return {\n      cell: cell,\n      rowIndex: i\n    };\n  });\n  var rowLength = rows.length;\n\n  if (rowLength > rowNum && rowLength < 2 * rowNum) {\n    rows = [].concat(_toConsumableArray(rows), _toConsumableArray(rows));\n  }\n\n  return rows.map(function (d, i) {\n    return _objectSpread(_objectSpread({}, d), {}, {\n      scroll: i\n    });\n  });\n}\n\nfunction calcAligns(mergedConfig, columns) {\n  var columnNum = columns.length;\n  var aligns = new Array(columnNum).fill(\"left\");\n  var align = mergedConfig.align;\n  return _objectSpread(_objectSpread({}, aligns), align);\n}\n\nvar ScrollRankPanel = forwardRef(function (_ref3, ref) {\n  var _marked = /*#__PURE__*/_regeneratorRuntime.mark(animation);\n\n  var _onClick = _ref3.onClick,\n      _ref3$config = _ref3.config,\n      config = _ref3$config === void 0 ? {} : _ref3$config,\n      style = _ref3.style,\n      onMouseOver = _ref3.onMouseOver;\n\n  var _useAutoResize = useAutoResize(ref),\n      width = _useAutoResize.width,\n      height = _useAutoResize.height,\n      domRef = _useAutoResize.domRef;\n\n  var _useState = useState({\n    mergedConfig: null,\n    columns: [],\n    rows: [],\n    widths: [],\n    heights: [],\n    aligns: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var mergedConfig = state.mergedConfig,\n      columns = state.columns,\n      rows = state.rows,\n      widths = state.widths,\n      heights = state.heights,\n      aligns = state.aligns;\n  var stateRef = useRef(_objectSpread(_objectSpread({}, state), {}, {\n    rowsData: [],\n    avgHeight: 0,\n    animationIndex: 0\n  }));\n  Object.assign(stateRef.current, state);\n\n  function onResize() {\n    if (!mergedConfig) return;\n    var widths = calcWidths(mergedConfig, stateRef.current.rowsData);\n    var heights = calcHeights(mergedConfig, columns);\n    var rows = {\n      widths: widths,\n      heights: heights\n    };\n    Object.assign(stateRef.current, rows);\n    setState(function (state) {\n      return _objectSpread(_objectSpread({}, state), rows);\n    });\n  }\n\n  function calcData() {\n    var mergedConfig = _objectSpread(_objectSpread({}, defaultConfig), config);\n\n    var columns = calcHeaderData(mergedConfig);\n    var rows = calcRows(mergedConfig);\n    var widths = calcWidths(mergedConfig, stateRef.current.rowsData);\n    var heights = calcHeights(mergedConfig, columns);\n    var aligns = calcAligns(mergedConfig, columns);\n    var data = {\n      mergedConfig: mergedConfig,\n      columns: columns,\n      rows: rows,\n      widths: widths,\n      aligns: aligns,\n      heights: heights\n    };\n    Object.assign(stateRef.current, data, {\n      rowsData: rows,\n      animationIndex: 0\n    });\n    setState(function (state) {\n      return _objectSpread(_objectSpread({}, state), data);\n    });\n  }\n\n  function calcWidths(_ref4, rowsData) {\n    var columnWidth = _ref4.columnWidth,\n        columns = _ref4.columns;\n    var usedWidth = columnWidth.reduce(function (all, w) {\n      return all + w;\n    }, 0);\n    var columnNum = 0;\n\n    if (rowsData[0]) {\n      columnNum = rowsData[0].cell.length;\n    } else if (columns.length) {\n      columnNum = columns.length;\n    }\n\n    var avgWidth = (width - usedWidth) / (columnNum - columnWidth.length);\n    var widths = new Array(columnNum).fill(avgWidth);\n    return _objectSpread(_objectSpread({}, widths), columnWidth);\n  }\n\n  function calcHeights(_ref5, columns) {\n    var headerHeight = _ref5.headerHeight,\n        rowNum = _ref5.rowNum,\n        rows = _ref5.rows;\n    var allHeight = height;\n    if (columns.length) allHeight -= headerHeight;\n    var avgHeight = allHeight / rowNum;\n    Object.assign(stateRef.current, {\n      avgHeight: avgHeight\n    });\n    return new Array(rows.length).fill(avgHeight);\n  }\n\n  function animation() {\n    var start,\n        _stateRef$current,\n        avgHeight,\n        animationIndex,\n        _stateRef$current$mer,\n        waitTime,\n        carousel,\n        rowNum,\n        rowsData,\n        rowLength,\n        animationNum,\n        rows,\n        heights,\n        back,\n        newHeights,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function animation$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            start = _args.length > 0 && _args[0] !== undefined ? _args[0] : false;\n            _stateRef$current = stateRef.current, avgHeight = _stateRef$current.avgHeight, animationIndex = _stateRef$current.animationIndex, _stateRef$current$mer = _stateRef$current.mergedConfig, waitTime = _stateRef$current$mer.waitTime, carousel = _stateRef$current$mer.carousel, rowNum = _stateRef$current$mer.rowNum, rowsData = _stateRef$current.rowsData;\n            rowLength = rowsData.length;\n\n            if (!start) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 6;\n            return new Promise(function (resolve) {\n              return setTimeout(resolve, waitTime);\n            });\n\n          case 6:\n            animationNum = carousel === \"single\" ? 1 : rowNum;\n            rows = rowsData.slice(animationIndex);\n            rows.push.apply(rows, _toConsumableArray(rowsData.slice(0, animationIndex)));\n            heights = new Array(rowLength).fill(avgHeight);\n            setState(function (state) {\n              return _objectSpread(_objectSpread({}, state), {}, {\n                rows: rows,\n                heights: heights\n              });\n            });\n            _context.next = 13;\n            return new Promise(function (resolve) {\n              return setTimeout(resolve, 300);\n            });\n\n          case 13:\n            animationIndex += animationNum;\n            back = animationIndex - rowLength;\n            if (back >= 0) animationIndex = back;\n            newHeights = _toConsumableArray(heights);\n            newHeights.splice.apply(newHeights, [0, animationNum].concat(_toConsumableArray(new Array(animationNum).fill(0))));\n            Object.assign(stateRef.current, {\n              animationIndex: animationIndex\n            });\n            setState(function (state) {\n              return _objectSpread(_objectSpread({}, state), {}, {\n                heights: newHeights\n              });\n            });\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _marked);\n  }\n\n  function emitEvent(handle, ri, ci, row, ceil) {\n    var cell = row.cell,\n        rowIndex = row.rowIndex;\n    handle && handle({\n      row: cell,\n      ceil: ceil,\n      rowIndex: rowIndex,\n      columnIndex: ci\n    });\n  }\n\n  function handleHover(enter, ri, ci, row, ceil) {\n    if (enter) emitEvent(onMouseOver, ri, ci, row, ceil);\n    if (!mergedConfig.hoverPause) return;\n\n    if (enter) {\n      task.pause && task.pause();\n    } else {\n      task.resume && task.resume();\n    }\n  }\n\n  var getBackgroundColor = function getBackgroundColor(rowIndex) {\n    return mergedConfig[rowIndex % 2 === 0 ? \"evenRowBGC\" : \"oddRowBGC\"];\n  };\n\n  var task = {};\n  useEffect(function () {\n    var _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loop);\n\n    calcData();\n    var start = true;\n\n    function loop() {\n      var _loop;\n\n      return _regeneratorRuntime.wrap(function loop$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _loop = /*#__PURE__*/_regeneratorRuntime.mark(function _loop() {\n                var waitTime;\n                return _regeneratorRuntime.wrap(function _loop$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        return _context2.delegateYield(animation(start), \"t0\", 1);\n\n                      case 1:\n                        start = false;\n                        waitTime = stateRef.current.mergedConfig.waitTime;\n                        _context2.next = 5;\n                        return new Promise(function (resolve) {\n                          return setTimeout(resolve, waitTime - 300);\n                        });\n\n                      case 5:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _loop);\n              });\n\n            case 1:\n              if (!true) {\n                _context3.next = 5;\n                break;\n              }\n\n              return _context3.delegateYield(_loop(), \"t0\", 3);\n\n            case 3:\n              _context3.next = 1;\n              break;\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _marked2);\n    }\n\n    var _stateRef$current2 = stateRef.current,\n        rowNum = _stateRef$current2.mergedConfig.rowNum,\n        rowsData = _stateRef$current2.rows;\n    var rowLength = rowsData.length;\n    if (rowNum >= rowLength) return;\n    task = interceptor(loop);\n    return task.end;\n  }, [config, domRef.current]);\n  useEffect(onResize, [width, height, domRef.current]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gc-scroll-board\",\n    style: style,\n    ref: domRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 5\n    }\n  }, !!columns.length && !!mergedConfig && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    style: {\n      backgroundColor: \"\".concat(mergedConfig.headerBGC)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }\n  }, columns.map(function (headerItem, i) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-item\",\n      key: headerItem + i,\n      style: {\n        height: \"\".concat(mergedConfig.headerHeight, \"px\"),\n        lineHeight: \"\".concat(mergedConfig.headerHeight, \"px\"),\n        width: \"\".concat(widths[i], \"px\")\n      },\n      align: aligns[i],\n      dangerouslySetInnerHTML: {\n        __html: headerItem.name\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 13\n      }\n    });\n  })), !!mergedConfig && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rows\",\n    style: {\n      height: \"\".concat(height - (columns.length ? mergedConfig.headerHeight : 0), \"px\")\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }\n  }, rows.map(function (row, ri) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row-item\",\n      key: row.toString() + row.scroll,\n      style: {\n        height: \"\".concat(heights[ri], \"px\"),\n        lineHeight: \"\".concat(heights[ri], \"px\"),\n        backgroundColor: \"\".concat(getBackgroundColor(row.rowIndex))\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 13\n      }\n    }, row.cell.map(function (ceil, ci) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ceil\",\n        key: ceil + ri + ci,\n        style: {\n          width: \"\".concat(widths[ci], \"px\")\n        },\n        align: aligns[ci],\n        dangerouslySetInnerHTML: {\n          __html: ceil\n        },\n        onClick: function onClick() {\n          return emitEvent(_onClick, ri, ci, row, ceil);\n        },\n        onMouseEnter: function onMouseEnter() {\n          return handleHover(true, ri, ci, row, ceil);\n        },\n        onMouseLeave: function onMouseLeave() {\n          return handleHover(false);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 17\n        }\n      });\n    }));\n  })));\n});\nScrollRankPanel.propTypes = {\n  config: PropTypes.object,\n  onClick: PropTypes.func,\n  onMouseOver: PropTypes.func,\n  className: PropTypes.string,\n  style: PropTypes.object\n};\n\nvar VScrollPanel = function VScrollPanel(_ref6) {\n  var options = _ref6.options,\n      schema = _ref6.schema;\n  var data = schema.data;\n  var option = useMemo(function () {\n    return _objectSpread(_objectSpread({}, options), data);\n  }, [options, data]);\n  return /*#__PURE__*/React.createElement(ScrollRankPanel, {\n    config: option,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default VScrollPanel;","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/Primitives/src/materials/scroll-panel/index.js"],"names":["React","useEffect","useState","useRef","forwardRef","useMemo","PropTypes","useAutoResize","defaultConfig","columns","rows","rowNum","headerBGC","oddRowBGC","evenRowBGC","waitTime","headerHeight","columnWidth","align","index","indexHeader","carousel","hoverPause","interceptor","gen","destroyed","stop","next","Promise","resolve","then","end","return","pause","resume","ret","done","value","calcHeaderData","length","unshift","name","calcRows","map","row","i","indexTag","cell","rowIndex","rowLength","d","scroll","calcAligns","mergedConfig","columnNum","aligns","Array","fill","ScrollRankPanel","ref","animation","onClick","config","style","onMouseOver","width","height","domRef","widths","heights","state","setState","stateRef","rowsData","avgHeight","animationIndex","Object","assign","current","onResize","calcWidths","calcHeights","calcData","data","usedWidth","reduce","all","w","avgWidth","allHeight","start","setTimeout","animationNum","slice","push","back","newHeights","splice","emitEvent","handle","ri","ci","ceil","columnIndex","handleHover","enter","task","getBackgroundColor","loop","backgroundColor","headerItem","lineHeight","__html","toString","propTypes","object","func","className","string","VScrollPanel","options","schema","option"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef, forwardRef, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useAutoResize } from \"~common/hooks\";\n\nconst defaultConfig = {\n  columns: [],\n  rows: [],\n  rowNum: 5,\n  headerBGC: \"#00BAFF\",\n  oddRowBGC: \"#003B51\",\n  evenRowBGC: \"#0A2732\",\n  waitTime: 2000,\n  headerHeight: 35,\n  columnWidth: [],\n  align: [],\n  index: false,\n  indexHeader: \"#\",\n  carousel: \"single\",\n  hoverPause: true\n};\n\nfunction interceptor(gen) {\n  let destroyed = false;\n\n  // 处理 return 之后 resume 的问题\n  let stop = false;\n\n  if (typeof gen === \"function\") gen = gen();\n\n  if (!gen || typeof gen.next !== \"function\") return () => ({});\n\n  Promise.resolve().then(() => {\n    destroyed || next(gen.next());\n  });\n\n  return {\n    end() {\n      destroyed = true;\n\n      Promise.resolve().then(() => {\n        gen.return();\n\n        gen = null;\n      });\n    },\n    pause() {\n      if (!destroyed) {\n        stop = true;\n      }\n    },\n    resume() {\n      Promise.resolve().then(() => {\n        if (!destroyed && stop) {\n          stop = false;\n\n          next(gen.next());\n        }\n      });\n    }\n  };\n\n  function next(ret) {\n    if (ret.done) return ret.value;\n\n    return Promise.resolve(ret.value).then(() => {\n      !destroyed && !stop && next(gen.next());\n    });\n  }\n}\n\nfunction calcHeaderData({ columns, index, indexHeader }) {\n  if (!columns.length) {\n    return [];\n  }\n\n  columns = [...columns];\n\n  if (index)\n    columns.unshift({\n      name: indexHeader,\n      index: -1\n    });\n\n  return columns;\n}\n\nfunction calcRows({ rows, index, headerBGC, rowNum }) {\n  if (index) {\n    rows = rows.map((row, i) => {\n      row = [...row];\n\n      const indexTag = `<span class=\"index\" style=\"background-color: ${headerBGC};\">${i + 1}</span>`;\n\n      row.unshift(indexTag);\n\n      return row;\n    });\n  }\n\n  rows = rows.map((cell, i) => ({ cell, rowIndex: i }));\n\n  const rowLength = rows.length;\n\n  if (rowLength > rowNum && rowLength < 2 * rowNum) {\n    rows = [...rows, ...rows];\n  }\n\n  return rows.map((d, i) => ({ ...d, scroll: i }));\n}\n\nfunction calcAligns(mergedConfig, columns) {\n  const columnNum = columns.length;\n\n  let aligns = new Array(columnNum).fill(\"left\");\n\n  const { align } = mergedConfig;\n\n  return { ...aligns, ...align };\n}\n\nconst ScrollRankPanel = forwardRef(({ onClick, config = {}, style, onMouseOver }, ref) => {\n  const { width, height, domRef } = useAutoResize(ref);\n\n  const [state, setState] = useState({\n    mergedConfig: null,\n    columns: [],\n    rows: [],\n    widths: [],\n    heights: [],\n    aligns: []\n  });\n\n  const { mergedConfig, columns, rows, widths, heights, aligns } = state;\n\n  const stateRef = useRef({\n    ...state,\n    rowsData: [],\n    avgHeight: 0,\n    animationIndex: 0\n  });\n\n  Object.assign(stateRef.current, state);\n\n  function onResize() {\n    if (!mergedConfig) return;\n\n    const widths = calcWidths(mergedConfig, stateRef.current.rowsData);\n\n    const heights = calcHeights(mergedConfig, columns);\n\n    const rows = { widths, heights };\n\n    Object.assign(stateRef.current, rows);\n    setState((state) => ({ ...state, ...rows }));\n  }\n\n  function calcData() {\n    const mergedConfig = { ...defaultConfig, ...config };\n\n    const columns = calcHeaderData(mergedConfig);\n\n    const rows = calcRows(mergedConfig);\n\n    const widths = calcWidths(mergedConfig, stateRef.current.rowsData);\n\n    const heights = calcHeights(mergedConfig, columns);\n\n    const aligns = calcAligns(mergedConfig, columns);\n\n    const data = {\n      mergedConfig,\n      columns,\n      rows,\n      widths,\n      aligns,\n      heights\n    };\n\n    Object.assign(stateRef.current, data, {\n      rowsData: rows,\n      animationIndex: 0\n    });\n\n    setState((state) => ({ ...state, ...data }));\n  }\n\n  function calcWidths({ columnWidth, columns }, rowsData) {\n    const usedWidth = columnWidth.reduce((all, w) => all + w, 0);\n\n    let columnNum = 0;\n    if (rowsData[0]) {\n      columnNum = rowsData[0].cell.length;\n    } else if (columns.length) {\n      columnNum = columns.length;\n    }\n\n    const avgWidth = (width - usedWidth) / (columnNum - columnWidth.length);\n\n    const widths = new Array(columnNum).fill(avgWidth);\n\n    return { ...widths, ...columnWidth };\n  }\n\n  function calcHeights({ headerHeight, rowNum, rows }, columns) {\n    let allHeight = height;\n\n    if (columns.length) allHeight -= headerHeight;\n\n    const avgHeight = allHeight / rowNum;\n\n    Object.assign(stateRef.current, { avgHeight });\n\n    return new Array(rows.length).fill(avgHeight);\n  }\n\n  function* animation(start = false) {\n    let {\n      avgHeight,\n      animationIndex,\n      mergedConfig: { waitTime, carousel, rowNum },\n      rowsData\n    } = stateRef.current;\n\n    const rowLength = rowsData.length;\n\n    if (start) yield new Promise((resolve) => setTimeout(resolve, waitTime));\n\n    const animationNum = carousel === \"single\" ? 1 : rowNum;\n\n    let rows = rowsData.slice(animationIndex);\n    rows.push(...rowsData.slice(0, animationIndex));\n\n    const heights = new Array(rowLength).fill(avgHeight);\n    setState((state) => ({ ...state, rows, heights }));\n\n    yield new Promise((resolve) => setTimeout(resolve, 300));\n\n    animationIndex += animationNum;\n\n    const back = animationIndex - rowLength;\n    if (back >= 0) animationIndex = back;\n\n    const newHeights = [...heights];\n    newHeights.splice(0, animationNum, ...new Array(animationNum).fill(0));\n\n    Object.assign(stateRef.current, { animationIndex });\n    setState((state) => ({ ...state, heights: newHeights }));\n  }\n\n  function emitEvent(handle, ri, ci, row, ceil) {\n    const { cell, rowIndex } = row;\n\n    handle && handle({ row: cell, ceil, rowIndex, columnIndex: ci });\n  }\n\n  function handleHover(enter, ri, ci, row, ceil) {\n    if (enter) emitEvent(onMouseOver, ri, ci, row, ceil);\n\n    if (!mergedConfig.hoverPause) return;\n\n    if (enter) {\n      task.pause && task.pause();\n    } else {\n      task.resume && task.resume();\n    }\n  }\n\n  const getBackgroundColor = (rowIndex) => mergedConfig[rowIndex % 2 === 0 ? \"evenRowBGC\" : \"oddRowBGC\"];\n\n  let task = {};\n\n  useEffect(() => {\n    calcData();\n\n    let start = true;\n\n    function* loop() {\n      while (true) {\n        yield* animation(start);\n\n        start = false;\n\n        const { waitTime } = stateRef.current.mergedConfig;\n\n        yield new Promise((resolve) => setTimeout(resolve, waitTime - 300));\n      }\n    }\n\n    const {\n      mergedConfig: { rowNum },\n      rows: rowsData\n    } = stateRef.current;\n\n    const rowLength = rowsData.length;\n\n    if (rowNum >= rowLength) return;\n\n    task = interceptor(loop);\n\n    return task.end;\n  }, [config, domRef.current]);\n\n  useEffect(onResize, [width, height, domRef.current]);\n\n  return (\n    <div className=\"gc-scroll-board\" style={style} ref={domRef}>\n      {!!columns.length && !!mergedConfig && (\n        <div className=\"header\" style={{ backgroundColor: `${mergedConfig.headerBGC}` }}>\n          {columns.map((headerItem, i) => (\n            <div\n              className=\"header-item\"\n              key={headerItem + i}\n              style={{\n                height: `${mergedConfig.headerHeight}px`,\n                lineHeight: `${mergedConfig.headerHeight}px`,\n                width: `${widths[i]}px`\n              }}\n              align={aligns[i]}\n              dangerouslySetInnerHTML={{ __html: headerItem.name }}\n            />\n          ))}\n        </div>\n      )}\n\n      {!!mergedConfig && (\n        <div\n          className=\"rows\"\n          style={{\n            height: `${height - (columns.length ? mergedConfig.headerHeight : 0)}px`\n          }}\n        >\n          {rows.map((row, ri) => (\n            <div\n              className=\"row-item\"\n              key={row.toString() + row.scroll}\n              style={{\n                height: `${heights[ri]}px`,\n                lineHeight: `${heights[ri]}px`,\n                backgroundColor: `${getBackgroundColor(row.rowIndex)}`\n              }}\n            >\n              {row.cell.map((ceil, ci) => (\n                <div\n                  className=\"ceil\"\n                  key={ceil + ri + ci}\n                  style={{ width: `${widths[ci]}px` }}\n                  align={aligns[ci]}\n                  dangerouslySetInnerHTML={{ __html: ceil }}\n                  onClick={() => emitEvent(onClick, ri, ci, row, ceil)}\n                  onMouseEnter={() => handleHover(true, ri, ci, row, ceil)}\n                  onMouseLeave={() => handleHover(false)}\n                />\n              ))}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n});\n\nScrollRankPanel.propTypes = {\n  config: PropTypes.object,\n  onClick: PropTypes.func,\n  onMouseOver: PropTypes.func,\n  className: PropTypes.string,\n  style: PropTypes.object\n};\n\nconst VScrollPanel = ({ options, schema }) => {\n  const { data } = schema;\n\n  const option = useMemo(() => {\n    return {\n      ...options,\n      ...data\n    };\n  }, [options, data]);\n\n  return <ScrollRankPanel config={option} />;\n};\n\nexport default VScrollPanel;\n"]},"metadata":{},"sourceType":"module"}
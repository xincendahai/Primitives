{"ast":null,"code":"import echarts from \"echarts\";\nimport { DEFAULT_COLORS } from \"~materials/constants\";\n\nfunction convertData(data, config) {\n  return data.reduce(function (arr, val) {\n    var geoCoord = config[val.name];\n\n    if (geoCoord) {\n      arr.push({\n        name: val.name,\n        value: geoCoord.concat(val.value)\n      });\n    }\n\n    return arr;\n  }, []);\n}\n\nexport default function getOptions(option, data) {\n  var _data$series = data.series,\n      series = _data$series === void 0 ? [] : _data$series;\n  var labelTextColor = option.labelTextColor,\n      showAreaName = option.showAreaName,\n      scaleMap = option.scaleMap,\n      provinces = option.provinces,\n      areaColor = option.areaColor,\n      borderColor = option.borderColor,\n      itemColor = option.itemColor;\n\n  var mapJson = require(\"echarts/map/json/province/\".concat(provinces, \".json\"));\n\n  echarts.registerMap(provinces, mapJson);\n  var geoCoordMap = {};\n  mapJson.features.forEach(function (item) {\n    geoCoordMap[item.properties.name] = item.properties.cp;\n  });\n  return {\n    tooltip: {\n      trigger: \"item\"\n    },\n    legend: {\n      orient: \"vertical\",\n      top: \"top\",\n      left: \"right\",\n      data: [\"credit_pm2.5\"],\n      textStyle: {\n        color: \"#fff\"\n      }\n    },\n    visualMap: {\n      show: false,\n      x: \"left\",\n      y: \"center\",\n      seriesIndex: [1],\n      min: 70,\n      max: 90,\n      text: [\"高\", \"低\"],\n      textStyle: {\n        color: \"#fff\"\n      },\n      inRange: {\n        color: DEFAULT_COLORS\n      }\n    },\n    geo: {\n      map: provinces,\n      roam: scaleMap,\n      itemStyle: {\n        color: \"#fff\",\n        normal: {\n          label: {\n            show: true,\n            textStyle: {\n              color: \"#ff0\"\n            }\n          },\n          borderWidth: 1,\n          borderColor: \"rgba(37,124,169)\",\n          shadowColor: \"#e8e8e8\",\n          shadowOffsetY: 15,\n          shadowOffsetX: 8\n        }\n      }\n    },\n    series: [{\n      type: \"effectScatter\",\n      left: \"150\",\n      coordinateSystem: \"geo\",\n      data: convertData(series, geoCoordMap),\n      symbolSize: function symbolSize(val) {\n        return val[2] / 5;\n      },\n      showEffectOn: \"render\",\n      rippleEffect: {\n        brushType: \"stroke\"\n      },\n      hoverAnimation: true,\n      label: {\n        normal: {\n          formatter: \"{b}\",\n          position: \"bottom\",\n          color: labelTextColor,\n          show: showAreaName\n        }\n      },\n      itemStyle: {\n        normal: {\n          color: itemColor,\n          shadowBlur: 0,\n          shadowColor: \"#05C3F9\"\n        }\n      },\n      zlevel: 1\n    }, {\n      type: \"map\",\n      mapType: provinces,\n      roam: false,\n      itemStyle: {\n        normal: {\n          label: {\n            show: true,\n            textStyle: {\n              color: \"transparent\"\n            }\n          },\n          borderWidth: 1,\n          borderColor: borderColor,\n          areaColor: areaColor\n        },\n        emphasis: {\n          label: {\n            show: false,\n            textStyle: {\n              color: \"transparent\"\n            }\n          },\n          borderColor: \"#28729f\",\n          areaColor: \"#9ea9f7\"\n        }\n      },\n      data: series\n    }]\n  };\n}","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/图元/react-visual-data/src/materials/vcharts/options/mapcity.js"],"names":["echarts","DEFAULT_COLORS","convertData","data","config","reduce","arr","val","geoCoord","name","push","value","concat","getOptions","option","series","labelTextColor","showAreaName","scaleMap","provinces","areaColor","borderColor","itemColor","mapJson","require","registerMap","geoCoordMap","features","forEach","item","properties","cp","tooltip","trigger","legend","orient","top","left","textStyle","color","visualMap","show","x","y","seriesIndex","min","max","text","inRange","geo","map","roam","itemStyle","normal","label","borderWidth","shadowColor","shadowOffsetY","shadowOffsetX","type","coordinateSystem","symbolSize","showEffectOn","rippleEffect","brushType","hoverAnimation","formatter","position","shadowBlur","zlevel","mapType","emphasis"],"mappings":"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","sourcesContent":["import echarts from \"echarts\";\nimport { DEFAULT_COLORS } from \"~materials/constants\";\n\nfunction convertData(data, config) {\n  return data.reduce((arr, val) => {\n    const geoCoord = config[val.name];\n    if (geoCoord) {\n      arr.push({\n        name: val.name,\n        value: geoCoord.concat(val.value)\n      });\n    }\n    return arr;\n  }, []);\n}\n\nexport default function getOptions(option, data) {\n  const { series = [] } = data;\n  const { labelTextColor, showAreaName, scaleMap, provinces, areaColor, borderColor, itemColor } = option;\n\n  let mapJson = require(`echarts/map/json/province/${provinces}.json`);\n\n  echarts.registerMap(provinces, mapJson);\n\n  let geoCoordMap = {};\n\n  mapJson.features.forEach((item) => {\n    geoCoordMap[item.properties.name] = item.properties.cp;\n  });\n\n  return {\n    tooltip: {\n      trigger: \"item\"\n    },\n    legend: {\n      orient: \"vertical\",\n      top: \"top\",\n      left: \"right\",\n      data: [\"credit_pm2.5\"],\n      textStyle: {\n        color: \"#fff\"\n      }\n    },\n    visualMap: {\n      show: false,\n      x: \"left\",\n      y: \"center\",\n      seriesIndex: [1],\n      min: 70,\n      max: 90,\n      text: [\"高\", \"低\"],\n      textStyle: {\n        color: \"#fff\"\n      },\n      inRange: {\n        color: DEFAULT_COLORS\n      }\n    },\n    geo: {\n      map: provinces,\n      roam: scaleMap,\n      itemStyle: {\n        color: \"#fff\",\n        normal: {\n          label: {\n            show: true,\n            textStyle: {\n              color: \"#ff0\"\n            }\n          },\n          borderWidth: 1,\n          borderColor: \"rgba(37,124,169)\",\n          shadowColor: \"#e8e8e8\",\n          shadowOffsetY: 15,\n          shadowOffsetX: 8\n        }\n      }\n    },\n    series: [\n      {\n        type: \"effectScatter\",\n        left: \"150\",\n        coordinateSystem: \"geo\",\n        data: convertData(series, geoCoordMap),\n        symbolSize: function (val) {\n          return val[2] / 5;\n        },\n        showEffectOn: \"render\",\n        rippleEffect: {\n          brushType: \"stroke\"\n        },\n        hoverAnimation: true,\n        label: {\n          normal: {\n            formatter: \"{b}\",\n            position: \"bottom\",\n            color: labelTextColor,\n            show: showAreaName\n          }\n        },\n        itemStyle: {\n          normal: {\n            color: itemColor,\n            shadowBlur: 0,\n            shadowColor: \"#05C3F9\"\n          }\n        },\n        zlevel: 1\n      },\n      {\n        type: \"map\",\n        mapType: provinces,\n        roam: false,\n        itemStyle: {\n          normal: {\n            label: {\n              show: true,\n              textStyle: {\n                color: \"transparent\"\n              }\n            },\n            borderWidth: 1,\n            borderColor: borderColor,\n            areaColor: areaColor\n          },\n          emphasis: {\n            label: {\n              show: false,\n              textStyle: {\n                color: \"transparent\"\n              }\n            },\n            borderColor: \"#28729f\",\n            areaColor: \"#9ea9f7\"\n          }\n        },\n        data: series\n      }\n    ]\n  };\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"/Users/xiangmingxin/Wicrecend/Primitives/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { DEFAULT_COLORS } from \"~materials/constants\";\nexport default function getOptions(option, data) {\n  var series = data.series;\n  var _option$sortType = option.sortType,\n      sortType = _option$sortType === void 0 ? \"pie\" : _option$sortType,\n      _option$isRoseType = option.isRoseType,\n      isRoseType = _option$isRoseType === void 0 ? false : _option$isRoseType,\n      _option$legendDirecti = option.legendDirection,\n      legendDirection = _option$legendDirecti === void 0 ? \"horizontal\" : _option$legendDirecti,\n      _option$innerFontColo = option.innerFontColor,\n      innerFontColor = _option$innerFontColo === void 0 ? \"#FFFFFF\" : _option$innerFontColo,\n      _option$outerFontColo = option.outerFontColor,\n      outerFontColor = _option$outerFontColo === void 0 ? \"#bcc9d4\" : _option$outerFontColo,\n      _option$innerFontSize = option.innerFontSize,\n      innerFontSize = _option$innerFontSize === void 0 ? 10 : _option$innerFontSize,\n      _option$outerFontSize = option.outerFontSize,\n      outerFontSize = _option$outerFontSize === void 0 ? 10 : _option$outerFontSize,\n      _option$showLegend = option.showLegend,\n      showLegend = _option$showLegend === void 0 ? true : _option$showLegend,\n      _option$showLabel = option.showLabel,\n      showLabel = _option$showLabel === void 0 ? true : _option$showLabel,\n      _option$isCirclePie = option.isCirclePie,\n      isCirclePie = _option$isCirclePie === void 0 ? false : _option$isCirclePie,\n      _option$labelLineWidt = option.labelLineWidth,\n      labelLineWidth = _option$labelLineWidt === void 0 ? 1 : _option$labelLineWidt,\n      _option$labelLineLeng = option.labelLineLength,\n      labelLineLength = _option$labelLineLeng === void 0 ? 20 : _option$labelLineLeng,\n      _option$labelLineLeng2 = option.labelLineLength2,\n      labelLineLength2 = _option$labelLineLeng2 === void 0 ? 30 : _option$labelLineLeng2,\n      _option$swiperTimer = option.swiperTimer,\n      swiperTimer = _option$swiperTimer === void 0 ? 3 : _option$swiperTimer,\n      _option$unit = option.unit,\n      unit = _option$unit === void 0 ? \"\" : _option$unit;\n  var options, callback, recordTimeInterval; // 默认配置项\n\n  if (sortType === \"pie\") {\n    options = {\n      color: DEFAULT_COLORS,\n      grid: {\n        left: 15,\n        right: 20,\n        bottom: 30,\n        containLabel: true\n      },\n      tooltip: {\n        trigger: \"item\",\n        formatter: function formatter(params) {\n          return [params.marker + params.name + \"：\" + (params.value || 0) + unit].join(\"\");\n        }\n      },\n      legend: {\n        show: showLegend,\n        type: \"scroll\",\n        top: 0,\n        orient: legendDirection,\n        textStyle: {\n          fontSize: 12\n        },\n        data: series.map(function (item) {\n          return item.name;\n        })\n      },\n      series: [{\n        type: \"pie\",\n        radius: isCirclePie ? [\"40%\", \"55%\"] : [\"0%\", \"55%\"],\n        roseType: isRoseType === true ? \"radius\" : undefined,\n        center: [\"50%\", \"50%\"],\n        clockwise: true,\n        avoidLabelOverlap: true,\n        hoverOffset: 15,\n        itemStyle: {\n          normal: {}\n        },\n        label: {\n          show: showLabel,\n          position: \"outside\",\n          formatter: \"{a|{b}：{d}%}\\n{hr|}\",\n          rich: {\n            hr: {\n              borderRadius: 3,\n              width: 3,\n              height: 3,\n              padding: [3, 3, 0, -12]\n            },\n            a: {\n              padding: [-30, 15, -20, 15]\n            }\n          }\n        },\n        labelLine: {\n          normal: {\n            show: showLabel,\n            length: labelLineLength,\n            length2: labelLineLength2,\n            lineStyle: {\n              width: labelLineWidth\n            }\n          }\n        },\n        data: series.map(function (item) {\n          return {\n            name: item.name,\n            value: item.data\n          };\n        })\n      }]\n    };\n  }\n\n  if (sortType === \"nestPie\") {\n    var legend1 = series.inner.map(function (v) {\n      return v.name;\n    });\n    var legend2 = series.outer.map(function (v) {\n      return v.name;\n    });\n    options = {\n      color: DEFAULT_COLORS,\n      grid: {\n        left: 15,\n        right: 20,\n        bottom: 30,\n        containLabel: true\n      },\n      tooltip: {\n        trigger: \"item\",\n        formatter: function formatter(params) {\n          return [params.marker + params.name + \"：\" + (params.value || 0) + unit].join(\"\");\n        }\n      },\n      legend: {\n        show: showLegend,\n        type: \"scroll\",\n        top: 0,\n        orient: legendDirection,\n        textStyle: {\n          fontSize: 12\n        },\n        data: [].concat(_toConsumableArray(legend1), _toConsumableArray(legend2))\n      },\n      series: [{\n        type: \"pie\",\n        radius: [0, \"35%\"],\n        itemStyle: {\n          normal: {\n            borderColor: \"#fff\",\n            borderWidth: 2,\n            innerFontColor: innerFontColor\n          }\n        },\n        label: {\n          normal: {\n            show: showLabel,\n            color: innerFontColor,\n            position: \"inner\",\n            fontSize: innerFontSize\n          }\n        },\n        labelLine: {\n          normal: {\n            show: false\n          }\n        },\n        data: series.inner\n      }, {\n        name: \"\",\n        type: \"pie\",\n        radius: [\"45%\", \"55%\"],\n        data: series.outer,\n        labelLine: {\n          normal: {\n            show: showLabel,\n            length: labelLineLength,\n            length2: labelLineLength2,\n            lineStyle: {\n              width: labelLineWidth\n            }\n          }\n        },\n        label: {\n          normal: {\n            show: showLabel,\n            formatter: function formatter(params) {\n              return \"{icon|●}{name|\" + params.name + \"}{percent|\" + params.percent.toFixed(1) + \"%}{value|\" + params.value + \"}\";\n            },\n            padding: [0, -130, 25, -130],\n            rich: {\n              color: outerFontColor,\n              icon: {\n                fontSize: outerFontSize\n              },\n              name: {\n                fontSize: outerFontSize,\n                padding: [0, 5, 0, 5],\n                color: outerFontColor\n              },\n              percent: {\n                color: outerFontColor,\n                padding: [0, 5, 0, 0]\n              },\n              value: {\n                fontSize: outerFontSize,\n                fontWeight: \"bold\",\n                color: outerFontColor\n              }\n            }\n          }\n        }\n      }]\n    };\n  }\n\n  if (sortType === \"swiperPie\") {\n    options = {\n      color: DEFAULT_COLORS,\n      grid: {\n        left: 15,\n        right: 20,\n        bottom: 30,\n        containLabel: true\n      },\n      tooltip: {\n        trigger: \"item\",\n        formatter: function formatter(params) {\n          return [params.marker + (params.value || 0) + unit].join(\"\");\n        }\n      },\n      legend: {\n        show: showLegend,\n        type: \"scroll\",\n        top: 0,\n        orient: legendDirection,\n        textStyle: {\n          fontSize: 12\n        }\n      },\n      dataset: {\n        source: series\n      },\n      series: [{\n        type: \"pie\",\n        radius: [\"55%\", \"75%\"],\n        center: [\"50%\", \"50%\"],\n        seriesLayoutBy: \"row\",\n        label: {\n          show: showLabel,\n          formatter: \"{d}%\"\n        },\n        labelLine: {\n          normal: {\n            show: showLabel,\n            length: labelLineLength,\n            length2: labelLineLength2,\n            lineStyle: {\n              width: labelLineWidth\n            }\n          }\n        }\n      }, {\n        type: \"pie\",\n        avoidLabelOverlap: false,\n        label: {\n          show: false,\n          formatter: \"{b} \\n {d}\",\n          position: \"center\",\n          rich: {\n            d: {\n              fontSize: 14,\n              fontColor: \"#fffffff\",\n              fontWeight: \"normal\"\n            }\n          }\n        },\n        labelLine: {\n          normal: {\n            show: false\n          }\n        },\n        emphasis: {\n          label: {\n            show: true,\n            fontSize: 24,\n            fontWeight: \"bold\"\n          }\n        },\n        seriesLayoutBy: \"row\",\n        radius: isCirclePie ? [\"55%\", \"75%\"] : [\"0%\", \"50%\"],\n        center: [\"50%\", \"50%\"]\n      }]\n    };\n    var timer = 0;\n    var dot = options.dataset.source[1];\n\n    callback = function callback(echart) {\n      clearInterval(recordTimeInterval);\n      recordTimeInterval = setInterval(function () {\n        echart.dispatchAction({\n          type: \"downplay\",\n          seriesIndex: 1,\n          dataIndex: timer % dot.length\n        });\n        timer++;\n        echart.dispatchAction({\n          type: \"highlight\",\n          seriesIndex: 1,\n          dataIndex: timer % dot.length\n        });\n      }, swiperTimer * 1000);\n    };\n  }\n\n  return {\n    options: options,\n    callback: callback\n  };\n}","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/Primitives/src/materials/vcharts/options/pie.js"],"names":["DEFAULT_COLORS","getOptions","option","data","series","sortType","isRoseType","legendDirection","innerFontColor","outerFontColor","innerFontSize","outerFontSize","showLegend","showLabel","isCirclePie","labelLineWidth","labelLineLength","labelLineLength2","swiperTimer","unit","options","callback","recordTimeInterval","color","grid","left","right","bottom","containLabel","tooltip","trigger","formatter","params","marker","name","value","join","legend","show","type","top","orient","textStyle","fontSize","map","item","radius","roseType","undefined","center","clockwise","avoidLabelOverlap","hoverOffset","itemStyle","normal","label","position","rich","hr","borderRadius","width","height","padding","a","labelLine","length","length2","lineStyle","legend1","inner","v","legend2","outer","borderColor","borderWidth","percent","toFixed","icon","fontWeight","dataset","source","seriesLayoutBy","d","fontColor","emphasis","timer","dot","echart","clearInterval","setInterval","dispatchAction","seriesIndex","dataIndex"],"mappings":"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","sourcesContent":["import { DEFAULT_COLORS } from \"~materials/constants\";\n\nexport default function getOptions(option, data) {\n  const { series } = data;\n  const {\n    sortType = \"pie\",\n    isRoseType = false,\n    legendDirection = \"horizontal\",\n    innerFontColor = \"#FFFFFF\",\n    outerFontColor = \"#bcc9d4\",\n    innerFontSize = 10,\n    outerFontSize = 10,\n    showLegend = true,\n    showLabel = true,\n    isCirclePie = false,\n    labelLineWidth = 1,\n    labelLineLength = 20,\n    labelLineLength2 = 30,\n    swiperTimer = 3,\n    unit = \"\"\n  } = option;\n\n  let options, callback, recordTimeInterval;\n  // 默认配置项\n  if (sortType === \"pie\") {\n    options = {\n      color: DEFAULT_COLORS,\n      grid: {\n        left: 15,\n        right: 20,\n        bottom: 30,\n        containLabel: true\n      },\n      tooltip: {\n        trigger: \"item\",\n        formatter: function (params) {\n          return [params.marker + params.name + \"：\" + (params.value || 0) + unit].join(\"\");\n        }\n      },\n      legend: {\n        show: showLegend,\n        type: \"scroll\",\n        top: 0,\n        orient: legendDirection,\n        textStyle: {\n          fontSize: 12\n        },\n        data: series.map((item) => item.name)\n      },\n      series: [\n        {\n          type: \"pie\",\n          radius: isCirclePie ? [\"40%\", \"55%\"] : [\"0%\", \"55%\"],\n          roseType: isRoseType === true ? \"radius\" : undefined,\n          center: [\"50%\", \"50%\"],\n          clockwise: true,\n          avoidLabelOverlap: true,\n          hoverOffset: 15,\n          itemStyle: {\n            normal: {}\n          },\n          label: {\n            show: showLabel,\n            position: \"outside\",\n            formatter: \"{a|{b}：{d}%}\\n{hr|}\",\n            rich: {\n              hr: {\n                borderRadius: 3,\n                width: 3,\n                height: 3,\n                padding: [3, 3, 0, -12]\n              },\n              a: {\n                padding: [-30, 15, -20, 15]\n              }\n            }\n          },\n          labelLine: {\n            normal: {\n              show: showLabel,\n              length: labelLineLength,\n              length2: labelLineLength2,\n              lineStyle: {\n                width: labelLineWidth\n              }\n            }\n          },\n          data: series.map((item) => {\n            return {\n              name: item.name,\n              value: item.data\n            };\n          })\n        }\n      ]\n    };\n  }\n\n  if (sortType === \"nestPie\") {\n    let legend1 = series.inner.map((v) => v.name);\n    let legend2 = series.outer.map((v) => v.name);\n\n    options = {\n      color: DEFAULT_COLORS,\n      grid: {\n        left: 15,\n        right: 20,\n        bottom: 30,\n        containLabel: true\n      },\n      tooltip: {\n        trigger: \"item\",\n        formatter: function (params) {\n          return [params.marker + params.name + \"：\" + (params.value || 0) + unit].join(\"\");\n        }\n      },\n      legend: {\n        show: showLegend,\n        type: \"scroll\",\n        top: 0,\n        orient: legendDirection,\n        textStyle: {\n          fontSize: 12\n        },\n        data: [...legend1, ...legend2]\n      },\n      series: [\n        {\n          type: \"pie\",\n          radius: [0, \"35%\"],\n          itemStyle: {\n            normal: {\n              borderColor: \"#fff\",\n              borderWidth: 2,\n              innerFontColor\n            }\n          },\n          label: {\n            normal: {\n              show: showLabel,\n              color: innerFontColor,\n              position: \"inner\",\n              fontSize: innerFontSize\n            }\n          },\n          labelLine: {\n            normal: {\n              show: false\n            }\n          },\n          data: series.inner\n        },\n        {\n          name: \"\",\n          type: \"pie\",\n          radius: [\"45%\", \"55%\"],\n          data: series.outer,\n          labelLine: {\n            normal: {\n              show: showLabel,\n              length: labelLineLength,\n              length2: labelLineLength2,\n              lineStyle: {\n                width: labelLineWidth\n              }\n            }\n          },\n          label: {\n            normal: {\n              show: showLabel,\n              formatter: (params) => {\n                return (\n                  \"{icon|●}{name|\" +\n                  params.name +\n                  \"}{percent|\" +\n                  params.percent.toFixed(1) +\n                  \"%}{value|\" +\n                  params.value +\n                  \"}\"\n                );\n              },\n              padding: [0, -130, 25, -130],\n              rich: {\n                color: outerFontColor,\n                icon: {\n                  fontSize: outerFontSize\n                },\n                name: {\n                  fontSize: outerFontSize,\n                  padding: [0, 5, 0, 5],\n                  color: outerFontColor\n                },\n                percent: {\n                  color: outerFontColor,\n                  padding: [0, 5, 0, 0]\n                },\n                value: {\n                  fontSize: outerFontSize,\n                  fontWeight: \"bold\",\n                  color: outerFontColor\n                }\n              }\n            }\n          }\n        }\n      ]\n    };\n  }\n\n  if (sortType === \"swiperPie\") {\n    options = {\n      color: DEFAULT_COLORS,\n      grid: {\n        left: 15,\n        right: 20,\n        bottom: 30,\n        containLabel: true\n      },\n      tooltip: {\n        trigger: \"item\",\n        formatter: function (params) {\n          return [params.marker + (params.value || 0) + unit].join(\"\");\n        }\n      },\n      legend: {\n        show: showLegend,\n        type: \"scroll\",\n        top: 0,\n        orient: legendDirection,\n        textStyle: {\n          fontSize: 12\n        }\n      },\n      dataset: {\n        source: series\n      },\n      series: [\n        {\n          type: \"pie\",\n          radius: [\"55%\", \"75%\"],\n          center: [\"50%\", \"50%\"],\n          seriesLayoutBy: \"row\",\n          label: {\n            show: showLabel,\n            formatter: \"{d}%\"\n          },\n          labelLine: {\n            normal: {\n              show: showLabel,\n              length: labelLineLength,\n              length2: labelLineLength2,\n              lineStyle: {\n                width: labelLineWidth\n              }\n            }\n          }\n        },\n        {\n          type: \"pie\",\n          avoidLabelOverlap: false,\n          label: {\n            show: false,\n            formatter: \"{b} \\n {d}\",\n            position: \"center\",\n            rich: {\n              d: {\n                fontSize: 14,\n                fontColor: \"#fffffff\",\n                fontWeight: \"normal\"\n              }\n            }\n          },\n          labelLine: {\n            normal: {\n              show: false\n            }\n          },\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: 24,\n              fontWeight: \"bold\"\n            }\n          },\n          seriesLayoutBy: \"row\",\n          radius: isCirclePie ? [\"55%\", \"75%\"] : [\"0%\", \"50%\"],\n          center: [\"50%\", \"50%\"]\n        }\n      ]\n    };\n\n    let timer = 0;\n    let dot = options.dataset.source[1];\n\n    callback = (echart) => {\n      clearInterval(recordTimeInterval);\n      recordTimeInterval = setInterval(() => {\n        echart.dispatchAction({\n          type: \"downplay\",\n          seriesIndex: 1,\n          dataIndex: timer % dot.length\n        });\n\n        timer++;\n\n        echart.dispatchAction({\n          type: \"highlight\",\n          seriesIndex: 1,\n          dataIndex: timer % dot.length\n        });\n      }, swiperTimer * 1000);\n    };\n  }\n\n  return {\n    options,\n    callback\n  };\n}\n"]},"metadata":{},"sourceType":"module"}
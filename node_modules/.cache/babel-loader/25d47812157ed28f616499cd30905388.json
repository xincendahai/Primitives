{"ast":null,"code":"import _regeneratorRuntime from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/xiangmingxin/Wicrecend/\\u56FE\\u5143/react-visual-data/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * 通用的辅助工具方法\n * @module 通用工具方法\n * */\n// 获取数据类型\nexport function toRawType(value) {\n  var _toString = Object.prototype.toString;\n  return _toString.call(value).slice(8, -1);\n} // 文件下载\n\nexport function downFile(data, name) {\n  var saveLink = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\");\n  saveLink.href = data;\n  saveLink.download = name;\n  var event = document.createEvent(\"MouseEvents\");\n  event.initMouseEvent(\"click\", true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n  saveLink.dispatchEvent(event);\n} // base64文件转码\n\nexport function dataURLtoFile(dataurl, filename) {\n  var arr = dataurl.split(\",\");\n  var mine = arr[0].match(/:(.*?);/)[1];\n  var bstr = atob(arr[1]);\n  var n = bstr.length;\n  var u8arr = new Uint8Array(n);\n\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n\n  return new File([u8arr], filename, {\n    type: mine\n  });\n}\n/**\n * @param {Array} 不同数组，取并集name\n */\n\nexport function array2Equal(arr1, arr2) {\n  return arr1.concat(arr2.filter(function (val) {\n    return !arr1.includes(val.name);\n  }));\n} // 判断是否为空\n\nexport function isEmpty(value) {\n  if (value === null || value === undefined) {\n    return true;\n  }\n\n  if (Array.isArray(value) || toRawType(value) === \"String\" || value instanceof String) {\n    return value.length === 0;\n  }\n\n  if (value instanceof Map || value instanceof Set) {\n    return value.size === 0;\n  }\n\n  if (toRawType(value) === \"Object\") {\n    return Object.keys(value).length === 0;\n  }\n\n  return false;\n} //  用于显示 html 文本\n\nexport function escapeHtml(value) {\n  var entityMap = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    '\"': \"&quot;\",\n    \"'\": \"&#39;\",\n    \"/\": \"&#x2F;\"\n  };\n  return String(value).replace(/[&<>\"'\\/]/g, function (s) {\n    return entityMap[s];\n  });\n} // 小数值转百分比\n\nexport function percent(value) {\n  var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  value = parseFloat(value) || 0;\n  decimals = parseInt(decimals, 10) || 0;\n  var whole = value * 100;\n  var multiplier = Math.pow(10, decimals);\n  return (Math.round(whole * multiplier) / multiplier).toFixed(decimals) + \"%\";\n} // 四舍五入取整\n\nexport function round(value) {\n  var _parseInt;\n\n  var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  if (isNaN(value)) {\n    return 0;\n  }\n\n  decimals = (_parseInt = parseInt(decimals, 10)) !== null && _parseInt !== void 0 ? _parseInt : 2;\n  var multiplier = Math.pow(10, decimals);\n  multiplier = (Math.round(value * multiplier) / multiplier).toFixed(decimals);\n  return parseFloat(multiplier);\n} // 自动给数字加千分位\n\nexport function thousand(value) {\n  var parts = String(value).split(\".\");\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  return parts.join(\".\");\n} // 当超出若干个字符时，后面的部分直接显示某串字符(ps: 常用于文字限制切分)\n\nexport function truncate(value, length, end) {\n  end = end || \"...\";\n\n  if (length == null) {\n    return value;\n  }\n\n  length = parseInt(length, 10) || 200;\n  return value.substring(0, length) + (value.length > length ? end : \"\");\n}\n/**\n * 数组分割成多数组\n * @param  {[type]} target  要分割的数组\n * @param  {[type]} size  每个数组的个数\n * @return {[type]}       返回一个数组\n */\n\nexport function chunk(target, size) {\n  var start = null,\n      end = null,\n      result = [];\n\n  for (var i = 0; i < Math.ceil(target.length / size); i++) {\n    start = i * size;\n    end = start + size;\n    result.push(target.slice(start, end));\n  }\n\n  return result;\n} // 对象深度合并\n\nexport function deepMergeObj(obj1, obj2) {\n  if (toRawType(obj2) !== \"Object\") return obj1;\n\n  for (var _i = 0, _Object$entries = Object.entries(obj2); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        key = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n\n    obj1[key] = obj1[key] && toRawType(obj1[key]) === \"Object\" && value && toRawType(value) === \"Object\" ? deepMergeObj(obj1[key], value) : obj1[key] = value;\n  }\n\n  return obj1;\n} // 转化样式布局值\n\nexport function converLayout(value) {\n  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"100%\";\n\n  // 是否为数字 ex：\"222\"、222\n  function isLooselyNumber(num) {\n    if (toRawType(num) === \"Number\") return true;\n\n    if (toRawType(num) === \"String\") {\n      return !Number.isNaN(Number(num));\n    }\n\n    return false;\n  }\n\n  function isCssLength(str) {\n    if (typeof str !== \"string\") return false;\n    return str.match(/^([0-9])*(%|px|rem|em)$/i);\n  }\n\n  return isLooselyNumber(value) ? Number(value) : isCssLength(value) ? value : defaultValue;\n} // 拍平多维数组\n\nexport function flattenArray(target) {\n  var _ref;\n\n  var flattened = (_ref = []).concat.apply(_ref, _toConsumableArray(target));\n\n  return flattened.some(function (item) {\n    return Array.isArray(item);\n  }) ? flattenArray(flattened) : flattened;\n} // 获取base64格式文件\n\nexport function getBase64(file) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function () {\n      return resolve(reader.result);\n    };\n\n    reader.onerror = function (error) {\n      return reject(error);\n    };\n  });\n}\n/**\n * 图片压缩，接受一个options参数，具体参数如下：\n * @param {string} data 图片数据 FileReader readAsDataURL方法得到的数据\n * @param {string} [type='image/jpeg'] 处理完之后的图片类型\n * @param {Number} [quality=0.8] 图片压缩比例\n * @returns {Promise}\n */\n\nexport function compressImage(_ref2) {\n  var data = _ref2.data,\n      _ref2$type = _ref2.type,\n      type = _ref2$type === void 0 ? \"image/jpeg\" : _ref2$type,\n      _ref2$quality = _ref2.quality,\n      quality = _ref2$quality === void 0 ? 0.8 : _ref2$quality;\n  if (!data) return;\n  return new Promise(function (resolve, reject) {\n    var canvas = document.createElement(\"canvas\");\n    var img = new Image();\n\n    img.onload = function () {\n      img.width *= quality;\n      img.height *= quality;\n      var ctx = canvas.getContext(\"2d\");\n      canvas.width = img.width;\n      canvas.height = img.height; // canvas清屏\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // 将图像绘制到canvas上\n\n      ctx.drawImage(img, 0, 0, canvas.width, canvas.height); // 必须等压缩完才读取canvas值，否则canvas内容是黑帆布\n\n      resolve(canvas.toDataURL(type));\n    };\n\n    img.onerror = reject; // 记住必须先绑定事件，才能设置src属性，否则img没有内容可以画到canvas\n\n    img.src = data;\n  });\n}\n/**\n * 根据图片base64数据，获取图片文件实际大小，最终结果会有<3的偏差（比实际大1~3）\n * @param imageBase64Data\n * @returns {number}\n */\n\nexport function getImageSizeByBase64(imageBase64Data) {\n  var arr = imageBase64Data.split(\",\");\n  var base64Data = arr[1];\n  var fileSize = (base64Data.length - 3) * 3 / 4;\n  return parseInt(fileSize) + 3;\n}\n/**\n * 将图片大约压缩到指定大小以下\n * @param {string} data 图片数据 FileReader readAsDataURL方法得到的数据\n * @param {string} [type='image/jpeg'] 处理完之后的图片类型\n * @param {Number} [size=300 * 1024] 压缩后大小\n * @param {Number} [qualityStep=0.9] 每次压缩比，数值越大越精确，但是压缩时间越长\n * @returns {Promise}\n */\n\nexport function compressImageToSize(_ref3) {\n  var data = _ref3.data,\n      _ref3$type = _ref3.type,\n      type = _ref3$type === void 0 ? \"image/jpeg\" : _ref3$type,\n      _ref3$size = _ref3.size,\n      size = _ref3$size === void 0 ? 300 * 1000 : _ref3$size,\n      _ref3$qualityStep = _ref3.qualityStep,\n      qualityStep = _ref3$qualityStep === void 0 ? 0.9 : _ref3$qualityStep;\n\n  if (getImageSizeByBase64(data) < size) {\n    return Promise.resolve(data);\n  }\n\n  var loopCompress = function loopCompress(d) {\n    return compressImage({\n      data: d,\n      type: type,\n      quality: qualityStep\n    }).then(function (result) {\n      if (getImageSizeByBase64(result) < size) {\n        return Promise.resolve(result);\n      }\n\n      return loopCompress(result);\n    }, function (err) {\n      return Promise.reject(err);\n    });\n  };\n\n  return loopCompress(data);\n}\n\nfunction navigatorAgent(pattern) {\n  if (typeof window !== \"undefined\" && window.navigator) {\n    return !!navigator.userAgent.match(pattern);\n  }\n} // 获取当前浏览器内核\n\n\nexport var getNavigator = {\n  Edge: navigatorAgent(/Edge/i),\n  FireFox: navigatorAgent(/firefox/i),\n  Safari: navigatorAgent(/safari/i) && !navigatorAgent(/chrome/i) && !navigatorAgent(/android/i),\n  IOS: navigatorAgent(/iP(ad|od|hone)/i),\n  ChromeForAndroid: navigatorAgent(/chrome/i) && navigatorAgent(/android/i),\n  // Not needed on <= IE11\n  IE11OrLess: navigatorAgent(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i)\n}; // 限制在一定范围内的数字\n\nexport function range2Scope(maxOrStart) {\n  var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if (!end) {\n    return Array.from({\n      length: maxOrStart\n    }, function (_, i) {\n      return i;\n    });\n  }\n\n  if (end <= maxOrStart) {\n    return [];\n  }\n\n  if (step !== null) {\n    return Array.from({\n      length: Math.ceil((end - maxOrStart) / step)\n    }, function (_, i) {\n      return i * step + maxOrStart;\n    });\n  }\n\n  return Array.from({\n    length: Math.ceil(end - maxOrStart)\n  }, function (_, i) {\n    return i + maxOrStart;\n  });\n}\n/**\n * 将数值四舍五入后格式化成金额形式\n * @param num 数值(Number或者String)\n * @param options 可选参数\n * @param options.prefix 金钱前缀，默认为空，一般为 ￥ 或 $\n * @param options.decimalNum 保留小数点个数，默认为2 一般为 0 1 2\n * @param options.splitSymbol 格式化分割符，默认为英文逗号，分隔符必须是单字符\n * @return 金额格式的字符串,如'￥1,234,567.45'\n * @type String\n */\n\nexport function formatCurrency(num) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var decimalNum = options.decimalNum,\n      splitSymbol = options.splitSymbol;\n  var _options$prefix = options.prefix,\n      prefix = _options$prefix === void 0 ? \"￥\" : _options$prefix;\n  var centsPercent = 100;\n  if (splitSymbol === undefined) splitSymbol = \",\";\n  if (decimalNum !== 0 && decimalNum !== 1 && decimalNum !== 2) decimalNum = 2;\n  if (decimalNum === 0) centsPercent = 1;\n  if (decimalNum === 1) centsPercent = 10;\n  num = num.toString().replace(/\\$|,/g, \"\");\n  if (isNaN(num)) num = \"0\";\n  var sign = num === Math.abs(num).toString() ? \"\" : \"-\";\n  num = Math.abs(num);\n  num = Math.floor(num * centsPercent + 0.50000000001);\n  var cents = num % centsPercent;\n  num = Math.floor(num / centsPercent).toString();\n\n  if (cents < 10 && decimalNum === 2) {\n    cents = \"0\".concat(cents);\n  }\n\n  for (var i = 0; i < Math.floor((num.length - (1 + i)) / 3); i++) {\n    var endPosition = 4 * i + 3;\n    num = num.substring(0, num.length - endPosition) + splitSymbol + num.substring(num.length - endPosition);\n  }\n\n  if (decimalNum === 0) {\n    return prefix + sign + num;\n  }\n\n  return \"\".concat(prefix).concat(sign).concat(num, \".\").concat(cents);\n} // 轮询\n\nexport function poll(_x, _x2) {\n  return _poll.apply(this, arguments);\n}\n\nfunction _poll() {\n  _poll = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(fn, validate) {\n    var interval,\n        resolver,\n        _args2 = arguments;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            interval = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : 2500;\n\n            resolver = /*#__PURE__*/function () {\n              var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(resolve, reject) {\n                var result, valid;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.prev = 0;\n                        _context.next = 3;\n                        return fn();\n\n                      case 3:\n                        result = _context.sent;\n                        valid = validate(result);\n\n                        if (valid === true) {\n                          resolve(result);\n                        } else if (valid === false) {\n                          setTimeout(resolver, interval, resolve, reject);\n                        }\n\n                        _context.next = 11;\n                        break;\n\n                      case 8:\n                        _context.prev = 8;\n                        _context.t0 = _context[\"catch\"](0);\n                        reject(_context.t0);\n\n                      case 11:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee, null, [[0, 8]]);\n              }));\n\n              return function resolver(_x3, _x4) {\n                return _ref4.apply(this, arguments);\n              };\n            }();\n\n            return _context2.abrupt(\"return\", new Promise(resolver));\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _poll.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/xiangmingxin/Wicrecend/图元/react-visual-data/src/library/utils/helper.js"],"names":["toRawType","value","_toString","Object","prototype","toString","call","slice","downFile","data","name","saveLink","document","createElementNS","href","download","event","createEvent","initMouseEvent","window","dispatchEvent","dataURLtoFile","dataurl","filename","arr","split","mine","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type","array2Equal","arr1","arr2","concat","filter","val","includes","isEmpty","undefined","Array","isArray","String","Map","Set","size","keys","escapeHtml","entityMap","replace","s","percent","decimals","parseFloat","parseInt","whole","multiplier","Math","pow","round","toFixed","isNaN","thousand","parts","join","truncate","end","substring","chunk","target","start","result","i","ceil","push","deepMergeObj","obj1","obj2","entries","key","converLayout","defaultValue","isLooselyNumber","num","Number","isCssLength","str","flattenArray","flattened","some","item","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","error","compressImage","quality","canvas","createElement","img","Image","width","height","ctx","getContext","clearRect","drawImage","toDataURL","src","getImageSizeByBase64","imageBase64Data","base64Data","fileSize","compressImageToSize","qualityStep","loopCompress","d","then","err","navigatorAgent","pattern","navigator","userAgent","getNavigator","Edge","FireFox","Safari","IOS","ChromeForAndroid","IE11OrLess","range2Scope","maxOrStart","step","from","_","formatCurrency","options","decimalNum","splitSymbol","prefix","centsPercent","sign","abs","floor","cents","endPosition","poll","fn","validate","interval","resolver","valid","setTimeout"],"mappings":"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","sourcesContent":["/**\n * 通用的辅助工具方法\n * @module 通用工具方法\n * */\n// 获取数据类型\nexport function toRawType(value) {\n  const _toString = Object.prototype.toString;\n  return _toString.call(value).slice(8, -1);\n}\n\n// 文件下载\nexport function downFile(data, name) {\n  var saveLink = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\");\n  saveLink.href = data;\n  saveLink.download = name;\n  var event = document.createEvent(\"MouseEvents\");\n  event.initMouseEvent(\"click\", true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n  saveLink.dispatchEvent(event);\n}\n\n// base64文件转码\nexport function dataURLtoFile(dataurl, filename) {\n  let arr = dataurl.split(\",\");\n  let mine = arr[0].match(/:(.*?);/)[1];\n  let bstr = atob(arr[1]);\n  let n = bstr.length;\n  let u8arr = new Uint8Array(n);\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  return new File([u8arr], filename, {\n    type: mine\n  });\n}\n\n/**\n * @param {Array} 不同数组，取并集name\n */\nexport function array2Equal(arr1, arr2) {\n  return arr1.concat(arr2.filter((val) => !arr1.includes(val.name)));\n}\n\n// 判断是否为空\nexport function isEmpty(value) {\n  if (value === null || value === undefined) {\n    return true;\n  }\n\n  if (Array.isArray(value) || toRawType(value) === \"String\" || value instanceof String) {\n    return value.length === 0;\n  }\n\n  if (value instanceof Map || value instanceof Set) {\n    return value.size === 0;\n  }\n\n  if (toRawType(value) === \"Object\") {\n    return Object.keys(value).length === 0;\n  }\n\n  return false;\n}\n\n//  用于显示 html 文本\nexport function escapeHtml(value) {\n  const entityMap = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    '\"': \"&quot;\",\n    \"'\": \"&#39;\",\n    \"/\": \"&#x2F;\"\n  };\n  return String(value).replace(/[&<>\"'\\/]/g, function (s) {\n    return entityMap[s];\n  });\n}\n\n// 小数值转百分比\nexport function percent(value, decimals = 0) {\n  value = parseFloat(value) || 0;\n  decimals = parseInt(decimals, 10) || 0;\n\n  let whole = value * 100;\n  let multiplier = Math.pow(10, decimals);\n\n  return (Math.round(whole * multiplier) / multiplier).toFixed(decimals) + \"%\";\n}\n\n// 四舍五入取整\nexport function round(value, decimals = 0) {\n  if (isNaN(value)) {\n    return 0;\n  }\n\n  decimals = parseInt(decimals, 10) ?? 2;\n\n  let multiplier = Math.pow(10, decimals);\n  multiplier = (Math.round(value * multiplier) / multiplier).toFixed(decimals);\n  return parseFloat(multiplier);\n}\n\n// 自动给数字加千分位\nexport function thousand(value) {\n  let parts = String(value).split(\".\");\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  return parts.join(\".\");\n}\n\n// 当超出若干个字符时，后面的部分直接显示某串字符(ps: 常用于文字限制切分)\nexport function truncate(value, length, end) {\n  end = end || \"...\";\n\n  if (length == null) {\n    return value;\n  }\n\n  length = parseInt(length, 10) || 200;\n\n  return value.substring(0, length) + (value.length > length ? end : \"\");\n}\n\n/**\n * 数组分割成多数组\n * @param  {[type]} target  要分割的数组\n * @param  {[type]} size  每个数组的个数\n * @return {[type]}       返回一个数组\n */\nexport function chunk(target, size) {\n  let [start, end, result] = [null, null, []];\n  for (let i = 0; i < Math.ceil(target.length / size); i++) {\n    start = i * size;\n    end = start + size;\n    result.push(target.slice(start, end));\n  }\n  return result;\n}\n\n// 对象深度合并\nexport function deepMergeObj(obj1, obj2) {\n  if (toRawType(obj2) !== \"Object\") return obj1;\n\n  for (let [key, value] of Object.entries(obj2)) {\n    obj1[key] =\n      obj1[key] && toRawType(obj1[key]) === \"Object\" && value && toRawType(value) === \"Object\"\n        ? deepMergeObj(obj1[key], value)\n        : (obj1[key] = value);\n  }\n  return obj1;\n}\n\n// 转化样式布局值\nexport function converLayout(value, defaultValue = \"100%\") {\n  // 是否为数字 ex：\"222\"、222\n  function isLooselyNumber(num) {\n    if (toRawType(num) === \"Number\") return true;\n    if (toRawType(num) === \"String\") {\n      return !Number.isNaN(Number(num));\n    }\n    return false;\n  }\n\n  function isCssLength(str) {\n    if (typeof str !== \"string\") return false;\n    return str.match(/^([0-9])*(%|px|rem|em)$/i);\n  }\n  return isLooselyNumber(value) ? Number(value) : isCssLength(value) ? value : defaultValue;\n}\n\n// 拍平多维数组\nexport function flattenArray(target) {\n  const flattened = [].concat(...target);\n  return flattened.some((item) => Array.isArray(item)) ? flattenArray(flattened) : flattened;\n}\n\n// 获取base64格式文件\nexport function getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = (error) => reject(error);\n  });\n}\n\n/**\n * 图片压缩，接受一个options参数，具体参数如下：\n * @param {string} data 图片数据 FileReader readAsDataURL方法得到的数据\n * @param {string} [type='image/jpeg'] 处理完之后的图片类型\n * @param {Number} [quality=0.8] 图片压缩比例\n * @returns {Promise}\n */\nexport function compressImage({ data, type = \"image/jpeg\", quality = 0.8 }) {\n  if (!data) return;\n  return new Promise((resolve, reject) => {\n    const canvas = document.createElement(\"canvas\");\n    const img = new Image();\n    img.onload = function () {\n      img.width *= quality;\n      img.height *= quality;\n      const ctx = canvas.getContext(\"2d\");\n      canvas.width = img.width;\n      canvas.height = img.height;\n\n      // canvas清屏\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // 将图像绘制到canvas上\n      ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n      // 必须等压缩完才读取canvas值，否则canvas内容是黑帆布\n      resolve(canvas.toDataURL(type));\n    };\n    img.onerror = reject;\n    // 记住必须先绑定事件，才能设置src属性，否则img没有内容可以画到canvas\n    img.src = data;\n  });\n}\n\n/**\n * 根据图片base64数据，获取图片文件实际大小，最终结果会有<3的偏差（比实际大1~3）\n * @param imageBase64Data\n * @returns {number}\n */\nexport function getImageSizeByBase64(imageBase64Data) {\n  let arr = imageBase64Data.split(\",\");\n  const base64Data = arr[1];\n  const fileSize = ((base64Data.length - 3) * 3) / 4;\n  return parseInt(fileSize) + 3;\n}\n\n/**\n * 将图片大约压缩到指定大小以下\n * @param {string} data 图片数据 FileReader readAsDataURL方法得到的数据\n * @param {string} [type='image/jpeg'] 处理完之后的图片类型\n * @param {Number} [size=300 * 1024] 压缩后大小\n * @param {Number} [qualityStep=0.9] 每次压缩比，数值越大越精确，但是压缩时间越长\n * @returns {Promise}\n */\nexport function compressImageToSize({\n  data,\n  type = \"image/jpeg\",\n  size = 300 * 1000, // 默认 300K左右\n  qualityStep = 0.9 // 每次压缩比\n}) {\n  if (getImageSizeByBase64(data) < size) {\n    return Promise.resolve(data);\n  }\n  const loopCompress = (d) => {\n    return compressImage({\n      data: d,\n      type,\n      quality: qualityStep\n    }).then(\n      (result) => {\n        if (getImageSizeByBase64(result) < size) {\n          return Promise.resolve(result);\n        }\n        return loopCompress(result);\n      },\n      (err) => Promise.reject(err)\n    );\n  };\n  return loopCompress(data);\n}\n\nfunction navigatorAgent(pattern) {\n  if (typeof window !== \"undefined\" && window.navigator) {\n    return !!navigator.userAgent.match(pattern);\n  }\n}\n\n// 获取当前浏览器内核\nexport const getNavigator = {\n  Edge: navigatorAgent(/Edge/i),\n  FireFox: navigatorAgent(/firefox/i),\n  Safari: navigatorAgent(/safari/i) && !navigatorAgent(/chrome/i) && !navigatorAgent(/android/i),\n  IOS: navigatorAgent(/iP(ad|od|hone)/i),\n  ChromeForAndroid: navigatorAgent(/chrome/i) && navigatorAgent(/android/i),\n  // Not needed on <= IE11\n  IE11OrLess: navigatorAgent(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i)\n};\n\n// 限制在一定范围内的数字\nexport function range2Scope(maxOrStart, end = null, step = null) {\n  if (!end) {\n    return Array.from({ length: maxOrStart }, (_, i) => i);\n  }\n\n  if (end <= maxOrStart) {\n    return [];\n  }\n\n  if (step !== null) {\n    return Array.from({ length: Math.ceil((end - maxOrStart) / step) }, (_, i) => i * step + maxOrStart);\n  }\n\n  return Array.from({ length: Math.ceil(end - maxOrStart) }, (_, i) => i + maxOrStart);\n}\n\n/**\n * 将数值四舍五入后格式化成金额形式\n * @param num 数值(Number或者String)\n * @param options 可选参数\n * @param options.prefix 金钱前缀，默认为空，一般为 ￥ 或 $\n * @param options.decimalNum 保留小数点个数，默认为2 一般为 0 1 2\n * @param options.splitSymbol 格式化分割符，默认为英文逗号，分隔符必须是单字符\n * @return 金额格式的字符串,如'￥1,234,567.45'\n * @type String\n */\nexport function formatCurrency(num, options = {}) {\n  let { decimalNum, splitSymbol } = options;\n  const { prefix = \"￥\" } = options;\n  let centsPercent = 100;\n  if (splitSymbol === undefined) splitSymbol = \",\";\n  if (decimalNum !== 0 && decimalNum !== 1 && decimalNum !== 2) decimalNum = 2;\n  if (decimalNum === 0) centsPercent = 1;\n  if (decimalNum === 1) centsPercent = 10;\n  num = num.toString().replace(/\\$|,/g, \"\");\n  if (isNaN(num)) num = \"0\";\n  const sign = num === Math.abs(num).toString() ? \"\" : \"-\";\n  num = Math.abs(num);\n  num = Math.floor(num * centsPercent + 0.50000000001);\n  let cents = num % centsPercent;\n  num = Math.floor(num / centsPercent).toString();\n  if (cents < 10 && decimalNum === 2) {\n    cents = `0${cents}`;\n  }\n  for (let i = 0; i < Math.floor((num.length - (1 + i)) / 3); i++) {\n    const endPosition = 4 * i + 3;\n    num = num.substring(0, num.length - endPosition) + splitSymbol + num.substring(num.length - endPosition);\n  }\n  if (decimalNum === 0) {\n    return prefix + sign + num;\n  }\n  return `${prefix}${sign}${num}.${cents}`;\n}\n\n// 轮询\nexport async function poll(fn, validate, interval = 2500) {\n  const resolver = async (resolve, reject) => {\n    try {\n      // fn does not need to be asynchronous or return promise\n      // call validator to see if the data is at the state to stop the polling\n      const result = await fn();\n      const valid = validate(result);\n      if (valid === true) {\n        resolve(result);\n      } else if (valid === false) {\n        setTimeout(resolver, interval, resolve, reject);\n      }\n    } catch (e) {\n      reject(e);\n    }\n  };\n  return new Promise(resolver);\n}\n"]},"metadata":{},"sourceType":"module"}